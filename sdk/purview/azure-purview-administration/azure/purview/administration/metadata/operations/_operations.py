# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import sys
from typing import Any, Callable, Dict, IO, Iterable, Optional, TypeVar, Union, cast, overload

from msrest import Serializer

from azure.core.exceptions import ClientAuthenticationError, HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.paging import ItemPaged
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import HttpResponse
from azure.core.rest import HttpRequest
from azure.core.tracing.decorator import distributed_trace
from azure.core.utils import case_insensitive_dict

from .._vendor import _format_url_section
if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
JSON = MutableMapping[str, Any] # pylint: disable=unsubscriptable-object
T = TypeVar('T')
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, HttpResponse], T, Dict[str, Any]], Any]]

_SERIALIZER = Serializer()
_SERIALIZER.client_side_validation = False

def build_accounts_get_account_properties_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_accounts_update_account_properties_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="PATCH",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_accounts_get_access_keys_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/listkeys"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_accounts_regenerate_access_key_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/regeneratekeys"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_collections_get_collection_request(
    collection_name: str,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/collections/{collectionName}"
    path_format_arguments = {
        "collectionName": _SERIALIZER.url("collection_name", collection_name, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_collections_create_or_update_collection_request(
    collection_name: str,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/collections/{collectionName}"
    path_format_arguments = {
        "collectionName": _SERIALIZER.url("collection_name", collection_name, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_collections_delete_collection_request(
    collection_name: str,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/collections/{collectionName}"
    path_format_arguments = {
        "collectionName": _SERIALIZER.url("collection_name", collection_name, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="DELETE",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_collections_list_collections_request(
    *,
    skip_token: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/collections"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')
    if skip_token is not None:
        _params['$skipToken'] = _SERIALIZER.query("skip_token", skip_token, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_collections_list_child_collection_names_request(
    collection_name: str,
    *,
    skip_token: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/collections/{collectionName}/getChildCollectionNames"
    path_format_arguments = {
        "collectionName": _SERIALIZER.url("collection_name", collection_name, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')
    if skip_token is not None:
        _params['$skipToken'] = _SERIALIZER.query("skip_token", skip_token, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_collections_get_collection_path_request(
    collection_name: str,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/collections/{collectionName}/getCollectionPath"
    path_format_arguments = {
        "collectionName": _SERIALIZER.url("collection_name", collection_name, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_resource_set_rules_get_resource_set_rule_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/resourceSetRuleConfigs/defaultResourceSetRuleConfig"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_resource_set_rules_create_or_update_resource_set_rule_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/resourceSetRuleConfigs/defaultResourceSetRuleConfig"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_resource_set_rules_delete_resource_set_rule_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/resourceSetRuleConfigs/defaultResourceSetRuleConfig"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="DELETE",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_resource_set_rules_list_resource_set_rules_request(
    *,
    skip_token: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2019-11-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/resourceSetRuleConfigs"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')
    if skip_token is not None:
        _params['$skipToken'] = _SERIALIZER.query("skip_token", skip_token, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_metadata_roles_list_request(
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2021-07-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/metadataRoles"

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_metadata_policy_list_all_request(
    *,
    collection_name: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2021-07-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/metadataPolicies"

    # Construct parameters
    if collection_name is not None:
        _params['collectionName'] = _SERIALIZER.query("collection_name", collection_name, 'str')
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_metadata_policy_update_request(
    policy_id: str,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2021-07-01-preview"))  # type: str
    content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/metadataPolicies/{policyId}"
    path_format_arguments = {
        "policyId": _SERIALIZER.url("policy_id", policy_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    if content_type is not None:
        _headers['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="PUT",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )


def build_metadata_policy_get_request(
    policy_id: str,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    api_version = kwargs.pop('api_version', _params.pop('api-version', "2021-07-01-preview"))  # type: str
    accept = _headers.pop('Accept', "application/json")

    # Construct URL
    _url = "/metadataPolicies/{policyId}"
    path_format_arguments = {
        "policyId": _SERIALIZER.url("policy_id", policy_id, 'str'),
    }

    _url = _format_url_section(_url, **path_format_arguments)

    # Construct parameters
    _params['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    _headers['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=_url,
        params=_params,
        headers=_headers,
        **kwargs
    )

class AccountsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.purview.administration.metadata.PurviewMetadataClient`'s
        :attr:`accounts` attribute.
    """

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def get_account_properties(
        self,
        **kwargs: Any
    ) -> JSON:
        """Get an account.

        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. Gets or sets the identifier.
                    "identity": {
                        "principalId": "str",  # Optional. Service principal object Id.
                        "tenantId": "str",  # Optional. Tenant Id.
                        "type": "str"  # Optional. Identity Type. "SystemAssigned"
                    },
                    "location": "str",  # Optional. Gets or sets the location.
                    "name": "str",  # Optional. Gets or sets the name.
                    "properties": {
                        "cloudConnectors": {
                            "awsExternalId": "str"  # Optional. AWS external
                              identifier."nConfigured in AWS to allow use of the role arn used for
                              scanning.
                        },
                        "createdAt": "2020-02-20 00:00:00",  # Optional. Gets the time at
                          which the entity was created.
                        "createdBy": "str",  # Optional. Gets the creator of the entity.
                        "createdByObjectId": "str",  # Optional. Gets the creators of the
                          entity's object id.
                        "endpoints": {
                            "catalog": "str",  # Optional. Gets the catalog endpoint.
                            "guardian": "str",  # Optional. Gets the guardian endpoint.
                            "scan": "str"  # Optional. Gets the scan endpoint.
                        },
                        "friendlyName": "str",  # Optional. Gets or sets the friendly name.
                        "managedResourceGroupName": "str",  # Optional. Gets or sets the
                          managed resource group name.
                        "managedResources": {
                            "eventHubNamespace": "str",  # Optional. Gets the managed
                              event hub namespace resource identifier.
                            "resourceGroup": "str",  # Optional. Gets the managed
                              resource group resource identifier. This resource group will host
                              resource dependencies for the account.
                            "storageAccount": "str"  # Optional. Gets the managed storage
                              account resource identifier.
                        },
                        "privateEndpointConnections": [
                            {
                                "id": "str",  # Optional. Gets or sets the
                                  identifier.
                                "name": "str",  # Optional. Gets or sets the name.
                                "properties": {
                                    "privateEndpoint": {
                                        "id": "str"  # Optional. The private
                                          endpoint identifier.
                                    },
                                    "privateLinkServiceConnectionState": {
                                        "actionsRequired": "str",  #
                                          Optional. The required actions.
                                        "description": "str",  # Optional.
                                          The description.
                                        "status": "str"  # Optional. The
                                          status. Known values are: "Unknown", "Pending", "Approved",
                                          "Rejected", and "Disconnected".
                                    },
                                    "provisioningState": "str"  # Optional. The
                                      provisioning state.
                                },
                                "type": "str"  # Optional. Gets or sets the type.
                            }
                        ],
                        "provisioningState": "str",  # Optional. Gets or sets the state of
                          the provisioning. Known values are: "Unknown", "Creating", "Moving",
                          "Deleting", "SoftDeleting", "SoftDeleted", "Failed", "Succeeded", and
                          "Canceled".
                        "publicNetworkAccess": "Enabled"  # Optional. Default value is
                          "Enabled". Gets or sets the public network access. Known values are:
                          "NotSpecified", "Enabled", and "Disabled".
                    },
                    "sku": {
                        "capacity": 0,  # Optional. Gets or sets the sku capacity. Possible
                          values include: 4, 16.
                        "name": "str"  # Optional. Gets or sets the sku name. "Standard"
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "tags": {
                        "str": "str"  # Optional. Tags on the azure resource.
                    },
                    "type": "str"  # Optional. Gets or sets the type.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_accounts_get_account_properties_request(
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    def update_account_properties(
        self,
        account_update_parameters: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Updates an account.

        :param account_update_parameters: Required.
        :type account_update_parameters: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                account_update_parameters = {
                    "friendlyName": "str"  # Optional. The friendly name for the azure resource.
                }

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. Gets or sets the identifier.
                    "identity": {
                        "principalId": "str",  # Optional. Service principal object Id.
                        "tenantId": "str",  # Optional. Tenant Id.
                        "type": "str"  # Optional. Identity Type. "SystemAssigned"
                    },
                    "location": "str",  # Optional. Gets or sets the location.
                    "name": "str",  # Optional. Gets or sets the name.
                    "properties": {
                        "cloudConnectors": {
                            "awsExternalId": "str"  # Optional. AWS external
                              identifier."nConfigured in AWS to allow use of the role arn used for
                              scanning.
                        },
                        "createdAt": "2020-02-20 00:00:00",  # Optional. Gets the time at
                          which the entity was created.
                        "createdBy": "str",  # Optional. Gets the creator of the entity.
                        "createdByObjectId": "str",  # Optional. Gets the creators of the
                          entity's object id.
                        "endpoints": {
                            "catalog": "str",  # Optional. Gets the catalog endpoint.
                            "guardian": "str",  # Optional. Gets the guardian endpoint.
                            "scan": "str"  # Optional. Gets the scan endpoint.
                        },
                        "friendlyName": "str",  # Optional. Gets or sets the friendly name.
                        "managedResourceGroupName": "str",  # Optional. Gets or sets the
                          managed resource group name.
                        "managedResources": {
                            "eventHubNamespace": "str",  # Optional. Gets the managed
                              event hub namespace resource identifier.
                            "resourceGroup": "str",  # Optional. Gets the managed
                              resource group resource identifier. This resource group will host
                              resource dependencies for the account.
                            "storageAccount": "str"  # Optional. Gets the managed storage
                              account resource identifier.
                        },
                        "privateEndpointConnections": [
                            {
                                "id": "str",  # Optional. Gets or sets the
                                  identifier.
                                "name": "str",  # Optional. Gets or sets the name.
                                "properties": {
                                    "privateEndpoint": {
                                        "id": "str"  # Optional. The private
                                          endpoint identifier.
                                    },
                                    "privateLinkServiceConnectionState": {
                                        "actionsRequired": "str",  #
                                          Optional. The required actions.
                                        "description": "str",  # Optional.
                                          The description.
                                        "status": "str"  # Optional. The
                                          status. Known values are: "Unknown", "Pending", "Approved",
                                          "Rejected", and "Disconnected".
                                    },
                                    "provisioningState": "str"  # Optional. The
                                      provisioning state.
                                },
                                "type": "str"  # Optional. Gets or sets the type.
                            }
                        ],
                        "provisioningState": "str",  # Optional. Gets or sets the state of
                          the provisioning. Known values are: "Unknown", "Creating", "Moving",
                          "Deleting", "SoftDeleting", "SoftDeleted", "Failed", "Succeeded", and
                          "Canceled".
                        "publicNetworkAccess": "Enabled"  # Optional. Default value is
                          "Enabled". Gets or sets the public network access. Known values are:
                          "NotSpecified", "Enabled", and "Disabled".
                    },
                    "sku": {
                        "capacity": 0,  # Optional. Gets or sets the sku capacity. Possible
                          values include: 4, 16.
                        "name": "str"  # Optional. Gets or sets the sku name. "Standard"
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "tags": {
                        "str": "str"  # Optional. Tags on the azure resource.
                    },
                    "type": "str"  # Optional. Gets or sets the type.
                }
        """

    @overload
    def update_account_properties(
        self,
        account_update_parameters: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Updates an account.

        :param account_update_parameters: Required.
        :type account_update_parameters: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. Gets or sets the identifier.
                    "identity": {
                        "principalId": "str",  # Optional. Service principal object Id.
                        "tenantId": "str",  # Optional. Tenant Id.
                        "type": "str"  # Optional. Identity Type. "SystemAssigned"
                    },
                    "location": "str",  # Optional. Gets or sets the location.
                    "name": "str",  # Optional. Gets or sets the name.
                    "properties": {
                        "cloudConnectors": {
                            "awsExternalId": "str"  # Optional. AWS external
                              identifier."nConfigured in AWS to allow use of the role arn used for
                              scanning.
                        },
                        "createdAt": "2020-02-20 00:00:00",  # Optional. Gets the time at
                          which the entity was created.
                        "createdBy": "str",  # Optional. Gets the creator of the entity.
                        "createdByObjectId": "str",  # Optional. Gets the creators of the
                          entity's object id.
                        "endpoints": {
                            "catalog": "str",  # Optional. Gets the catalog endpoint.
                            "guardian": "str",  # Optional. Gets the guardian endpoint.
                            "scan": "str"  # Optional. Gets the scan endpoint.
                        },
                        "friendlyName": "str",  # Optional. Gets or sets the friendly name.
                        "managedResourceGroupName": "str",  # Optional. Gets or sets the
                          managed resource group name.
                        "managedResources": {
                            "eventHubNamespace": "str",  # Optional. Gets the managed
                              event hub namespace resource identifier.
                            "resourceGroup": "str",  # Optional. Gets the managed
                              resource group resource identifier. This resource group will host
                              resource dependencies for the account.
                            "storageAccount": "str"  # Optional. Gets the managed storage
                              account resource identifier.
                        },
                        "privateEndpointConnections": [
                            {
                                "id": "str",  # Optional. Gets or sets the
                                  identifier.
                                "name": "str",  # Optional. Gets or sets the name.
                                "properties": {
                                    "privateEndpoint": {
                                        "id": "str"  # Optional. The private
                                          endpoint identifier.
                                    },
                                    "privateLinkServiceConnectionState": {
                                        "actionsRequired": "str",  #
                                          Optional. The required actions.
                                        "description": "str",  # Optional.
                                          The description.
                                        "status": "str"  # Optional. The
                                          status. Known values are: "Unknown", "Pending", "Approved",
                                          "Rejected", and "Disconnected".
                                    },
                                    "provisioningState": "str"  # Optional. The
                                      provisioning state.
                                },
                                "type": "str"  # Optional. Gets or sets the type.
                            }
                        ],
                        "provisioningState": "str",  # Optional. Gets or sets the state of
                          the provisioning. Known values are: "Unknown", "Creating", "Moving",
                          "Deleting", "SoftDeleting", "SoftDeleted", "Failed", "Succeeded", and
                          "Canceled".
                        "publicNetworkAccess": "Enabled"  # Optional. Default value is
                          "Enabled". Gets or sets the public network access. Known values are:
                          "NotSpecified", "Enabled", and "Disabled".
                    },
                    "sku": {
                        "capacity": 0,  # Optional. Gets or sets the sku capacity. Possible
                          values include: 4, 16.
                        "name": "str"  # Optional. Gets or sets the sku name. "Standard"
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "tags": {
                        "str": "str"  # Optional. Tags on the azure resource.
                    },
                    "type": "str"  # Optional. Gets or sets the type.
                }
        """


    @distributed_trace
    def update_account_properties(
        self,
        account_update_parameters: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Updates an account.

        :param account_update_parameters: Is either a model type or a IO type. Required.
        :type account_update_parameters: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. Gets or sets the identifier.
                    "identity": {
                        "principalId": "str",  # Optional. Service principal object Id.
                        "tenantId": "str",  # Optional. Tenant Id.
                        "type": "str"  # Optional. Identity Type. "SystemAssigned"
                    },
                    "location": "str",  # Optional. Gets or sets the location.
                    "name": "str",  # Optional. Gets or sets the name.
                    "properties": {
                        "cloudConnectors": {
                            "awsExternalId": "str"  # Optional. AWS external
                              identifier."nConfigured in AWS to allow use of the role arn used for
                              scanning.
                        },
                        "createdAt": "2020-02-20 00:00:00",  # Optional. Gets the time at
                          which the entity was created.
                        "createdBy": "str",  # Optional. Gets the creator of the entity.
                        "createdByObjectId": "str",  # Optional. Gets the creators of the
                          entity's object id.
                        "endpoints": {
                            "catalog": "str",  # Optional. Gets the catalog endpoint.
                            "guardian": "str",  # Optional. Gets the guardian endpoint.
                            "scan": "str"  # Optional. Gets the scan endpoint.
                        },
                        "friendlyName": "str",  # Optional. Gets or sets the friendly name.
                        "managedResourceGroupName": "str",  # Optional. Gets or sets the
                          managed resource group name.
                        "managedResources": {
                            "eventHubNamespace": "str",  # Optional. Gets the managed
                              event hub namespace resource identifier.
                            "resourceGroup": "str",  # Optional. Gets the managed
                              resource group resource identifier. This resource group will host
                              resource dependencies for the account.
                            "storageAccount": "str"  # Optional. Gets the managed storage
                              account resource identifier.
                        },
                        "privateEndpointConnections": [
                            {
                                "id": "str",  # Optional. Gets or sets the
                                  identifier.
                                "name": "str",  # Optional. Gets or sets the name.
                                "properties": {
                                    "privateEndpoint": {
                                        "id": "str"  # Optional. The private
                                          endpoint identifier.
                                    },
                                    "privateLinkServiceConnectionState": {
                                        "actionsRequired": "str",  #
                                          Optional. The required actions.
                                        "description": "str",  # Optional.
                                          The description.
                                        "status": "str"  # Optional. The
                                          status. Known values are: "Unknown", "Pending", "Approved",
                                          "Rejected", and "Disconnected".
                                    },
                                    "provisioningState": "str"  # Optional. The
                                      provisioning state.
                                },
                                "type": "str"  # Optional. Gets or sets the type.
                            }
                        ],
                        "provisioningState": "str",  # Optional. Gets or sets the state of
                          the provisioning. Known values are: "Unknown", "Creating", "Moving",
                          "Deleting", "SoftDeleting", "SoftDeleted", "Failed", "Succeeded", and
                          "Canceled".
                        "publicNetworkAccess": "Enabled"  # Optional. Default value is
                          "Enabled". Gets or sets the public network access. Known values are:
                          "NotSpecified", "Enabled", and "Disabled".
                    },
                    "sku": {
                        "capacity": 0,  # Optional. Gets or sets the sku capacity. Possible
                          values include: 4, 16.
                        "name": "str"  # Optional. Gets or sets the sku name. "Standard"
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    },
                    "tags": {
                        "str": "str"  # Optional. Tags on the azure resource.
                    },
                    "type": "str"  # Optional. Gets or sets the type.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(account_update_parameters, (IO, bytes)):
            _content = account_update_parameters
        else:
            _json = account_update_parameters

        request = build_accounts_update_account_properties_request(
            api_version=api_version,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace
    def get_access_keys(
        self,
        **kwargs: Any
    ) -> JSON:
        """List the authorization keys associated with this account.

        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "atlasKafkaPrimaryEndpoint": "str",  # Optional. Gets or sets the primary
                      connection string.
                    "atlasKafkaSecondaryEndpoint": "str"  # Optional. Gets or sets the secondary
                      connection string.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_accounts_get_access_keys_request(
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    def regenerate_access_key(
        self,
        key_options: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Regenerate the authorization keys associated with this data catalog.

        :param key_options: Required.
        :type key_options: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                key_options = {
                    "keyType": "str"  # Optional. The access key type. Known values are:
                      "PrimaryAtlasKafkaKey" and "SecondaryAtlasKafkaKey".
                }

                # response body for status code(s): 200
                response.json() == {
                    "atlasKafkaPrimaryEndpoint": "str",  # Optional. Gets or sets the primary
                      connection string.
                    "atlasKafkaSecondaryEndpoint": "str"  # Optional. Gets or sets the secondary
                      connection string.
                }
        """

    @overload
    def regenerate_access_key(
        self,
        key_options: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Regenerate the authorization keys associated with this data catalog.

        :param key_options: Required.
        :type key_options: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "atlasKafkaPrimaryEndpoint": "str",  # Optional. Gets or sets the primary
                      connection string.
                    "atlasKafkaSecondaryEndpoint": "str"  # Optional. Gets or sets the secondary
                      connection string.
                }
        """


    @distributed_trace
    def regenerate_access_key(
        self,
        key_options: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Regenerate the authorization keys associated with this data catalog.

        :param key_options: Is either a model type or a IO type. Required.
        :type key_options: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "atlasKafkaPrimaryEndpoint": "str",  # Optional. Gets or sets the primary
                      connection string.
                    "atlasKafkaSecondaryEndpoint": "str"  # Optional. Gets or sets the secondary
                      connection string.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(key_options, (IO, bytes)):
            _content = key_options
        else:
            _json = key_options

        request = build_accounts_regenerate_access_key_request(
            api_version=api_version,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class CollectionsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.purview.administration.metadata.PurviewMetadataClient`'s
        :attr:`collections` attribute.
    """

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def get_collection(
        self,
        collection_name: str,
        **kwargs: Any
    ) -> JSON:
        """Get a collection.

        :param collection_name: Required.
        :type collection_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "collectionProvisioningState": "str",  # Optional. Gets the state of the
                      provisioning. Known values are: "Unknown", "Creating", "Moving", "Deleting",
                      "Failed", and "Succeeded".
                    "description": "str",  # Optional. Gets or sets the description.
                    "friendlyName": "str",  # Optional. Gets or sets the friendly name of the
                      collection.
                    "name": "str",  # Optional. Gets the name.
                    "parentCollection": {
                        "referenceName": "str",  # Optional. Gets or sets the reference name.
                        "type": "str"  # Optional. Gets or sets the reference type property.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    }
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_collections_get_collection_request(
            collection_name=collection_name,
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    def create_or_update_collection(
        self,
        collection_name: str,
        collection: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates a collection entity.

        :param collection_name: Required.
        :type collection_name: str
        :param collection: Required.
        :type collection: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                collection = {
                    "collectionProvisioningState": "str",  # Optional. Gets the state of the
                      provisioning. Known values are: "Unknown", "Creating", "Moving", "Deleting",
                      "Failed", and "Succeeded".
                    "description": "str",  # Optional. Gets or sets the description.
                    "friendlyName": "str",  # Optional. Gets or sets the friendly name of the
                      collection.
                    "name": "str",  # Optional. Gets the name.
                    "parentCollection": {
                        "referenceName": "str",  # Optional. Gets or sets the reference name.
                        "type": "str"  # Optional. Gets or sets the reference type property.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    }
                }

                # response body for status code(s): 200
                response.json() == {
                    "collectionProvisioningState": "str",  # Optional. Gets the state of the
                      provisioning. Known values are: "Unknown", "Creating", "Moving", "Deleting",
                      "Failed", and "Succeeded".
                    "description": "str",  # Optional. Gets or sets the description.
                    "friendlyName": "str",  # Optional. Gets or sets the friendly name of the
                      collection.
                    "name": "str",  # Optional. Gets the name.
                    "parentCollection": {
                        "referenceName": "str",  # Optional. Gets or sets the reference name.
                        "type": "str"  # Optional. Gets or sets the reference type property.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    }
                }
        """

    @overload
    def create_or_update_collection(
        self,
        collection_name: str,
        collection: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates a collection entity.

        :param collection_name: Required.
        :type collection_name: str
        :param collection: Required.
        :type collection: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "collectionProvisioningState": "str",  # Optional. Gets the state of the
                      provisioning. Known values are: "Unknown", "Creating", "Moving", "Deleting",
                      "Failed", and "Succeeded".
                    "description": "str",  # Optional. Gets or sets the description.
                    "friendlyName": "str",  # Optional. Gets or sets the friendly name of the
                      collection.
                    "name": "str",  # Optional. Gets the name.
                    "parentCollection": {
                        "referenceName": "str",  # Optional. Gets or sets the reference name.
                        "type": "str"  # Optional. Gets or sets the reference type property.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    }
                }
        """


    @distributed_trace
    def create_or_update_collection(
        self,
        collection_name: str,
        collection: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates a collection entity.

        :param collection_name: Required.
        :type collection_name: str
        :param collection: Is either a model type or a IO type. Required.
        :type collection: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "collectionProvisioningState": "str",  # Optional. Gets the state of the
                      provisioning. Known values are: "Unknown", "Creating", "Moving", "Deleting",
                      "Failed", and "Succeeded".
                    "description": "str",  # Optional. Gets or sets the description.
                    "friendlyName": "str",  # Optional. Gets or sets the friendly name of the
                      collection.
                    "name": "str",  # Optional. Gets the name.
                    "parentCollection": {
                        "referenceName": "str",  # Optional. Gets or sets the reference name.
                        "type": "str"  # Optional. Gets or sets the reference type property.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    }
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(collection, (IO, bytes)):
            _content = collection
        else:
            _json = collection

        request = build_collections_create_or_update_collection_request(
            collection_name=collection_name,
            api_version=api_version,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace
    def delete_collection(  # pylint: disable=inconsistent-return-statements
        self,
        collection_name: str,
        **kwargs: Any
    ) -> None:
        """Deletes a Collection entity.

        :param collection_name: Required.
        :type collection_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_collections_delete_collection_request(
            collection_name=collection_name,
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if cls:
            return cls(pipeline_response, None, {})



    @distributed_trace
    def list_collections(
        self,
        *,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """List the collections in the account.

        :keyword skip_token: Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "collectionProvisioningState": "str",  # Optional. Gets the state of the
                      provisioning. Known values are: "Unknown", "Creating", "Moving", "Deleting",
                      "Failed", and "Succeeded".
                    "description": "str",  # Optional. Gets or sets the description.
                    "friendlyName": "str",  # Optional. Gets or sets the friendly name of the
                      collection.
                    "name": "str",  # Optional. Gets the name.
                    "parentCollection": {
                        "referenceName": "str",  # Optional. Gets or sets the reference name.
                        "type": "str"  # Optional. Gets or sets the reference type property.
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",  # Optional. The timestamp of
                          resource creation (UTC).
                        "createdBy": "str",  # Optional. The identity that created the
                          resource.
                        "createdByType": "str",  # Optional. The type of identity that
                          created the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                        "lastModifiedAt": "2020-02-20 00:00:00",  # Optional. The timestamp
                          of the last modification the resource (UTC).
                        "lastModifiedBy": "str",  # Optional. The identity that last modified
                          the resource.
                        "lastModifiedByType": "str"  # Optional. The type of identity that
                          last modified the resource. Known values are: "User", "Application",
                          "ManagedIdentity", and "Key".
                    }
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_collections_list_collections_request(
                    skip_token=skip_token,
                    api_version=api_version,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_collections_list_collections_request(
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )


    @distributed_trace
    def list_child_collection_names(
        self,
        collection_name: str,
        *,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """Lists the child collections names in the collection.

        :param collection_name: Required.
        :type collection_name: str
        :keyword skip_token: Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "friendlyName": "str",  # Optional. Gets or sets the friendly name of the
                      collection.
                    "name": "str"  # Optional. Gets the name.
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_collections_list_child_collection_names_request(
                    collection_name=collection_name,
                    skip_token=skip_token,
                    api_version=api_version,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_collections_list_child_collection_names_request(
                    collection_name=collection_name,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )


    @distributed_trace
    def get_collection_path(
        self,
        collection_name: str,
        **kwargs: Any
    ) -> JSON:
        """Gets the parent name and parent friendly name chains that represent the collection path.

        :param collection_name: Required.
        :type collection_name: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "parentFriendlyNameChain": [
                        "str"  # Optional. The friendly names of ancestors starting from the
                          default (root) collection and ending with the immediate parent.
                    ],
                    "parentNameChain": [
                        "str"  # Optional. The names of ancestors starting from the default
                          (root) collection and ending with the immediate parent.
                    ]
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_collections_get_collection_path_request(
            collection_name=collection_name,
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


class ResourceSetRulesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.purview.administration.metadata.PurviewMetadataClient`'s
        :attr:`resource_set_rules` attribute.
    """

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def get_resource_set_rule(
        self,
        **kwargs: Any
    ) -> JSON:
        """Get a resource set config service model.

        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "advancedResourceSet": {
                        "modifiedAt": "2020-02-20 00:00:00",  # Optional. Date at which
                          ResourceSetProcessing property of the account is updated.
                        "resourceSetProcessing": "str"  # Optional. The advanced resource
                          property of the account. Known values are: "Default" and "Advanced".
                    },
                    "name": "str",  # Optional. The name of the rule.
                    "pathPatternConfig": {
                        "acceptedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "complexReplacers": [
                            {
                                "createdBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "typeName": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "createdBy": "str",  # Required.
                        "enableDefaultPatterns": bool,  # Required.
                        "lastUpdatedTimestamp": 0,  # Optional. The configuration rules for
                          path pattern extraction.
                        "modifiedBy": "AzureDataCatalog",  # Optional. Default value is
                          "AzureDataCatalog". The configuration rules for path pattern extraction.
                        "normalizationRules": [
                            {
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "dynamicReplacement": bool,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "entityTypes": [
                                    "str"  # Optional. The configuration rules
                                      for path pattern extraction.
                                ],
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "version": 0.0  # Optional. The configuration rules
                                  for path pattern extraction.
                            }
                        ],
                        "regexReplacers": [
                            {
                                "condition": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Required.
                                "doNotReplaceRegex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "rejectedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "scopedRules": [
                            {
                                "bindingUrl": "str",  # Required.
                                "rules": [
                                    {
                                        "displayName": "str",  # Optional.
                                          The configuration rules for path pattern extraction.
                                        "isResourceSet": True,  # Optional.
                                          Default value is True. The configuration rules for path
                                          pattern extraction.
                                        "lastUpdatedTimestamp": 0,  #
                                          Optional. The configuration rules for path pattern
                                          extraction.
                                        "name": "str",  # Optional. The
                                          configuration rules for path pattern extraction.
                                        "qualifiedName": "str"  # Required.
                                    }
                                ],
                                "storeType": "str"  # Required.
                            }
                        ],
                        "version": 0  # Optional. Default value is 0. The configuration rules
                          for path pattern extraction.
                    }
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_resource_set_rules_get_resource_set_rule_request(
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @overload
    def create_or_update_resource_set_rule(
        self,
        resource_set_rule_config: JSON,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates an resource set config.

        :param resource_set_rule_config: Required.
        :type resource_set_rule_config: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                resource_set_rule_config = {
                    "advancedResourceSet": {
                        "modifiedAt": "2020-02-20 00:00:00",  # Optional. Date at which
                          ResourceSetProcessing property of the account is updated.
                        "resourceSetProcessing": "str"  # Optional. The advanced resource
                          property of the account. Known values are: "Default" and "Advanced".
                    },
                    "name": "str",  # Optional. The name of the rule.
                    "pathPatternConfig": {
                        "acceptedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "complexReplacers": [
                            {
                                "createdBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "typeName": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "createdBy": "str",  # Required.
                        "enableDefaultPatterns": bool,  # Required.
                        "lastUpdatedTimestamp": 0,  # Optional. The configuration rules for
                          path pattern extraction.
                        "modifiedBy": "AzureDataCatalog",  # Optional. Default value is
                          "AzureDataCatalog". The configuration rules for path pattern extraction.
                        "normalizationRules": [
                            {
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "dynamicReplacement": bool,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "entityTypes": [
                                    "str"  # Optional. The configuration rules
                                      for path pattern extraction.
                                ],
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "version": 0.0  # Optional. The configuration rules
                                  for path pattern extraction.
                            }
                        ],
                        "regexReplacers": [
                            {
                                "condition": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Required.
                                "doNotReplaceRegex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "rejectedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "scopedRules": [
                            {
                                "bindingUrl": "str",  # Required.
                                "rules": [
                                    {
                                        "displayName": "str",  # Optional.
                                          The configuration rules for path pattern extraction.
                                        "isResourceSet": True,  # Optional.
                                          Default value is True. The configuration rules for path
                                          pattern extraction.
                                        "lastUpdatedTimestamp": 0,  #
                                          Optional. The configuration rules for path pattern
                                          extraction.
                                        "name": "str",  # Optional. The
                                          configuration rules for path pattern extraction.
                                        "qualifiedName": "str"  # Required.
                                    }
                                ],
                                "storeType": "str"  # Required.
                            }
                        ],
                        "version": 0  # Optional. Default value is 0. The configuration rules
                          for path pattern extraction.
                    }
                }

                # response body for status code(s): 200
                response.json() == {
                    "advancedResourceSet": {
                        "modifiedAt": "2020-02-20 00:00:00",  # Optional. Date at which
                          ResourceSetProcessing property of the account is updated.
                        "resourceSetProcessing": "str"  # Optional. The advanced resource
                          property of the account. Known values are: "Default" and "Advanced".
                    },
                    "name": "str",  # Optional. The name of the rule.
                    "pathPatternConfig": {
                        "acceptedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "complexReplacers": [
                            {
                                "createdBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "typeName": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "createdBy": "str",  # Required.
                        "enableDefaultPatterns": bool,  # Required.
                        "lastUpdatedTimestamp": 0,  # Optional. The configuration rules for
                          path pattern extraction.
                        "modifiedBy": "AzureDataCatalog",  # Optional. Default value is
                          "AzureDataCatalog". The configuration rules for path pattern extraction.
                        "normalizationRules": [
                            {
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "dynamicReplacement": bool,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "entityTypes": [
                                    "str"  # Optional. The configuration rules
                                      for path pattern extraction.
                                ],
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "version": 0.0  # Optional. The configuration rules
                                  for path pattern extraction.
                            }
                        ],
                        "regexReplacers": [
                            {
                                "condition": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Required.
                                "doNotReplaceRegex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "rejectedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "scopedRules": [
                            {
                                "bindingUrl": "str",  # Required.
                                "rules": [
                                    {
                                        "displayName": "str",  # Optional.
                                          The configuration rules for path pattern extraction.
                                        "isResourceSet": True,  # Optional.
                                          Default value is True. The configuration rules for path
                                          pattern extraction.
                                        "lastUpdatedTimestamp": 0,  #
                                          Optional. The configuration rules for path pattern
                                          extraction.
                                        "name": "str",  # Optional. The
                                          configuration rules for path pattern extraction.
                                        "qualifiedName": "str"  # Required.
                                    }
                                ],
                                "storeType": "str"  # Required.
                            }
                        ],
                        "version": 0  # Optional. Default value is 0. The configuration rules
                          for path pattern extraction.
                    }
                }
        """

    @overload
    def create_or_update_resource_set_rule(
        self,
        resource_set_rule_config: IO,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Creates or updates an resource set config.

        :param resource_set_rule_config: Required.
        :type resource_set_rule_config: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "advancedResourceSet": {
                        "modifiedAt": "2020-02-20 00:00:00",  # Optional. Date at which
                          ResourceSetProcessing property of the account is updated.
                        "resourceSetProcessing": "str"  # Optional. The advanced resource
                          property of the account. Known values are: "Default" and "Advanced".
                    },
                    "name": "str",  # Optional. The name of the rule.
                    "pathPatternConfig": {
                        "acceptedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "complexReplacers": [
                            {
                                "createdBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "typeName": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "createdBy": "str",  # Required.
                        "enableDefaultPatterns": bool,  # Required.
                        "lastUpdatedTimestamp": 0,  # Optional. The configuration rules for
                          path pattern extraction.
                        "modifiedBy": "AzureDataCatalog",  # Optional. Default value is
                          "AzureDataCatalog". The configuration rules for path pattern extraction.
                        "normalizationRules": [
                            {
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "dynamicReplacement": bool,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "entityTypes": [
                                    "str"  # Optional. The configuration rules
                                      for path pattern extraction.
                                ],
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "version": 0.0  # Optional. The configuration rules
                                  for path pattern extraction.
                            }
                        ],
                        "regexReplacers": [
                            {
                                "condition": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Required.
                                "doNotReplaceRegex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "rejectedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "scopedRules": [
                            {
                                "bindingUrl": "str",  # Required.
                                "rules": [
                                    {
                                        "displayName": "str",  # Optional.
                                          The configuration rules for path pattern extraction.
                                        "isResourceSet": True,  # Optional.
                                          Default value is True. The configuration rules for path
                                          pattern extraction.
                                        "lastUpdatedTimestamp": 0,  #
                                          Optional. The configuration rules for path pattern
                                          extraction.
                                        "name": "str",  # Optional. The
                                          configuration rules for path pattern extraction.
                                        "qualifiedName": "str"  # Required.
                                    }
                                ],
                                "storeType": "str"  # Required.
                            }
                        ],
                        "version": 0  # Optional. Default value is 0. The configuration rules
                          for path pattern extraction.
                    }
                }
        """


    @distributed_trace
    def create_or_update_resource_set_rule(
        self,
        resource_set_rule_config: Union[JSON, IO],
        **kwargs: Any
    ) -> JSON:
        """Creates or updates an resource set config.

        :param resource_set_rule_config: Is either a model type or a IO type. Required.
        :type resource_set_rule_config: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "advancedResourceSet": {
                        "modifiedAt": "2020-02-20 00:00:00",  # Optional. Date at which
                          ResourceSetProcessing property of the account is updated.
                        "resourceSetProcessing": "str"  # Optional. The advanced resource
                          property of the account. Known values are: "Default" and "Advanced".
                    },
                    "name": "str",  # Optional. The name of the rule.
                    "pathPatternConfig": {
                        "acceptedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "complexReplacers": [
                            {
                                "createdBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "typeName": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "createdBy": "str",  # Required.
                        "enableDefaultPatterns": bool,  # Required.
                        "lastUpdatedTimestamp": 0,  # Optional. The configuration rules for
                          path pattern extraction.
                        "modifiedBy": "AzureDataCatalog",  # Optional. Default value is
                          "AzureDataCatalog". The configuration rules for path pattern extraction.
                        "normalizationRules": [
                            {
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "dynamicReplacement": bool,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "entityTypes": [
                                    "str"  # Optional. The configuration rules
                                      for path pattern extraction.
                                ],
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "version": 0.0  # Optional. The configuration rules
                                  for path pattern extraction.
                            }
                        ],
                        "regexReplacers": [
                            {
                                "condition": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Required.
                                "doNotReplaceRegex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "rejectedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "scopedRules": [
                            {
                                "bindingUrl": "str",  # Required.
                                "rules": [
                                    {
                                        "displayName": "str",  # Optional.
                                          The configuration rules for path pattern extraction.
                                        "isResourceSet": True,  # Optional.
                                          Default value is True. The configuration rules for path
                                          pattern extraction.
                                        "lastUpdatedTimestamp": 0,  #
                                          Optional. The configuration rules for path pattern
                                          extraction.
                                        "name": "str",  # Optional. The
                                          configuration rules for path pattern extraction.
                                        "qualifiedName": "str"  # Required.
                                    }
                                ],
                                "storeType": "str"  # Required.
                            }
                        ],
                        "version": 0  # Optional. Default value is 0. The configuration rules
                          for path pattern extraction.
                    }
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(resource_set_rule_config, (IO, bytes)):
            _content = resource_set_rule_config
        else:
            _json = resource_set_rule_config

        request = build_resource_set_rules_create_or_update_resource_set_rule_request(
            api_version=api_version,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace
    def delete_resource_set_rule(  # pylint: disable=inconsistent-return-statements
        self,
        **kwargs: Any
    ) -> None:
        """Deletes a ResourceSetRuleConfig resource.

        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[None]

        
        request = build_resource_set_rules_delete_resource_set_rule_request(
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if cls:
            return cls(pipeline_response, None, {})



    @distributed_trace
    def list_resource_set_rules(
        self,
        *,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """Get a resource set config service model.

        :keyword skip_token: Default value is None.
        :paramtype skip_token: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "advancedResourceSet": {
                        "modifiedAt": "2020-02-20 00:00:00",  # Optional. Date at which
                          ResourceSetProcessing property of the account is updated.
                        "resourceSetProcessing": "str"  # Optional. The advanced resource
                          property of the account. Known values are: "Default" and "Advanced".
                    },
                    "name": "str",  # Optional. The name of the rule.
                    "pathPatternConfig": {
                        "acceptedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "complexReplacers": [
                            {
                                "createdBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "typeName": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "createdBy": "str",  # Required.
                        "enableDefaultPatterns": bool,  # Required.
                        "lastUpdatedTimestamp": 0,  # Optional. The configuration rules for
                          path pattern extraction.
                        "modifiedBy": "AzureDataCatalog",  # Optional. Default value is
                          "AzureDataCatalog". The configuration rules for path pattern extraction.
                        "normalizationRules": [
                            {
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disabled": bool,  # Optional. The configuration
                                  rules for path pattern extraction.
                                "dynamicReplacement": bool,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "entityTypes": [
                                    "str"  # Optional. The configuration rules
                                      for path pattern extraction.
                                ],
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "name": "str",  # Optional. The configuration rules
                                  for path pattern extraction.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "version": 0.0  # Optional. The configuration rules
                                  for path pattern extraction.
                            }
                        ],
                        "regexReplacers": [
                            {
                                "condition": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "description": "str",  # Optional. The configuration
                                  rules for path pattern extraction.
                                "disableRecursiveReplacerApplication": bool,  #
                                  Optional. The configuration rules for path pattern extraction.
                                "disabled": bool,  # Required.
                                "doNotReplaceRegex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "regex": {
                                    "maxDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "maxLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDashes": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigits": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDigitsOrLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minDots": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minHex": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "minLetters": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "minUnderscores": 0,  # Optional. The
                                      configuration rules for path pattern extraction.
                                    "options": 0,  # Optional. The configuration
                                      rules for path pattern extraction.
                                    "regexStr": "str"  # Optional. The
                                      configuration rules for path pattern extraction.
                                },
                                "replaceWith": "str"  # Optional. The configuration
                                  rules for path pattern extraction.
                            }
                        ],
                        "rejectedPatterns": [
                            {
                                "createdBy": "AzureDataCatalog",  # Optional. Default
                                  value is "AzureDataCatalog". The configuration rules for path pattern
                                  extraction.
                                "filterType": "Pattern",  # Optional. Default value
                                  is "Pattern". Known values are: "Pattern" and "Regex".
                                "lastUpdatedTimestamp": 0,  # Optional. The
                                  configuration rules for path pattern extraction.
                                "modifiedBy": "AzureDataCatalog",  # Optional.
                                  Default value is "AzureDataCatalog". The configuration rules for path
                                  pattern extraction.
                                "name": "str",  # Required.
                                "path": "str"  # Required.
                            }
                        ],
                        "scopedRules": [
                            {
                                "bindingUrl": "str",  # Required.
                                "rules": [
                                    {
                                        "displayName": "str",  # Optional.
                                          The configuration rules for path pattern extraction.
                                        "isResourceSet": True,  # Optional.
                                          Default value is True. The configuration rules for path
                                          pattern extraction.
                                        "lastUpdatedTimestamp": 0,  #
                                          Optional. The configuration rules for path pattern
                                          extraction.
                                        "name": "str",  # Optional. The
                                          configuration rules for path pattern extraction.
                                        "qualifiedName": "str"  # Required.
                                    }
                                ],
                                "storeType": "str"  # Required.
                            }
                        ],
                        "version": 0  # Optional. Default value is 0. The configuration rules
                          for path pattern extraction.
                    }
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_resource_set_rules_list_resource_set_rules_request(
                    skip_token=skip_token,
                    api_version=api_version,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_resource_set_rules_list_resource_set_rules_request(
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["value"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )

class MetadataRolesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.purview.administration.metadata.PurviewMetadataClient`'s
        :attr:`metadata_roles` attribute.
    """

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list(
        self,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """Lists roles for Purview Account.

        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. The Id of role.
                    "name": "str",  # Optional. The name of role.
                    "properties": {
                        "cnfCondition": [
                            [
                                {
                                    "attributeName": "str",  # Optional.
                                      AttributeName.
                                    "attributeValueExcludedIn": [
                                        "str"  # Optional. List of values
                                          excluded for attribute.
                                    ],
                                    "attributeValueExcludes": "str",  # Optional.
                                      Value excluded for attribute.
                                    "attributeValueIncludedIn": [
                                        "str"  # Optional. List of values for
                                          attribute.
                                    ],
                                    "attributeValueIncludes": "str"  # Optional.
                                      Value for attribute.
                                }
                            ]
                        ],
                        "description": "str",  # Optional. The description of role.
                        "dnfCondition": [
                            [
                                {
                                    "attributeName": "str",  # Optional.
                                      AttributeName.
                                    "attributeValueExcludedIn": [
                                        "str"  # Optional. List of values
                                          excluded for attribute.
                                    ],
                                    "attributeValueExcludes": "str",  # Optional.
                                      Value excluded for attribute.
                                    "attributeValueIncludedIn": [
                                        "str"  # Optional. List of values for
                                          attribute.
                                    ],
                                    "attributeValueIncludes": "str"  # Optional.
                                      Value for attribute.
                                }
                            ]
                        ],
                        "friendlyName": "str",  # Optional. The friendly name of role.
                        "provisioningState": "str",  # Optional. The provisioningState of
                          role.
                        "roleType": "str",  # Optional. The type of role.
                        "version": 0  # Optional. The version of role.
                    },
                    "type": "str"  # Optional. The type of role.
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_metadata_roles_list_request(
                    api_version=api_version,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_metadata_roles_list_request(
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["values"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )

class MetadataPolicyOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~azure.purview.administration.metadata.PurviewMetadataClient`'s
        :attr:`metadata_policy` attribute.
    """

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")


    @distributed_trace
    def list_all(
        self,
        *,
        collection_name: Optional[str] = None,
        **kwargs: Any
    ) -> Iterable[JSON]:
        """List or Get metadata policies.

        :keyword collection_name: The name of an existing collection for which one policy needs to be
         fetched. Default value is None.
        :paramtype collection_name: str
        :return: An iterator like instance of JSON object
        :rtype: ~azure.core.paging.ItemPaged[JSON]
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. The id of policy.
                    "name": "str",  # Optional. The name of policy.
                    "properties": {
                        "attributeRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "id": "str",  # Optional. The id for rule.
                                "kind": "str",  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                                "name": "str"  # Optional. The name for rule.
                            }
                        ],
                        "collection": {
                            "referenceName": "str",  # Optional. The name of reference.
                            "type": "CollectionReference"  # Optional. Default value is
                              "CollectionReference". The type of reference.
                        },
                        "decisionRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "effect": "str",  # Optional. The effect for rule.
                                  Known values are: "Deny" and "Permit".
                                "kind": "str"  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                            }
                        ],
                        "description": "str",  # Optional. The description of policy.
                        "parentCollectionName": "str"  # Optional. The parent collection of
                          the policy.
                    },
                    "version": 0  # Optional. The version of policy.
                }
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})
        def prepare_request(next_link=None):
            if not next_link:
                
                request = build_metadata_policy_list_all_request(
                    collection_name=collection_name,
                    api_version=api_version,
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

            else:
                
                request = build_metadata_policy_list_all_request(
                    headers=_headers,
                    params=_params,
                )
                path_format_arguments = {
                    "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.url = self._client.format_url(next_link, **path_format_arguments)  # type: ignore

                path_format_arguments = {
                    "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
                }
                request.method = "GET"
            return request

        def extract_data(pipeline_response):
            deserialized = pipeline_response.http_response.json()
            list_of_elem = deserialized["values"]
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.get("nextLink", None), iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
                request,
                stream=False,
                **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response


        return ItemPaged(
            get_next, extract_data
        )


    @overload
    def update(
        self,
        policy_id: str,
        body: Optional[JSON] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Updates a metadata policy.

        :param policy_id: Unique policy id. Required.
        :type policy_id: str
        :param body: Policy to be updated. Default value is None.
        :type body: JSON
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # JSON input template you can fill out and use as your body input.
                body = {
                    "id": "str",  # Optional. The id of policy.
                    "name": "str",  # Optional. The name of policy.
                    "properties": {
                        "attributeRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "id": "str",  # Optional. The id for rule.
                                "kind": "str",  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                                "name": "str"  # Optional. The name for rule.
                            }
                        ],
                        "collection": {
                            "referenceName": "str",  # Optional. The name of reference.
                            "type": "CollectionReference"  # Optional. Default value is
                              "CollectionReference". The type of reference.
                        },
                        "decisionRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "effect": "str",  # Optional. The effect for rule.
                                  Known values are: "Deny" and "Permit".
                                "kind": "str"  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                            }
                        ],
                        "description": "str",  # Optional. The description of policy.
                        "parentCollectionName": "str"  # Optional. The parent collection of
                          the policy.
                    },
                    "version": 0  # Optional. The version of policy.
                }

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. The id of policy.
                    "name": "str",  # Optional. The name of policy.
                    "properties": {
                        "attributeRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "id": "str",  # Optional. The id for rule.
                                "kind": "str",  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                                "name": "str"  # Optional. The name for rule.
                            }
                        ],
                        "collection": {
                            "referenceName": "str",  # Optional. The name of reference.
                            "type": "CollectionReference"  # Optional. Default value is
                              "CollectionReference". The type of reference.
                        },
                        "decisionRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "effect": "str",  # Optional. The effect for rule.
                                  Known values are: "Deny" and "Permit".
                                "kind": "str"  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                            }
                        ],
                        "description": "str",  # Optional. The description of policy.
                        "parentCollectionName": "str"  # Optional. The parent collection of
                          the policy.
                    },
                    "version": 0  # Optional. The version of policy.
                }
        """

    @overload
    def update(
        self,
        policy_id: str,
        body: Optional[IO] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> JSON:
        """Updates a metadata policy.

        :param policy_id: Unique policy id. Required.
        :type policy_id: str
        :param body: Policy to be updated. Default value is None.
        :type body: IO
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. The id of policy.
                    "name": "str",  # Optional. The name of policy.
                    "properties": {
                        "attributeRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "id": "str",  # Optional. The id for rule.
                                "kind": "str",  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                                "name": "str"  # Optional. The name for rule.
                            }
                        ],
                        "collection": {
                            "referenceName": "str",  # Optional. The name of reference.
                            "type": "CollectionReference"  # Optional. Default value is
                              "CollectionReference". The type of reference.
                        },
                        "decisionRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "effect": "str",  # Optional. The effect for rule.
                                  Known values are: "Deny" and "Permit".
                                "kind": "str"  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                            }
                        ],
                        "description": "str",  # Optional. The description of policy.
                        "parentCollectionName": "str"  # Optional. The parent collection of
                          the policy.
                    },
                    "version": 0  # Optional. The version of policy.
                }
        """


    @distributed_trace
    def update(
        self,
        policy_id: str,
        body: Optional[Union[JSON, IO]] = None,
        **kwargs: Any
    ) -> JSON:
        """Updates a metadata policy.

        :param policy_id: Unique policy id. Required.
        :type policy_id: str
        :param body: Policy to be updated. Is either a model type or a IO type. Default value is None.
        :type body: JSON or IO
        :keyword content_type: Body Parameter content-type. Known values are: 'application/json'.
         Default value is None.
        :paramtype content_type: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. The id of policy.
                    "name": "str",  # Optional. The name of policy.
                    "properties": {
                        "attributeRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "id": "str",  # Optional. The id for rule.
                                "kind": "str",  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                                "name": "str"  # Optional. The name for rule.
                            }
                        ],
                        "collection": {
                            "referenceName": "str",  # Optional. The name of reference.
                            "type": "CollectionReference"  # Optional. Default value is
                              "CollectionReference". The type of reference.
                        },
                        "decisionRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "effect": "str",  # Optional. The effect for rule.
                                  Known values are: "Deny" and "Permit".
                                "kind": "str"  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                            }
                        ],
                        "description": "str",  # Optional. The description of policy.
                        "parentCollectionName": "str"  # Optional. The parent collection of
                          the policy.
                    },
                    "version": 0  # Optional. The version of policy.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        content_type = kwargs.pop('content_type', _headers.pop('Content-Type', None))  # type: Optional[str]
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(body, (IO, bytes)):
            _content = body
        else:
            if body is not None:
                _json = body
            else:
                _json = None

        request = build_metadata_policy_update_request(
            policy_id=policy_id,
            api_version=api_version,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)



    @distributed_trace
    def get(
        self,
        policy_id: str,
        **kwargs: Any
    ) -> JSON:
        """Gets a metadata policy.

        :param policy_id: Id of an existing policy that needs to be fetched. Required.
        :type policy_id: str
        :return: JSON object
        :rtype: JSON
        :raises ~azure.core.exceptions.HttpResponseError:

        Example:
            .. code-block:: python

                # response body for status code(s): 200
                response.json() == {
                    "id": "str",  # Optional. The id of policy.
                    "name": "str",  # Optional. The name of policy.
                    "properties": {
                        "attributeRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "id": "str",  # Optional. The id for rule.
                                "kind": "str",  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                                "name": "str"  # Optional. The name for rule.
                            }
                        ],
                        "collection": {
                            "referenceName": "str",  # Optional. The name of reference.
                            "type": "CollectionReference"  # Optional. Default value is
                              "CollectionReference". The type of reference.
                        },
                        "decisionRules": [
                            {
                                "dnfCondition": [
                                    [
                                        {
                                            "attributeName": "str",  #
                                              Optional. AttributeName.
                                            "attributeValueExcludedIn": [
                                                "str"  # Optional.
                                                  List of values excluded for attribute.
                                            ],
                                            "attributeValueExcludes":
                                              "str",  # Optional. Value excluded for attribute.
                                            "attributeValueIncludedIn": [
                                                "str"  # Optional.
                                                  List of values for attribute.
                                            ],
                                            "attributeValueIncludes":
                                              "str"  # Optional. Value for attribute.
                                        }
                                    ]
                                ],
                                "effect": "str",  # Optional. The effect for rule.
                                  Known values are: "Deny" and "Permit".
                                "kind": "str"  # Optional. The kind of rule. Known
                                  values are: "decisionrule" and "attributerule".
                            }
                        ],
                        "description": "str",  # Optional. The description of policy.
                        "parentCollectionName": "str"  # Optional. The parent collection of
                          the policy.
                    },
                    "version": 0  # Optional. The version of policy.
                }
        """
        error_map = {
            401: ClientAuthenticationError, 404: ResourceNotFoundError, 409: ResourceExistsError
        }
        error_map.update(kwargs.pop('error_map', {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

        api_version = kwargs.pop('api_version', _params.pop('api-version', self._config.api_version))  # type: str
        cls = kwargs.pop('cls', None)  # type: ClsType[JSON]

        
        request = build_metadata_policy_get_request(
            policy_id=policy_id,
            api_version=api_version,
            headers=_headers,
            params=_params,
        )
        path_format_arguments = {
            "Endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, 'str', skip_quote=True),
        }
        request.url = self._client.format_url(request.url, **path_format_arguments)  # type: ignore

        pipeline_response = self._client._pipeline.run(  # type: ignore # pylint: disable=protected-access
            request,
            stream=False,
            **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if response.content:
            deserialized = response.json()
        else:
            deserialized = None

        if cls:
            return cls(pipeline_response, cast(JSON, deserialized), {})

        return cast(JSON, deserialized)


