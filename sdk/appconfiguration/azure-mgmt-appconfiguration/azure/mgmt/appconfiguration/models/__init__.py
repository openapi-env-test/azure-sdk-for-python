# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import ApiKey
from ._models_py3 import ApiKeyListResult
from ._models_py3 import CheckNameAvailabilityParameters
from ._models_py3 import ConfigurationStore
from ._models_py3 import ConfigurationStoreListResult
from ._models_py3 import ConfigurationStoreUpdateParameters
from ._models_py3 import EncryptionProperties
from ._models_py3 import Error
from ._models_py3 import KeyValue
from ._models_py3 import KeyVaultProperties
from ._models_py3 import ListKeyValueParameters
from ._models_py3 import NameAvailabilityStatus
from ._models_py3 import OperationDefinition
from ._models_py3 import OperationDefinitionDisplay
from ._models_py3 import OperationDefinitionListResult
from ._models_py3 import PrivateEndpoint
from ._models_py3 import PrivateEndpointConnection
from ._models_py3 import PrivateEndpointConnectionListResult
from ._models_py3 import PrivateEndpointConnectionReference
from ._models_py3 import PrivateLinkResource
from ._models_py3 import PrivateLinkResourceListResult
from ._models_py3 import PrivateLinkServiceConnectionState
from ._models_py3 import RegenerateKeyParameters
from ._models_py3 import Resource
from ._models_py3 import ResourceIdentity
from ._models_py3 import Sku
from ._models_py3 import UserIdentity


from ._app_configuration_management_client_enums import (
    ActionsRequired,
    ConfigurationResourceType,
    ConnectionStatus,
    IdentityType,
    ProvisioningState,
    PublicNetworkAccess,
)
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk
__all__ = [
    'ApiKey',
    'ApiKeyListResult',
    'CheckNameAvailabilityParameters',
    'ConfigurationStore',
    'ConfigurationStoreListResult',
    'ConfigurationStoreUpdateParameters',
    'EncryptionProperties',
    'Error',
    'KeyValue',
    'KeyVaultProperties',
    'ListKeyValueParameters',
    'NameAvailabilityStatus',
    'OperationDefinition',
    'OperationDefinitionDisplay',
    'OperationDefinitionListResult',
    'PrivateEndpoint',
    'PrivateEndpointConnection',
    'PrivateEndpointConnectionListResult',
    'PrivateEndpointConnectionReference',
    'PrivateLinkResource',
    'PrivateLinkResourceListResult',
    'PrivateLinkServiceConnectionState',
    'RegenerateKeyParameters',
    'Resource',
    'ResourceIdentity',
    'Sku',
    'UserIdentity',
    'ActionsRequired',
    'ConfigurationResourceType',
    'ConnectionStatus',
    'IdentityType',
    'ProvisioningState',
    'PublicNetworkAccess',
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()