# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Literal, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class AuthCredentials(_serialization.Model):
    """AuthCredentials abstract base class for Auth Purpose.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ApiKeyAuthCredentials, OAuthClientCredentials

    All required parameters must be populated in order to send to server.

    :ivar kind: Enum for different types of AuthCredentials supported. Required. Known values are:
     "OAuthClientCredentials" and "ApiKeyAuthCredentials".
    :vartype kind: str or ~azure.mgmt.agrifood.models.AuthCredentialsKind
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {
        "kind": {"ApiKeyAuthCredentials": "ApiKeyAuthCredentials", "OAuthClientCredentials": "OAuthClientCredentials"}
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: Optional[str] = None


class ApiKeyAuthCredentials(AuthCredentials):
    """ApiKeyAuthCredentials class for ApiKey based Auth.

    All required parameters must be populated in order to send to server.

    :ivar kind: Enum for different types of AuthCredentials supported. Required. Known values are:
     "OAuthClientCredentials" and "ApiKeyAuthCredentials".
    :vartype kind: str or ~azure.mgmt.agrifood.models.AuthCredentialsKind
    :ivar api_key: Properties of the key vault. Required.
    :vartype api_key: ~azure.mgmt.agrifood.models.KeyVaultProperties
    """

    _validation = {
        "kind": {"required": True},
        "api_key": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "api_key": {"key": "apiKey", "type": "KeyVaultProperties"},
    }

    def __init__(self, *, api_key: "_models.KeyVaultProperties", **kwargs: Any) -> None:
        """
        :keyword api_key: Properties of the key vault. Required.
        :paramtype api_key: ~azure.mgmt.agrifood.models.KeyVaultProperties
        """
        super().__init__(**kwargs)
        self.kind: str = "ApiKeyAuthCredentials"
        self.api_key = api_key


class ApiProperties(_serialization.Model):
    """Api properties.

    :ivar api_freshness_time_in_minutes: Interval in minutes for which the weather data for the api
     needs to be refreshed.
    :vartype api_freshness_time_in_minutes: int
    """

    _validation = {
        "api_freshness_time_in_minutes": {"maximum": 10080, "minimum": 0},
    }

    _attribute_map = {
        "api_freshness_time_in_minutes": {"key": "apiFreshnessTimeInMinutes", "type": "int"},
    }

    def __init__(self, *, api_freshness_time_in_minutes: Optional[int] = None, **kwargs: Any) -> None:
        """
        :keyword api_freshness_time_in_minutes: Interval in minutes for which the weather data for the
         api needs to be refreshed.
        :paramtype api_freshness_time_in_minutes: int
        """
        super().__init__(**kwargs)
        self.api_freshness_time_in_minutes = api_freshness_time_in_minutes


class ArmAsyncOperation(_serialization.Model):
    """Arm async operation class.
    Ref: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/async-operations.

    :ivar status: Status of the async operation.
    :vartype status: str
    :ivar error: Arm async operation error class.
     Ref:
     https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#azure-asyncoperation-resource-format.  # pylint: disable=line-too-long
    :vartype error: ~azure.mgmt.agrifood.models.ArmAsyncOperationError
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "error": {"key": "error", "type": "ArmAsyncOperationError"},
    }

    def __init__(
        self, *, status: Optional[str] = None, error: Optional["_models.ArmAsyncOperationError"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword status: Status of the async operation.
        :paramtype status: str
        :keyword error: Arm async operation error class.
         Ref:
         https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#azure-asyncoperation-resource-format.  # pylint: disable=line-too-long
        :paramtype error: ~azure.mgmt.agrifood.models.ArmAsyncOperationError
        """
        super().__init__(**kwargs)
        self.status = status
        self.error = error


class ArmAsyncOperationError(_serialization.Model):
    """Arm async operation error class.
    Ref:
    https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#azure-asyncoperation-resource-format.

    :ivar code: Status of the async operation.
    :vartype code: str
    :ivar message: Status of the async operation.
    :vartype message: str
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, code: Optional[str] = None, message: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword code: Status of the async operation.
        :paramtype code: str
        :keyword message: Status of the async operation.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message


class CheckNameAvailabilityRequest(_serialization.Model):
    """The check availability request body.

    :ivar name: The name of the resource for which availability needs to be checked.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, type: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: The name of the resource for which availability needs to be checked.
        :paramtype name: str
        :keyword type: The resource type.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.type = type


class CheckNameAvailabilityResponse(_serialization.Model):
    """The check availability result.

    :ivar name_available: Indicates if the resource name is available.
    :vartype name_available: bool
    :ivar reason: The reason why the given name is not available. Known values are: "Invalid" and
     "AlreadyExists".
    :vartype reason: str or ~azure.mgmt.agrifood.models.CheckNameAvailabilityReason
    :ivar message: Detailed reason why the given name is available.
    :vartype message: str
    """

    _attribute_map = {
        "name_available": {"key": "nameAvailable", "type": "bool"},
        "reason": {"key": "reason", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(
        self,
        *,
        name_available: Optional[bool] = None,
        reason: Optional[Union[str, "_models.CheckNameAvailabilityReason"]] = None,
        message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name_available: Indicates if the resource name is available.
        :paramtype name_available: bool
        :keyword reason: The reason why the given name is not available. Known values are: "Invalid"
         and "AlreadyExists".
        :paramtype reason: str or ~azure.mgmt.agrifood.models.CheckNameAvailabilityReason
        :keyword message: Detailed reason why the given name is available.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.name_available = name_available
        self.reason = reason
        self.message = message


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    """


class DataConnector(ProxyResource):
    """DataConnector Model.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar properties: DataConnector Properties. Required.
    :vartype properties: ~azure.mgmt.agrifood.models.DataConnectorProperties
    :ivar e_tag: The ETag value to implement optimistic concurrency.
    :vartype e_tag: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "properties": {"required": True},
        "e_tag": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DataConnectorProperties"},
        "e_tag": {"key": "eTag", "type": "str"},
    }

    def __init__(self, *, properties: "_models.DataConnectorProperties", **kwargs: Any) -> None:
        """
        :keyword properties: DataConnector Properties. Required.
        :paramtype properties: ~azure.mgmt.agrifood.models.DataConnectorProperties
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.e_tag = None


class DataConnectorListResponse(_serialization.Model):
    """Paged response contains list of requested objects and a URL link to get the next set of
    results.

    All required parameters must be populated in order to send to server.

    :ivar value: List of requested objects. Required.
    :vartype value: list[~azure.mgmt.agrifood.models.DataConnector]
    :ivar next_link: Continuation link (absolute URI) to the next page of results in the list.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DataConnector]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.DataConnector"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of requested objects. Required.
        :paramtype value: list[~azure.mgmt.agrifood.models.DataConnector]
        :keyword next_link: Continuation link (absolute URI) to the next page of results in the list.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DataConnectorProperties(_serialization.Model):
    """DataConnector Properties.

    All required parameters must be populated in order to send to server.

    :ivar credentials: AuthCredentials abstract base class for Auth Purpose. Required.
    :vartype credentials: ~azure.mgmt.agrifood.models.AuthCredentials
    """

    _validation = {
        "credentials": {"required": True},
    }

    _attribute_map = {
        "credentials": {"key": "credentials", "type": "AuthCredentials"},
    }

    def __init__(self, *, credentials: "_models.AuthCredentials", **kwargs: Any) -> None:
        """
        :keyword credentials: AuthCredentials abstract base class for Auth Purpose. Required.
        :paramtype credentials: ~azure.mgmt.agrifood.models.AuthCredentials
        """
        super().__init__(**kwargs)
        self.credentials = credentials


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class DataManagerForAgriculture(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """Data Manager For Agriculture ARM Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar identity: Identity for the resource.
    :vartype identity: ~azure.mgmt.agrifood.models.Identity
    :ivar instance_uri: Uri of the Data Manager For Agriculture instance.
    :vartype instance_uri: str
    :ivar provisioning_state: Data Manager For Agriculture instance provisioning state. Known
     values are: "Creating", "Updating", "Deleting", "Succeeded", "Failed", and "Running".
    :vartype provisioning_state: str or ~azure.mgmt.agrifood.models.ProvisioningState
    :ivar sensor_integration: Sensor integration request model.
    :vartype sensor_integration: ~azure.mgmt.agrifood.models.SensorIntegration
    :ivar public_network_access: Property to allow or block public traffic for an Azure Data
     Manager For Agriculture resource. Known values are: "Enabled" and "Disabled".
    :vartype public_network_access: str or ~azure.mgmt.agrifood.models.PublicNetworkAccess
    :ivar private_endpoint_connections: Private endpoints.
    :vartype private_endpoint_connections:
     list[~azure.mgmt.agrifood.models.PrivateEndpointConnection]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "instance_uri": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "private_endpoint_connections": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "identity": {"key": "identity", "type": "Identity"},
        "instance_uri": {"key": "properties.instanceUri", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "sensor_integration": {"key": "properties.sensorIntegration", "type": "SensorIntegration"},
        "public_network_access": {"key": "properties.publicNetworkAccess", "type": "str"},
        "private_endpoint_connections": {
            "key": "properties.privateEndpointConnections",
            "type": "[PrivateEndpointConnection]",
        },
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        identity: Optional["_models.Identity"] = None,
        sensor_integration: Optional["_models.SensorIntegration"] = None,
        public_network_access: Optional[Union[str, "_models.PublicNetworkAccess"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword identity: Identity for the resource.
        :paramtype identity: ~azure.mgmt.agrifood.models.Identity
        :keyword sensor_integration: Sensor integration request model.
        :paramtype sensor_integration: ~azure.mgmt.agrifood.models.SensorIntegration
        :keyword public_network_access: Property to allow or block public traffic for an Azure Data
         Manager For Agriculture resource. Known values are: "Enabled" and "Disabled".
        :paramtype public_network_access: str or ~azure.mgmt.agrifood.models.PublicNetworkAccess
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.identity = identity
        self.instance_uri = None
        self.provisioning_state = None
        self.sensor_integration = sensor_integration
        self.public_network_access = public_network_access
        self.private_endpoint_connections = None


class DataManagerForAgricultureExtension(ProxyResource):
    """DataManagerForAgriculture extension resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar properties: DataManagerForAgricultureExtension properties.
    :vartype properties: ~azure.mgmt.agrifood.models.DataManagerForAgricultureExtensionProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DataManagerForAgricultureExtensionProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.DataManagerForAgricultureExtensionProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: DataManagerForAgricultureExtension properties.
        :paramtype properties: ~azure.mgmt.agrifood.models.DataManagerForAgricultureExtensionProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DataManagerForAgricultureExtensionListResponse(_serialization.Model):  # pylint: disable=name-too-long
    """Paged response contains list of requested objects and a URL link to get the next set of
    results.

    All required parameters must be populated in order to send to server.

    :ivar value: List of requested objects. Required.
    :vartype value: list[~azure.mgmt.agrifood.models.DataManagerForAgricultureExtension]
    :ivar skip_token: Token used in retrieving the next page. If null, there are no additional
     pages.
    :vartype skip_token: str
    :ivar next_link: Continuation link (absolute URI) to the next page of results in the list.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DataManagerForAgricultureExtension]"},
        "skip_token": {"key": "$skipToken", "type": "str"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: List["_models.DataManagerForAgricultureExtension"],
        skip_token: Optional[str] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: List of requested objects. Required.
        :paramtype value: list[~azure.mgmt.agrifood.models.DataManagerForAgricultureExtension]
        :keyword skip_token: Token used in retrieving the next page. If null, there are no additional
         pages.
        :paramtype skip_token: str
        :keyword next_link: Continuation link (absolute URI) to the next page of results in the list.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.skip_token = skip_token
        self.next_link = next_link


class DataManagerForAgricultureExtensionProperties(_serialization.Model):  # pylint: disable=name-too-long
    """DataManagerForAgricultureExtension properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar target_resource_type: Target ResourceType of the Data Manager For Agriculture Extension.
    :vartype target_resource_type: str
    :ivar farm_beats_extension_id: Data Manager For Agriculture Extension ID.
    :vartype farm_beats_extension_id: str
    :ivar farm_beats_extension_name: Data Manager For Agriculture Extension name.
    :vartype farm_beats_extension_name: str
    :ivar farm_beats_extension_version: Data Manager For Agriculture Extension version.
    :vartype farm_beats_extension_version: str
    :ivar publisher_id: Publisher ID.
    :vartype publisher_id: str
    :ivar description: Textual description.
    :vartype description: str
    :ivar extension_category: Category of the extension. e.g. weather/sensor/satellite.
    :vartype extension_category: str
    :ivar extension_auth_link: Data Manager For Agriculture Extension auth link.
    :vartype extension_auth_link: str
    :ivar extension_api_docs_link: Data Manager For Agriculture Extension api docs link.
    :vartype extension_api_docs_link: str
    :ivar detailed_information: Detailed information which shows summary of requested data.
     Used in descriptive get extension metadata call.
     Information for weather category per api included are apisSupported,
     customParameters, PlatformParameters and Units supported.
    :vartype detailed_information: list[~azure.mgmt.agrifood.models.DetailedInformation]
    """

    _validation = {
        "target_resource_type": {"readonly": True},
        "farm_beats_extension_id": {
            "readonly": True,
            "max_length": 100,
            "min_length": 2,
            "pattern": r"^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$",
        },
        "farm_beats_extension_name": {"readonly": True, "max_length": 100, "min_length": 2},
        "farm_beats_extension_version": {
            "readonly": True,
            "max_length": 100,
            "min_length": 2,
            "pattern": r"^([1-9]|10).\d$",
        },
        "publisher_id": {"readonly": True, "max_length": 100, "min_length": 2},
        "description": {"readonly": True, "max_length": 500, "min_length": 2},
        "extension_category": {"readonly": True, "max_length": 100, "min_length": 2},
        "extension_auth_link": {"readonly": True},
        "extension_api_docs_link": {"readonly": True},
        "detailed_information": {"readonly": True},
    }

    _attribute_map = {
        "target_resource_type": {"key": "targetResourceType", "type": "str"},
        "farm_beats_extension_id": {"key": "farmBeatsExtensionId", "type": "str"},
        "farm_beats_extension_name": {"key": "farmBeatsExtensionName", "type": "str"},
        "farm_beats_extension_version": {"key": "farmBeatsExtensionVersion", "type": "str"},
        "publisher_id": {"key": "publisherId", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "extension_category": {"key": "extensionCategory", "type": "str"},
        "extension_auth_link": {"key": "extensionAuthLink", "type": "str"},
        "extension_api_docs_link": {"key": "extensionApiDocsLink", "type": "str"},
        "detailed_information": {"key": "detailedInformation", "type": "[DetailedInformation]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.target_resource_type = None
        self.farm_beats_extension_id = None
        self.farm_beats_extension_name = None
        self.farm_beats_extension_version = None
        self.publisher_id = None
        self.description = None
        self.extension_category = None
        self.extension_auth_link = None
        self.extension_api_docs_link = None
        self.detailed_information = None


class DataManagerForAgricultureListResponse(_serialization.Model):
    """Paged response contains list of requested objects and a URL link to get the next set of
    results.

    All required parameters must be populated in order to send to server.

    :ivar value: List of requested objects. Required.
    :vartype value: list[~azure.mgmt.agrifood.models.DataManagerForAgriculture]
    :ivar skip_token: Token used in retrieving the next page. If null, there are no additional
     pages.
    :vartype skip_token: str
    :ivar next_link: Continuation link (absolute URI) to the next page of results in the list.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DataManagerForAgriculture]"},
        "skip_token": {"key": "$skipToken", "type": "str"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: List["_models.DataManagerForAgriculture"],
        skip_token: Optional[str] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: List of requested objects. Required.
        :paramtype value: list[~azure.mgmt.agrifood.models.DataManagerForAgriculture]
        :keyword skip_token: Token used in retrieving the next page. If null, there are no additional
         pages.
        :paramtype skip_token: str
        :keyword next_link: Continuation link (absolute URI) to the next page of results in the list.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.skip_token = skip_token
        self.next_link = next_link


class DataManagerForAgricultureSolution(ProxyResource):
    """DataManagerForAgriculture solution resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar properties: DataManagerForAgricultureSolution properties.
    :vartype properties: ~azure.mgmt.agrifood.models.DataManagerForAgricultureSolutionProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DataManagerForAgricultureSolutionProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.DataManagerForAgricultureSolutionProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: DataManagerForAgricultureSolution properties.
        :paramtype properties: ~azure.mgmt.agrifood.models.DataManagerForAgricultureSolutionProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DataManagerForAgricultureSolutionListResponse(_serialization.Model):  # pylint: disable=name-too-long
    """Paged response contains list of requested objects and a URL link to get the next set of
    results.

    All required parameters must be populated in order to send to server.

    :ivar value: List of requested objects. Required.
    :vartype value: list[~azure.mgmt.agrifood.models.DataManagerForAgricultureSolution]
    :ivar skip_token: Token used in retrieving the next page. If null, there are no additional
     pages.
    :vartype skip_token: str
    :ivar next_link: Continuation link (absolute URI) to the next page of results in the list.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DataManagerForAgricultureSolution]"},
        "skip_token": {"key": "$skipToken", "type": "str"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: List["_models.DataManagerForAgricultureSolution"],
        skip_token: Optional[str] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: List of requested objects. Required.
        :paramtype value: list[~azure.mgmt.agrifood.models.DataManagerForAgricultureSolution]
        :keyword skip_token: Token used in retrieving the next page. If null, there are no additional
         pages.
        :paramtype skip_token: str
        :keyword next_link: Continuation link (absolute URI) to the next page of results in the list.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.skip_token = skip_token
        self.next_link = next_link


class DataManagerForAgricultureSolutionProperties(
    _serialization.Model
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """DataManagerForAgricultureSolution properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar partner_id: Solution Partner Id.
    :vartype partner_id: str
    :ivar partner_tenant_id: Solution Partner Tenant Id.
    :vartype partner_tenant_id: str
    :ivar data_access_scopes: Gets scope of the Data manager For Agriculture data access that's
     required for processing solution request to partner.
     Example: For gdd they might need weatherScope and satelliteScope.
    :vartype data_access_scopes: list[str]
    :ivar marketplace_offer_details:
    :vartype marketplace_offer_details: ~azure.mgmt.agrifood.models.MarketplaceOfferDetails
    :ivar open_api_specs_dictionary: Gets api-version Swagger Document Dictionary to capture all
     api-versions of swagger exposed by partner to Data Manager For Agriculture.
    :vartype open_api_specs_dictionary: dict[str, any]
    :ivar access_fb_application_id: Application id of the multi tenant application to be used by
     partner to access Data Manager For Agriculture data.
    :vartype access_fb_application_id: str
    :ivar saa_s_application_id: Application id of the SaaS multi tenant application.
    :vartype saa_s_application_id: str
    :ivar action_ids: List of ActionIds needed to make the SaaS multi tenant application access
     relevant fb data.
    :vartype action_ids: list[str]
    :ivar role_id: Role Id of the SaaS multi tenant application to access relevant fb data.
    :vartype role_id: str
    :ivar role_name: Role Name of the SaaS multi tenant application to access relevant fb data.
    :vartype role_name: str
    :ivar access_fb_application_name: Application name of the multi tenant application to be used
     by partner to access Data Manager For Agriculture Data.
    :vartype access_fb_application_name: str
    """

    _validation = {
        "partner_id": {"readonly": True},
        "partner_tenant_id": {"readonly": True},
        "data_access_scopes": {"readonly": True},
        "open_api_specs_dictionary": {"readonly": True},
        "access_fb_application_id": {"readonly": True},
        "saa_s_application_id": {"readonly": True},
        "action_ids": {"readonly": True},
        "role_id": {"readonly": True},
        "role_name": {"readonly": True},
        "access_fb_application_name": {"readonly": True},
    }

    _attribute_map = {
        "partner_id": {"key": "partnerId", "type": "str"},
        "partner_tenant_id": {"key": "partnerTenantId", "type": "str"},
        "data_access_scopes": {"key": "dataAccessScopes", "type": "[str]"},
        "marketplace_offer_details": {"key": "marketplaceOfferDetails", "type": "MarketplaceOfferDetails"},
        "open_api_specs_dictionary": {"key": "openApiSpecsDictionary", "type": "{object}"},
        "access_fb_application_id": {"key": "accessFBApplicationId", "type": "str"},
        "saa_s_application_id": {"key": "saaSApplicationId", "type": "str"},
        "action_ids": {"key": "actionIds", "type": "[str]"},
        "role_id": {"key": "roleId", "type": "str"},
        "role_name": {"key": "roleName", "type": "str"},
        "access_fb_application_name": {"key": "accessFBApplicationName", "type": "str"},
    }

    def __init__(
        self, *, marketplace_offer_details: Optional["_models.MarketplaceOfferDetails"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword marketplace_offer_details:
        :paramtype marketplace_offer_details: ~azure.mgmt.agrifood.models.MarketplaceOfferDetails
        """
        super().__init__(**kwargs)
        self.partner_id = None
        self.partner_tenant_id = None
        self.data_access_scopes = None
        self.marketplace_offer_details = marketplace_offer_details
        self.open_api_specs_dictionary = None
        self.access_fb_application_id = None
        self.saa_s_application_id = None
        self.action_ids = None
        self.role_id = None
        self.role_name = None
        self.access_fb_application_name = None


class DataManagerForAgricultureUpdateProperties(_serialization.Model):  # pylint: disable=name-too-long
    """Data Manager For Agriculture ARM Resource properties.

    :ivar sensor_integration: Sensor integration request model.
    :vartype sensor_integration: ~azure.mgmt.agrifood.models.SensorIntegration
    :ivar public_network_access: Property to allow or block public traffic for an Azure Data
     Manager For Agriculture resource. Known values are: "Enabled" and "Disabled".
    :vartype public_network_access: str or ~azure.mgmt.agrifood.models.PublicNetworkAccess
    """

    _attribute_map = {
        "sensor_integration": {"key": "sensorIntegration", "type": "SensorIntegration"},
        "public_network_access": {"key": "publicNetworkAccess", "type": "str"},
    }

    def __init__(
        self,
        *,
        sensor_integration: Optional["_models.SensorIntegration"] = None,
        public_network_access: Optional[Union[str, "_models.PublicNetworkAccess"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword sensor_integration: Sensor integration request model.
        :paramtype sensor_integration: ~azure.mgmt.agrifood.models.SensorIntegration
        :keyword public_network_access: Property to allow or block public traffic for an Azure Data
         Manager For Agriculture resource. Known values are: "Enabled" and "Disabled".
        :paramtype public_network_access: str or ~azure.mgmt.agrifood.models.PublicNetworkAccess
        """
        super().__init__(**kwargs)
        self.sensor_integration = sensor_integration
        self.public_network_access = public_network_access


class DataManagerForAgricultureUpdateRequestModel(_serialization.Model):  # pylint: disable=name-too-long
    """DataManagerForAgriculture update request.

    :ivar location: Geo-location where the resource lives.
    :vartype location: str
    :ivar identity: Identity for the resource.
    :vartype identity: ~azure.mgmt.agrifood.models.Identity
    :ivar properties: Data Manager For Agriculture ARM Resource properties.
    :vartype properties: ~azure.mgmt.agrifood.models.DataManagerForAgricultureUpdateProperties
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "location": {"key": "location", "type": "str"},
        "identity": {"key": "identity", "type": "Identity"},
        "properties": {"key": "properties", "type": "DataManagerForAgricultureUpdateProperties"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        identity: Optional["_models.Identity"] = None,
        properties: Optional["_models.DataManagerForAgricultureUpdateProperties"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Geo-location where the resource lives.
        :paramtype location: str
        :keyword identity: Identity for the resource.
        :paramtype identity: ~azure.mgmt.agrifood.models.Identity
        :keyword properties: Data Manager For Agriculture ARM Resource properties.
        :paramtype properties: ~azure.mgmt.agrifood.models.DataManagerForAgricultureUpdateProperties
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.location = location
        self.identity = identity
        self.properties = properties
        self.tags = tags


class DetailedInformation(_serialization.Model):
    """Model to capture detailed information for Data Manager For AgricultureExtensions.

    :ivar api_name: ApiName available for the Data Manager For Agriculture Extension.
    :vartype api_name: str
    :ivar api_docs_link: Extension provider's API documentation link.
    :vartype api_docs_link: str
    :ivar api_type: Type of Api in Extension.
    :vartype api_type: str
    :ivar custom_parameters: List of customParameters.
    :vartype custom_parameters: list[str]
    :ivar platform_parameters: List of platformParameters.
    :vartype platform_parameters: list[str]
    :ivar api_default_input_parameters: List of defaultParameters.
    :vartype api_default_input_parameters: list[str]
    :ivar units_supported: Unit systems info for the data provider.
    :vartype units_supported: ~azure.mgmt.agrifood.models.UnitSystemsInfo
    :ivar api_input_parameters: List of apiInputParameters.
    :vartype api_input_parameters: list[str]
    """

    _attribute_map = {
        "api_name": {"key": "apiName", "type": "str"},
        "api_docs_link": {"key": "apiDocsLink", "type": "str"},
        "api_type": {"key": "apiType", "type": "str"},
        "custom_parameters": {"key": "customParameters", "type": "[str]"},
        "platform_parameters": {"key": "platformParameters", "type": "[str]"},
        "api_default_input_parameters": {"key": "apiDefaultInputParameters", "type": "[str]"},
        "units_supported": {"key": "unitsSupported", "type": "UnitSystemsInfo"},
        "api_input_parameters": {"key": "apiInputParameters", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        api_name: Optional[str] = None,
        api_docs_link: Optional[str] = None,
        api_type: Optional[str] = None,
        custom_parameters: Optional[List[str]] = None,
        platform_parameters: Optional[List[str]] = None,
        api_default_input_parameters: Optional[List[str]] = None,
        units_supported: Optional["_models.UnitSystemsInfo"] = None,
        api_input_parameters: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword api_name: ApiName available for the Data Manager For Agriculture Extension.
        :paramtype api_name: str
        :keyword api_docs_link: Extension provider's API documentation link.
        :paramtype api_docs_link: str
        :keyword api_type: Type of Api in Extension.
        :paramtype api_type: str
        :keyword custom_parameters: List of customParameters.
        :paramtype custom_parameters: list[str]
        :keyword platform_parameters: List of platformParameters.
        :paramtype platform_parameters: list[str]
        :keyword api_default_input_parameters: List of defaultParameters.
        :paramtype api_default_input_parameters: list[str]
        :keyword units_supported: Unit systems info for the data provider.
        :paramtype units_supported: ~azure.mgmt.agrifood.models.UnitSystemsInfo
        :keyword api_input_parameters: List of apiInputParameters.
        :paramtype api_input_parameters: list[str]
        """
        super().__init__(**kwargs)
        self.api_name = api_name
        self.api_docs_link = api_docs_link
        self.api_type = api_type
        self.custom_parameters = custom_parameters
        self.platform_parameters = platform_parameters
        self.api_default_input_parameters = api_default_input_parameters
        self.units_supported = units_supported
        self.api_input_parameters = api_input_parameters


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.agrifood.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.agrifood.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.agrifood.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.agrifood.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Extension(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Extension resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar e_tag: The ETag value to implement optimistic concurrency.
    :vartype e_tag: str
    :ivar extension_id: Extension Id.
    :vartype extension_id: str
    :ivar extension_category: Extension category. e.g. weather/sensor/satellite.
    :vartype extension_category: str
    :ivar installed_extension_version: Installed extension version.
    :vartype installed_extension_version: str
    :ivar extension_auth_link: Extension auth link.
    :vartype extension_auth_link: str
    :ivar extension_api_docs_link: Extension api docs link.
    :vartype extension_api_docs_link: str
    :ivar additional_api_properties: Additional Api Properties.
    :vartype additional_api_properties: dict[str, ~azure.mgmt.agrifood.models.ApiProperties]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "e_tag": {"readonly": True},
        "extension_id": {"readonly": True, "pattern": r"^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"},
        "extension_category": {"readonly": True},
        "installed_extension_version": {"readonly": True, "pattern": r"^([1-9]|10).\d$"},
        "extension_auth_link": {"readonly": True},
        "extension_api_docs_link": {"readonly": True},
        "additional_api_properties": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "e_tag": {"key": "eTag", "type": "str"},
        "extension_id": {"key": "properties.extensionId", "type": "str"},
        "extension_category": {"key": "properties.extensionCategory", "type": "str"},
        "installed_extension_version": {"key": "properties.installedExtensionVersion", "type": "str"},
        "extension_auth_link": {"key": "properties.extensionAuthLink", "type": "str"},
        "extension_api_docs_link": {"key": "properties.extensionApiDocsLink", "type": "str"},
        "additional_api_properties": {"key": "properties.additionalApiProperties", "type": "{ApiProperties}"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.e_tag = None
        self.extension_id = None
        self.extension_category = None
        self.installed_extension_version = None
        self.extension_auth_link = None
        self.extension_api_docs_link = None
        self.additional_api_properties = None


class ExtensionInstallationRequest(_serialization.Model):
    """Extension Installation Request Body.

    :ivar extension_version: Extension Version.
    :vartype extension_version: str
    :ivar additional_api_properties: Additional Api Properties.
    :vartype additional_api_properties: dict[str, ~azure.mgmt.agrifood.models.ApiProperties]
    """

    _validation = {
        "extension_version": {"max_length": 10, "min_length": 3},
    }

    _attribute_map = {
        "extension_version": {"key": "extensionVersion", "type": "str"},
        "additional_api_properties": {"key": "additionalApiProperties", "type": "{ApiProperties}"},
    }

    def __init__(
        self,
        *,
        extension_version: Optional[str] = None,
        additional_api_properties: Optional[Dict[str, "_models.ApiProperties"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword extension_version: Extension Version.
        :paramtype extension_version: str
        :keyword additional_api_properties: Additional Api Properties.
        :paramtype additional_api_properties: dict[str, ~azure.mgmt.agrifood.models.ApiProperties]
        """
        super().__init__(**kwargs)
        self.extension_version = extension_version
        self.additional_api_properties = additional_api_properties


class ExtensionListResponse(_serialization.Model):
    """Paged response contains list of requested objects and a URL link to get the next set of
    results.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: List of requested objects. Required.
    :vartype value: list[~azure.mgmt.agrifood.models.Extension]
    :ivar skip_token: Token used in retrieving the next page. If null, there are no additional
     pages.
    :vartype skip_token: str
    :ivar next_link: Continuation link (absolute URI) to the next page of results in the list.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Extension]"},
        "skip_token": {"key": "$skipToken", "type": "str"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Extension"], skip_token: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of requested objects. Required.
        :paramtype value: list[~azure.mgmt.agrifood.models.Extension]
        :keyword skip_token: Token used in retrieving the next page. If null, there are no additional
         pages.
        :paramtype skip_token: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.skip_token = skip_token
        self.next_link = None


class Identity(_serialization.Model):
    """Identity for the resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal ID of resource identity. The value must be an UUID.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of resource. The value must be an UUID.
    :vartype tenant_id: str
    :ivar type: The identity type. Default value is "SystemAssigned".
    :vartype type: str
    """

    _validation = {
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, type: Optional[Literal["SystemAssigned"]] = None, **kwargs: Any) -> None:
        """
        :keyword type: The identity type. Default value is "SystemAssigned".
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.principal_id = None
        self.tenant_id = None
        self.type = type


class KeyVaultProperties(_serialization.Model):
    """Properties of the key vault.

    All required parameters must be populated in order to send to server.

    :ivar key_vault_uri: Uri of the key vault. Required.
    :vartype key_vault_uri: str
    :ivar key_name: Name of Key Vault key. Required.
    :vartype key_name: str
    :ivar key_version: Version of Key Vault key. Required.
    :vartype key_version: str
    """

    _validation = {
        "key_vault_uri": {"required": True, "min_length": 1},
        "key_name": {"required": True, "min_length": 1},
        "key_version": {"required": True, "min_length": 1},
    }

    _attribute_map = {
        "key_vault_uri": {"key": "keyVaultUri", "type": "str"},
        "key_name": {"key": "keyName", "type": "str"},
        "key_version": {"key": "keyVersion", "type": "str"},
    }

    def __init__(self, *, key_vault_uri: str, key_name: str, key_version: str, **kwargs: Any) -> None:
        """
        :keyword key_vault_uri: Uri of the key vault. Required.
        :paramtype key_vault_uri: str
        :keyword key_name: Name of Key Vault key. Required.
        :paramtype key_name: str
        :keyword key_version: Version of Key Vault key. Required.
        :paramtype key_version: str
        """
        super().__init__(**kwargs)
        self.key_vault_uri = key_vault_uri
        self.key_name = key_name
        self.key_version = key_version


class MarketplaceOfferDetails(_serialization.Model):
    """MarketplaceOfferDetails.

    :ivar saas_offer_id:
    :vartype saas_offer_id: str
    :ivar publisher_id:
    :vartype publisher_id: str
    """

    _attribute_map = {
        "saas_offer_id": {"key": "saasOfferId", "type": "str"},
        "publisher_id": {"key": "publisherId", "type": "str"},
    }

    def __init__(
        self, *, saas_offer_id: Optional[str] = None, publisher_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword saas_offer_id:
        :paramtype saas_offer_id: str
        :keyword publisher_id:
        :paramtype publisher_id: str
        """
        super().__init__(**kwargs)
        self.saas_offer_id = saas_offer_id
        self.publisher_id = publisher_id


class OAuthClientCredentials(AuthCredentials):
    """OAuthClientCredentials for clientId clientSecret auth.

    All required parameters must be populated in order to send to server.

    :ivar kind: Enum for different types of AuthCredentials supported. Required. Known values are:
     "OAuthClientCredentials" and "ApiKeyAuthCredentials".
    :vartype kind: str or ~azure.mgmt.agrifood.models.AuthCredentialsKind
    :ivar client_id: ClientId associated with the provider. Required.
    :vartype client_id: str
    :ivar client_secret: Properties of the key vault. Required.
    :vartype client_secret: ~azure.mgmt.agrifood.models.KeyVaultProperties
    """

    _validation = {
        "kind": {"required": True},
        "client_id": {"required": True, "min_length": 1},
        "client_secret": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
        "client_secret": {"key": "clientSecret", "type": "KeyVaultProperties"},
    }

    def __init__(self, *, client_id: str, client_secret: "_models.KeyVaultProperties", **kwargs: Any) -> None:
        """
        :keyword client_id: ClientId associated with the provider. Required.
        :paramtype client_id: str
        :keyword client_secret: Properties of the key vault. Required.
        :paramtype client_secret: ~azure.mgmt.agrifood.models.KeyVaultProperties
        """
        super().__init__(**kwargs)
        self.kind: str = "OAuthClientCredentials"
        self.client_id = client_id
        self.client_secret = client_secret


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.agrifood.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.agrifood.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.agrifood.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.agrifood.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.agrifood.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateEndpoint(_serialization.Model):
    """The private endpoint resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The ARM identifier for private endpoint.
    :vartype id: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None


class PrivateEndpointConnection(Resource):
    """The private endpoint connection resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar group_ids: The group ids for the private endpoint resource.
    :vartype group_ids: list[str]
    :ivar private_endpoint: The private endpoint resource.
    :vartype private_endpoint: ~azure.mgmt.agrifood.models.PrivateEndpoint
    :ivar private_link_service_connection_state: A collection of information about the state of the
     connection between service consumer and provider.
    :vartype private_link_service_connection_state:
     ~azure.mgmt.agrifood.models.PrivateLinkServiceConnectionState
    :ivar provisioning_state: The provisioning state of the private endpoint connection resource.
     Known values are: "Succeeded", "Creating", "Deleting", and "Failed".
    :vartype provisioning_state: str or
     ~azure.mgmt.agrifood.models.PrivateEndpointConnectionProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "group_ids": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "group_ids": {"key": "properties.groupIds", "type": "[str]"},
        "private_endpoint": {"key": "properties.privateEndpoint", "type": "PrivateEndpoint"},
        "private_link_service_connection_state": {
            "key": "properties.privateLinkServiceConnectionState",
            "type": "PrivateLinkServiceConnectionState",
        },
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        private_endpoint: Optional["_models.PrivateEndpoint"] = None,
        private_link_service_connection_state: Optional["_models.PrivateLinkServiceConnectionState"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword private_endpoint: The private endpoint resource.
        :paramtype private_endpoint: ~azure.mgmt.agrifood.models.PrivateEndpoint
        :keyword private_link_service_connection_state: A collection of information about the state of
         the connection between service consumer and provider.
        :paramtype private_link_service_connection_state:
         ~azure.mgmt.agrifood.models.PrivateLinkServiceConnectionState
        """
        super().__init__(**kwargs)
        self.group_ids = None
        self.private_endpoint = private_endpoint
        self.private_link_service_connection_state = private_link_service_connection_state
        self.provisioning_state = None


class PrivateEndpointConnectionListResult(_serialization.Model):
    """List of private endpoint connections associated with the specified resource.

    :ivar value: Array of private endpoint connections.
    :vartype value: list[~azure.mgmt.agrifood.models.PrivateEndpointConnection]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateEndpointConnection]"},
    }

    def __init__(self, *, value: Optional[List["_models.PrivateEndpointConnection"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Array of private endpoint connections.
        :paramtype value: list[~azure.mgmt.agrifood.models.PrivateEndpointConnection]
        """
        super().__init__(**kwargs)
        self.value = value


class PrivateLinkResource(Resource):
    """A private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar group_id: The private link resource group id.
    :vartype group_id: str
    :ivar required_members: The private link resource required member names.
    :vartype required_members: list[str]
    :ivar required_zone_names: The private link resource private link DNS zone name.
    :vartype required_zone_names: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "group_id": {"readonly": True},
        "required_members": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "group_id": {"key": "properties.groupId", "type": "str"},
        "required_members": {"key": "properties.requiredMembers", "type": "[str]"},
        "required_zone_names": {"key": "properties.requiredZoneNames", "type": "[str]"},
    }

    def __init__(self, *, required_zone_names: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword required_zone_names: The private link resource private link DNS zone name.
        :paramtype required_zone_names: list[str]
        """
        super().__init__(**kwargs)
        self.group_id = None
        self.required_members = None
        self.required_zone_names = required_zone_names


class PrivateLinkResourceListResult(_serialization.Model):
    """A list of private link resources.

    :ivar value: Array of private link resources.
    :vartype value: list[~azure.mgmt.agrifood.models.PrivateLinkResource]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateLinkResource]"},
    }

    def __init__(self, *, value: Optional[List["_models.PrivateLinkResource"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Array of private link resources.
        :paramtype value: list[~azure.mgmt.agrifood.models.PrivateLinkResource]
        """
        super().__init__(**kwargs)
        self.value = value


class PrivateLinkServiceConnectionState(_serialization.Model):
    """A collection of information about the state of the connection between service consumer and
    provider.

    :ivar status: Indicates whether the connection has been Approved/Rejected/Removed by the owner
     of the service. Known values are: "Pending", "Approved", and "Rejected".
    :vartype status: str or ~azure.mgmt.agrifood.models.PrivateEndpointServiceConnectionStatus
    :ivar description: The reason for approval/rejection of the connection.
    :vartype description: str
    :ivar actions_required: A message indicating if changes on the service provider require any
     updates on the consumer.
    :vartype actions_required: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "actions_required": {"key": "actionsRequired", "type": "str"},
    }

    def __init__(
        self,
        *,
        status: Optional[Union[str, "_models.PrivateEndpointServiceConnectionStatus"]] = None,
        description: Optional[str] = None,
        actions_required: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword status: Indicates whether the connection has been Approved/Rejected/Removed by the
         owner of the service. Known values are: "Pending", "Approved", and "Rejected".
        :paramtype status: str or ~azure.mgmt.agrifood.models.PrivateEndpointServiceConnectionStatus
        :keyword description: The reason for approval/rejection of the connection.
        :paramtype description: str
        :keyword actions_required: A message indicating if changes on the service provider require any
         updates on the consumer.
        :paramtype actions_required: str
        """
        super().__init__(**kwargs)
        self.status = status
        self.description = description
        self.actions_required = actions_required


class SensorIntegration(_serialization.Model):
    """Sensor integration request model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar enabled: Sensor integration enable state.
    :vartype enabled: str
    :ivar provisioning_state: Sensor integration instance provisioning state. Known values are:
     "Creating", "Updating", "Deleting", "Succeeded", "Failed", and "Running".
    :vartype provisioning_state: str or ~azure.mgmt.agrifood.models.ProvisioningState
    :ivar provisioning_info: Common error response for all Azure Resource Manager APIs to return
     error details for failed operations. (This also follows the OData error response format.).
    :vartype provisioning_info: ~azure.mgmt.agrifood.models.ErrorResponse
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "enabled": {"key": "enabled", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "provisioning_info": {"key": "provisioningInfo", "type": "ErrorResponse"},
    }

    def __init__(
        self,
        *,
        enabled: Optional[str] = None,
        provisioning_info: Optional["_models.ErrorResponse"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword enabled: Sensor integration enable state.
        :paramtype enabled: str
        :keyword provisioning_info: Common error response for all Azure Resource Manager APIs to return
         error details for failed operations. (This also follows the OData error response format.).
        :paramtype provisioning_info: ~azure.mgmt.agrifood.models.ErrorResponse
        """
        super().__init__(**kwargs)
        self.enabled = enabled
        self.provisioning_state = None
        self.provisioning_info = provisioning_info


class Solution(ProxyResource):
    """Solution resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.agrifood.models.SystemData
    :ivar properties: Solution resource properties.
    :vartype properties: ~azure.mgmt.agrifood.models.SolutionProperties
    :ivar e_tag: The ETag value to implement optimistic concurrency.
    :vartype e_tag: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "e_tag": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SolutionProperties"},
        "e_tag": {"key": "eTag", "type": "str"},
    }

    def __init__(self, *, properties: Optional["_models.SolutionProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Solution resource properties.
        :paramtype properties: ~azure.mgmt.agrifood.models.SolutionProperties
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.e_tag = None


class SolutionListResponse(_serialization.Model):
    """Paged response contains list of requested objects and a URL link to get the next set of
    results.

    All required parameters must be populated in order to send to server.

    :ivar value: List of requested objects. Required.
    :vartype value: list[~azure.mgmt.agrifood.models.Solution]
    :ivar skip_token: Token used in retrieving the next page. If null, there are no additional
     pages.
    :vartype skip_token: str
    :ivar next_link: Continuation link (absolute URI) to the next page of results in the list.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Solution]"},
        "skip_token": {"key": "$skipToken", "type": "str"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: List["_models.Solution"],
        skip_token: Optional[str] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: List of requested objects. Required.
        :paramtype value: list[~azure.mgmt.agrifood.models.Solution]
        :keyword skip_token: Token used in retrieving the next page. If null, there are no additional
         pages.
        :paramtype skip_token: str
        :keyword next_link: Continuation link (absolute URI) to the next page of results in the list.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.skip_token = skip_token
        self.next_link = next_link


class SolutionProperties(_serialization.Model):
    """Solution resource properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :vartype additional_properties: dict[str, any]
    :ivar partner_id: Partner Id of the Solution.
    :vartype partner_id: str
    :ivar saas_subscription_id: SaaS subscriptionId of the installed SaaS application. Required.
    :vartype saas_subscription_id: str
    :ivar saas_subscription_name: SaaS subscription name of the installed SaaS application.
     Required.
    :vartype saas_subscription_name: str
    :ivar marketplace_publisher_id: SaaS application Marketplace Publisher Id. Required.
    :vartype marketplace_publisher_id: str
    :ivar plan_id: SaaS application Plan Id. Required.
    :vartype plan_id: str
    :ivar role_assignment_id: Role Assignment Id.
    :vartype role_assignment_id: str
    :ivar offer_id: SaaS application Offer Id. Required.
    :vartype offer_id: str
    :ivar term_id: SaaS application Term Id. Required.
    :vartype term_id: str
    """

    _validation = {
        "partner_id": {"readonly": True},
        "saas_subscription_id": {"required": True, "min_length": 1},
        "saas_subscription_name": {"required": True, "min_length": 1},
        "marketplace_publisher_id": {"required": True, "min_length": 1},
        "plan_id": {"required": True, "min_length": 1},
        "offer_id": {"required": True, "min_length": 1},
        "term_id": {"required": True, "min_length": 1},
    }

    _attribute_map = {
        "additional_properties": {"key": "", "type": "{object}"},
        "partner_id": {"key": "partnerId", "type": "str"},
        "saas_subscription_id": {"key": "saasSubscriptionId", "type": "str"},
        "saas_subscription_name": {"key": "saasSubscriptionName", "type": "str"},
        "marketplace_publisher_id": {"key": "marketplacePublisherId", "type": "str"},
        "plan_id": {"key": "planId", "type": "str"},
        "role_assignment_id": {"key": "roleAssignmentId", "type": "str"},
        "offer_id": {"key": "offerId", "type": "str"},
        "term_id": {"key": "termId", "type": "str"},
    }

    def __init__(
        self,
        *,
        saas_subscription_id: str,
        saas_subscription_name: str,
        marketplace_publisher_id: str,
        plan_id: str,
        offer_id: str,
        term_id: str,
        additional_properties: Optional[Dict[str, Any]] = None,
        role_assignment_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword additional_properties: Unmatched properties from the message are deserialized to this
         collection.
        :paramtype additional_properties: dict[str, any]
        :keyword saas_subscription_id: SaaS subscriptionId of the installed SaaS application. Required.
        :paramtype saas_subscription_id: str
        :keyword saas_subscription_name: SaaS subscription name of the installed SaaS application.
         Required.
        :paramtype saas_subscription_name: str
        :keyword marketplace_publisher_id: SaaS application Marketplace Publisher Id. Required.
        :paramtype marketplace_publisher_id: str
        :keyword plan_id: SaaS application Plan Id. Required.
        :paramtype plan_id: str
        :keyword role_assignment_id: Role Assignment Id.
        :paramtype role_assignment_id: str
        :keyword offer_id: SaaS application Offer Id. Required.
        :paramtype offer_id: str
        :keyword term_id: SaaS application Term Id. Required.
        :paramtype term_id: str
        """
        super().__init__(**kwargs)
        self.additional_properties = additional_properties
        self.partner_id = None
        self.saas_subscription_id = saas_subscription_id
        self.saas_subscription_name = saas_subscription_name
        self.marketplace_publisher_id = marketplace_publisher_id
        self.plan_id = plan_id
        self.role_assignment_id = role_assignment_id
        self.offer_id = offer_id
        self.term_id = term_id


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.agrifood.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.agrifood.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.agrifood.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.agrifood.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class UnitSystemsInfo(_serialization.Model):
    """Unit systems info for the data provider.

    All required parameters must be populated in order to send to server.

    :ivar key: UnitSystem key sent as part of ProviderInput. Required.
    :vartype key: str
    :ivar values: List of unit systems supported by this data provider. Required.
    :vartype values: list[str]
    """

    _validation = {
        "key": {"required": True, "max_length": 100, "min_length": 1},
        "values": {"required": True},
    }

    _attribute_map = {
        "key": {"key": "key", "type": "str"},
        "values": {"key": "values", "type": "[str]"},
    }

    def __init__(self, *, key: str, values: List[str], **kwargs: Any) -> None:
        """
        :keyword key: UnitSystem key sent as part of ProviderInput. Required.
        :paramtype key: str
        :keyword values: List of unit systems supported by this data provider. Required.
        :paramtype values: list[str]
        """
        super().__init__(**kwargs)
        self.key = key
        self.values = values
