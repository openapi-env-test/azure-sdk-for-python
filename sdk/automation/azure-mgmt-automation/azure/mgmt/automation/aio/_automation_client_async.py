# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional

from azure.mgmt.core import AsyncARMPipelineClient
from msrest import Deserializer, Serializer

from ._configuration_async import AutomationClientConfiguration
from .operations_async import AutomationAccountOperations
from .operations_async import Operations
from .operations_async import StatisticsOperations
from .operations_async import UsagesOperations
from .operations_async import KeysOperations
from .operations_async import CertificateOperations
from .operations_async import ConnectionOperations
from .operations_async import ConnectionTypeOperations
from .operations_async import CredentialOperations
from .operations_async import DscConfigurationOperations
from .operations_async import HybridRunbookWorkerGroupOperations
from .operations_async import JobScheduleOperations
from .operations_async import LinkedWorkspaceOperations
from .operations_async import ActivityOperations
from .operations_async import ModuleOperations
from .operations_async import ObjectDataTypesOperations
from .operations_async import FieldsOperations
from .operations_async import ScheduleOperations
from .operations_async import VariableOperations
from .operations_async import WebhookOperations
from .operations_async import WatcherOperations
from .operations_async import SoftwareUpdateConfigurationsOperations
from .operations_async import SoftwareUpdateConfigurationRunsOperations
from .operations_async import SoftwareUpdateConfigurationMachineRunsOperations
from .operations_async import SourceControlOperations
from .operations_async import SourceControlSyncJobOperations
from .operations_async import SourceControlSyncJobStreamsOperations
from .operations_async import JobOperations
from .operations_async import JobStreamOperations
from .operations_async import AgentRegistrationInformationOperations
from .operations_async import DscNodeOperations
from .operations_async import NodeReportsOperations
from .operations_async import DscCompilationJobOperations
from .operations_async import DscCompilationJobStreamOperations
from .operations_async import DscNodeConfigurationOperations
from .operations_async import NodeCountInformationOperations
from .operations_async import RunbookDraftOperations
from .operations_async import RunbookOperations
from .operations_async import TestJobStreamsOperations
from .operations_async import TestJobOperations
from .operations_async import Python2PackageOperations
from .. import models


class AutomationClient(object):
    """Automation Client.

    :ivar automation_account: AutomationAccountOperations operations
    :vartype automation_account: azure.mgmt.automation.aio.operations_async.AutomationAccountOperations
    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.automation.aio.operations_async.Operations
    :ivar statistics: StatisticsOperations operations
    :vartype statistics: azure.mgmt.automation.aio.operations_async.StatisticsOperations
    :ivar usages: UsagesOperations operations
    :vartype usages: azure.mgmt.automation.aio.operations_async.UsagesOperations
    :ivar keys: KeysOperations operations
    :vartype keys: azure.mgmt.automation.aio.operations_async.KeysOperations
    :ivar certificate: CertificateOperations operations
    :vartype certificate: azure.mgmt.automation.aio.operations_async.CertificateOperations
    :ivar connection: ConnectionOperations operations
    :vartype connection: azure.mgmt.automation.aio.operations_async.ConnectionOperations
    :ivar connection_type: ConnectionTypeOperations operations
    :vartype connection_type: azure.mgmt.automation.aio.operations_async.ConnectionTypeOperations
    :ivar credential: CredentialOperations operations
    :vartype credential: azure.mgmt.automation.aio.operations_async.CredentialOperations
    :ivar dsc_configuration: DscConfigurationOperations operations
    :vartype dsc_configuration: azure.mgmt.automation.aio.operations_async.DscConfigurationOperations
    :ivar hybrid_runbook_worker_group: HybridRunbookWorkerGroupOperations operations
    :vartype hybrid_runbook_worker_group: azure.mgmt.automation.aio.operations_async.HybridRunbookWorkerGroupOperations
    :ivar job_schedule: JobScheduleOperations operations
    :vartype job_schedule: azure.mgmt.automation.aio.operations_async.JobScheduleOperations
    :ivar linked_workspace: LinkedWorkspaceOperations operations
    :vartype linked_workspace: azure.mgmt.automation.aio.operations_async.LinkedWorkspaceOperations
    :ivar activity: ActivityOperations operations
    :vartype activity: azure.mgmt.automation.aio.operations_async.ActivityOperations
    :ivar module: ModuleOperations operations
    :vartype module: azure.mgmt.automation.aio.operations_async.ModuleOperations
    :ivar object_data_types: ObjectDataTypesOperations operations
    :vartype object_data_types: azure.mgmt.automation.aio.operations_async.ObjectDataTypesOperations
    :ivar fields: FieldsOperations operations
    :vartype fields: azure.mgmt.automation.aio.operations_async.FieldsOperations
    :ivar schedule: ScheduleOperations operations
    :vartype schedule: azure.mgmt.automation.aio.operations_async.ScheduleOperations
    :ivar variable: VariableOperations operations
    :vartype variable: azure.mgmt.automation.aio.operations_async.VariableOperations
    :ivar webhook: WebhookOperations operations
    :vartype webhook: azure.mgmt.automation.aio.operations_async.WebhookOperations
    :ivar watcher: WatcherOperations operations
    :vartype watcher: azure.mgmt.automation.aio.operations_async.WatcherOperations
    :ivar software_update_configurations: SoftwareUpdateConfigurationsOperations operations
    :vartype software_update_configurations: azure.mgmt.automation.aio.operations_async.SoftwareUpdateConfigurationsOperations
    :ivar software_update_configuration_runs: SoftwareUpdateConfigurationRunsOperations operations
    :vartype software_update_configuration_runs: azure.mgmt.automation.aio.operations_async.SoftwareUpdateConfigurationRunsOperations
    :ivar software_update_configuration_machine_runs: SoftwareUpdateConfigurationMachineRunsOperations operations
    :vartype software_update_configuration_machine_runs: azure.mgmt.automation.aio.operations_async.SoftwareUpdateConfigurationMachineRunsOperations
    :ivar source_control: SourceControlOperations operations
    :vartype source_control: azure.mgmt.automation.aio.operations_async.SourceControlOperations
    :ivar source_control_sync_job: SourceControlSyncJobOperations operations
    :vartype source_control_sync_job: azure.mgmt.automation.aio.operations_async.SourceControlSyncJobOperations
    :ivar source_control_sync_job_streams: SourceControlSyncJobStreamsOperations operations
    :vartype source_control_sync_job_streams: azure.mgmt.automation.aio.operations_async.SourceControlSyncJobStreamsOperations
    :ivar job: JobOperations operations
    :vartype job: azure.mgmt.automation.aio.operations_async.JobOperations
    :ivar job_stream: JobStreamOperations operations
    :vartype job_stream: azure.mgmt.automation.aio.operations_async.JobStreamOperations
    :ivar agent_registration_information: AgentRegistrationInformationOperations operations
    :vartype agent_registration_information: azure.mgmt.automation.aio.operations_async.AgentRegistrationInformationOperations
    :ivar dsc_node: DscNodeOperations operations
    :vartype dsc_node: azure.mgmt.automation.aio.operations_async.DscNodeOperations
    :ivar node_reports: NodeReportsOperations operations
    :vartype node_reports: azure.mgmt.automation.aio.operations_async.NodeReportsOperations
    :ivar dsc_compilation_job: DscCompilationJobOperations operations
    :vartype dsc_compilation_job: azure.mgmt.automation.aio.operations_async.DscCompilationJobOperations
    :ivar dsc_compilation_job_stream: DscCompilationJobStreamOperations operations
    :vartype dsc_compilation_job_stream: azure.mgmt.automation.aio.operations_async.DscCompilationJobStreamOperations
    :ivar dsc_node_configuration: DscNodeConfigurationOperations operations
    :vartype dsc_node_configuration: azure.mgmt.automation.aio.operations_async.DscNodeConfigurationOperations
    :ivar node_count_information: NodeCountInformationOperations operations
    :vartype node_count_information: azure.mgmt.automation.aio.operations_async.NodeCountInformationOperations
    :ivar runbook_draft: RunbookDraftOperations operations
    :vartype runbook_draft: azure.mgmt.automation.aio.operations_async.RunbookDraftOperations
    :ivar runbook: RunbookOperations operations
    :vartype runbook: azure.mgmt.automation.aio.operations_async.RunbookOperations
    :ivar test_job_streams: TestJobStreamsOperations operations
    :vartype test_job_streams: azure.mgmt.automation.aio.operations_async.TestJobStreamsOperations
    :ivar test_job: TestJobOperations operations
    :vartype test_job: azure.mgmt.automation.aio.operations_async.TestJobOperations
    :ivar python2_package: Python2PackageOperations operations
    :vartype python2_package: azure.mgmt.automation.aio.operations_async.Python2PackageOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param subscription_id: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    :type subscription_id: str
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        subscription_id: str,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = AutomationClientConfiguration(credential, subscription_id, **kwargs)
        self._client = AsyncARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.automation_account = AutomationAccountOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operations = Operations(
            self._client, self._config, self._serialize, self._deserialize)
        self.statistics = StatisticsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.usages = UsagesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.keys = KeysOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.certificate = CertificateOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.connection = ConnectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.connection_type = ConnectionTypeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.credential = CredentialOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.dsc_configuration = DscConfigurationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.hybrid_runbook_worker_group = HybridRunbookWorkerGroupOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.job_schedule = JobScheduleOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.linked_workspace = LinkedWorkspaceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.activity = ActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.module = ModuleOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.object_data_types = ObjectDataTypesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.fields = FieldsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.schedule = ScheduleOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.variable = VariableOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.webhook = WebhookOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.watcher = WatcherOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.software_update_configurations = SoftwareUpdateConfigurationsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.software_update_configuration_runs = SoftwareUpdateConfigurationRunsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.software_update_configuration_machine_runs = SoftwareUpdateConfigurationMachineRunsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.source_control = SourceControlOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.source_control_sync_job = SourceControlSyncJobOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.source_control_sync_job_streams = SourceControlSyncJobStreamsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.job = JobOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.job_stream = JobStreamOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.agent_registration_information = AgentRegistrationInformationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.dsc_node = DscNodeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.node_reports = NodeReportsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.dsc_compilation_job = DscCompilationJobOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.dsc_compilation_job_stream = DscCompilationJobStreamOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.dsc_node_configuration = DscNodeConfigurationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.node_count_information = NodeCountInformationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.runbook_draft = RunbookDraftOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.runbook = RunbookOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_job_streams = TestJobStreamsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_job = TestJobOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.python2_package = Python2PackageOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "AutomationClient":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
