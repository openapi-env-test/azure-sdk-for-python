{
 "$id": "1",
 "modelTypes": [
  {
   "$id": "2",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "3",
     "isReadOnly": false,
     "realPath": [
      "displayName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "4",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "5",
      "fixed": false,
      "raw": "The display name of the policy assignment."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "6",
      "fixed": false,
      "raw": "displayName"
     },
     "serializedName": "displayName",
     "modelType": {
      "$id": "7",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "8",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "9",
     "isReadOnly": false,
     "realPath": [
      "policyDefinitionId"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "10",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "11",
      "fixed": false,
      "raw": "The ID of the policy definition or policy set definition being assigned."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "12",
      "fixed": false,
      "raw": "policyDefinitionId"
     },
     "serializedName": "policyDefinitionId",
     "modelType": {
      "$id": "13",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "14",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "15",
     "isReadOnly": false,
     "realPath": [
      "scope"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "16",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "17",
      "fixed": false,
      "raw": "The scope for the policy assignment."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "18",
      "fixed": false,
      "raw": "scope"
     },
     "serializedName": "scope",
     "modelType": {
      "$id": "19",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "20",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "21",
     "isReadOnly": false,
     "realPath": [
      "notScopes"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "22",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "23",
      "fixed": false,
      "raw": "The policy's excluded scopes."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "24",
      "fixed": false,
      "raw": "notScopes"
     },
     "serializedName": "notScopes",
     "modelType": {
      "$id": "25",
      "$type": "SequenceType",
      "elementType": {
       "$id": "26",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "27",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "28",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "29",
     "isReadOnly": false,
     "realPath": [
      "parameters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "30",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "31",
      "fixed": false,
      "raw": "Required if a parameter is used in policy rule."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "32",
      "fixed": false,
      "raw": "parameters"
     },
     "serializedName": "parameters",
     "modelType": {
      "$id": "33",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "34",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    },
    {
     "$id": "35",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "36",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "37",
      "fixed": false,
      "raw": "This message will be part of response in case of policy violation."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "38",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "39",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "40",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "41",
     "isReadOnly": false,
     "realPath": [
      "metadata"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "42",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "43",
      "fixed": false,
      "raw": "The policy assignment metadata."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "44",
      "fixed": false,
      "raw": "metadata"
     },
     "serializedName": "metadata",
     "modelType": {
      "$id": "45",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "46",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicyAssignmentProperties",
   "documentation": "The policy assignment properties.",
   "containsConstantProperties": false,
   "name": {
    "$id": "47",
    "fixed": false,
    "raw": "PolicyAssignmentProperties"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "PolicyAssignmentProperties",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/schemas/PolicyAssignmentProperties"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "48",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "49",
     "isReadOnly": false,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "50",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "51",
      "fixed": false,
      "raw": "The name of the policy sku. Possible values are A0 and A1."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "52",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "53",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "54",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "55",
     "isReadOnly": false,
     "realPath": [
      "tier"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "56",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "57",
      "fixed": false,
      "raw": "The policy sku tier. Possible values are Free and Standard."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "58",
      "fixed": false,
      "raw": "tier"
     },
     "serializedName": "tier",
     "modelType": {
      "$id": "59",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "60",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicySku",
   "documentation": "The policy sku. This property is optional, obsolete, and will be ignored.",
   "containsConstantProperties": false,
   "name": {
    "$id": "61",
    "fixed": false,
    "raw": "PolicySku"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "PolicySku",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/schemas/PolicySku"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "62",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "63",
     "isReadOnly": true,
     "realPath": [
      "principalId"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "64",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "65",
      "fixed": false,
      "raw": "The principal ID of the resource identity."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "66",
      "fixed": false,
      "raw": "principalId"
     },
     "serializedName": "principalId",
     "modelType": {
      "$id": "67",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "68",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "69",
     "isReadOnly": true,
     "realPath": [
      "tenantId"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "70",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "71",
      "fixed": false,
      "raw": "The tenant ID of the resource identity."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "72",
      "fixed": false,
      "raw": "tenantId"
     },
     "serializedName": "tenantId",
     "modelType": {
      "$id": "73",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "74",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "75",
     "isReadOnly": false,
     "realPath": [
      "type"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "76",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "77",
      "fixed": false,
      "raw": "The identity type."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2018-05-01"
       ],
       "filename": [
        "mem:///303?oai3.shaken.json"
       ],
       "name": "ResourceIdentityType",
       "originalLocations": [
        "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/schemas/Identity-type"
       ]
      },
      "x-ms-enum": {
       "name": "ResourceIdentityType",
       "modelAsString": false
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "78",
      "fixed": false,
      "raw": "type"
     },
     "serializedName": "type",
     "modelType": {
      "$id": "79",
      "$type": "EnumType",
      "modelAsExtensible": false,
      "values": [
       {
        "$id": "80",
        "name": "SystemAssigned",
        "serializedName": "SystemAssigned"
       },
       {
        "$id": "81",
        "name": "None",
        "serializedName": "None"
       }
      ],
      "modelAsString": false,
      "underlyingType": {
       "$id": "82",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "83",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "84",
       "fixed": false,
       "raw": "ResourceIdentityType"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "Identity",
   "documentation": "Identity for the resource.",
   "containsConstantProperties": false,
   "name": {
    "$id": "85",
    "fixed": false,
    "raw": "Identity"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "Identity",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/schemas/Identity"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "86",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "87",
     "isReadOnly": false,
     "realPath": [
      "properties"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "88",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "89",
      "fixed": false,
      "raw": "Properties for the policy assignment."
     },
     "extensions": {
      "x-ms-client-flatten": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "90",
      "fixed": false,
      "raw": "properties"
     },
     "serializedName": "properties",
     "modelType": {
      "$ref": "2"
     }
    },
    {
     "$id": "91",
     "isReadOnly": true,
     "realPath": [
      "id"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "92",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "93",
      "fixed": false,
      "raw": "The ID of the policy assignment."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "94",
      "fixed": false,
      "raw": "id"
     },
     "serializedName": "id",
     "modelType": {
      "$id": "95",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "96",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "97",
     "isReadOnly": true,
     "realPath": [
      "type"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "98",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "99",
      "fixed": false,
      "raw": "The type of the policy assignment."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "100",
      "fixed": false,
      "raw": "type"
     },
     "serializedName": "type",
     "modelType": {
      "$id": "101",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "102",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "103",
     "isReadOnly": true,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "104",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "105",
      "fixed": false,
      "raw": "The name of the policy assignment."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "106",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "107",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "108",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "109",
     "isReadOnly": false,
     "realPath": [
      "sku"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "110",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "111",
      "fixed": false,
      "raw": "The policy sku. This property is optional, obsolete, and will be ignored."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "112",
      "fixed": false,
      "raw": "sku"
     },
     "serializedName": "sku",
     "modelType": {
      "$ref": "48"
     }
    },
    {
     "$id": "113",
     "isReadOnly": false,
     "realPath": [
      "location"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "114",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "115",
      "fixed": false,
      "raw": "The location of the policy assignment. Only required when utilizing managed identity."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "116",
      "fixed": false,
      "raw": "location"
     },
     "serializedName": "location",
     "modelType": {
      "$id": "117",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "118",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "119",
     "isReadOnly": false,
     "realPath": [
      "identity"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "120",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "121",
      "fixed": false,
      "raw": "The managed identity associated with the policy assignment."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "122",
      "fixed": false,
      "raw": "identity"
     },
     "serializedName": "identity",
     "modelType": {
      "$ref": "62"
     }
    }
   ],
   "serializedName": "PolicyAssignment",
   "documentation": "The policy assignment.",
   "containsConstantProperties": false,
   "name": {
    "$id": "123",
    "fixed": false,
    "raw": "PolicyAssignment"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "PolicyAssignment",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/schemas/PolicyAssignment"
     ]
    },
    "x-ms-azure-resource": true
   },
   "deprecated": false
  },
  {
   "$id": "124",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "125",
     "isReadOnly": false,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "126",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "127",
      "fixed": false,
      "raw": "An array of policy assignments."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "128",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "129",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "86"
      },
      "name": {
       "$id": "130",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "131",
     "isReadOnly": false,
     "realPath": [
      "nextLink"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "132",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "133",
      "fixed": false,
      "raw": "The URL to use for getting the next set of results."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "134",
      "fixed": false,
      "raw": "nextLink"
     },
     "serializedName": "nextLink",
     "modelType": {
      "$id": "135",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "136",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicyAssignmentListResult",
   "documentation": "List of policy assignments.",
   "containsConstantProperties": false,
   "name": {
    "$id": "137",
    "fixed": false,
    "raw": "PolicyAssignmentListResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "PolicyAssignmentListResult",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/schemas/PolicyAssignmentListResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "138",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "139",
     "isReadOnly": false,
     "realPath": [
      "httpStatus"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "140",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "141",
      "fixed": false,
      "raw": "Http status code."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "142",
      "fixed": false,
      "raw": "httpStatus"
     },
     "serializedName": "httpStatus",
     "modelType": {
      "$id": "143",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "144",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "145",
     "isReadOnly": false,
     "realPath": [
      "errorCode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "146",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "147",
      "fixed": false,
      "raw": "Error code."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "148",
      "fixed": false,
      "raw": "errorCode"
     },
     "serializedName": "errorCode",
     "modelType": {
      "$id": "149",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "150",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "151",
     "isReadOnly": false,
     "realPath": [
      "errorMessage"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "152",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "153",
      "fixed": false,
      "raw": "Error message indicating why the operation failed."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "154",
      "fixed": false,
      "raw": "errorMessage"
     },
     "serializedName": "errorMessage",
     "modelType": {
      "$id": "155",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "156",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "ErrorResponse",
   "documentation": "Error response indicates Azure Resource Manager is not able to process the incoming request. The reason is provided in the error message.",
   "containsConstantProperties": false,
   "name": {
    "$id": "157",
    "fixed": false,
    "raw": "ErrorResponse"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json",
      "mem:///305?oai3.shaken.json"
     ],
     "name": "ErrorResponse",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/schemas/ErrorResponse",
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/schemas/ErrorResponse"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "158",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "159",
     "isReadOnly": false,
     "realPath": [
      "policyType"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "160",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "161",
      "fixed": false,
      "raw": "The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2018-05-01"
       ],
       "filename": [
        "mem:///304?oai3.shaken.json",
        "mem:///305?oai3.shaken.json"
       ],
       "name": "policyType",
       "originalLocations": [
        "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/schemas/PolicyDefinitionProperties-policyType",
        "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/schemas/PolicySetDefinitionProperties-policyType"
       ]
      },
      "x-ms-enum": {
       "name": "policyType",
       "modelAsString": true
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "162",
      "fixed": false,
      "raw": "policyType"
     },
     "serializedName": "policyType",
     "modelType": {
      "$id": "163",
      "$type": "EnumType",
      "modelAsExtensible": false,
      "values": [
       {
        "$id": "164",
        "name": "NotSpecified",
        "serializedName": "NotSpecified"
       },
       {
        "$id": "165",
        "name": "BuiltIn",
        "serializedName": "BuiltIn"
       },
       {
        "$id": "166",
        "name": "Custom",
        "serializedName": "Custom"
       }
      ],
      "modelAsString": true,
      "underlyingType": {
       "$id": "167",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "168",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "169",
       "fixed": false,
       "raw": "policyType"
      },
      "deprecated": false
     }
    },
    {
     "$id": "170",
     "isReadOnly": false,
     "realPath": [
      "mode"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "171",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "172",
      "fixed": false,
      "raw": "The policy definition mode. Possible values are NotSpecified, Indexed, and All."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2018-05-01"
       ],
       "filename": [
        "mem:///304?oai3.shaken.json"
       ],
       "name": "policyMode",
       "originalLocations": [
        "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/schemas/PolicyDefinitionProperties-mode"
       ]
      },
      "x-ms-enum": {
       "name": "policyMode",
       "modelAsString": true
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "173",
      "fixed": false,
      "raw": "mode"
     },
     "serializedName": "mode",
     "modelType": {
      "$id": "174",
      "$type": "EnumType",
      "modelAsExtensible": false,
      "values": [
       {
        "$id": "175",
        "name": "NotSpecified",
        "serializedName": "NotSpecified"
       },
       {
        "$id": "176",
        "name": "Indexed",
        "serializedName": "Indexed"
       },
       {
        "$id": "177",
        "name": "All",
        "serializedName": "All"
       }
      ],
      "modelAsString": true,
      "underlyingType": {
       "$id": "178",
       "$type": "PrimaryType",
       "knownPrimaryType": "string",
       "name": {
        "$id": "179",
        "fixed": false,
        "raw": "String"
       },
       "deprecated": false
      },
      "name": {
       "$id": "180",
       "fixed": false,
       "raw": "policyMode"
      },
      "deprecated": false
     }
    },
    {
     "$id": "181",
     "isReadOnly": false,
     "realPath": [
      "displayName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "182",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "183",
      "fixed": false,
      "raw": "The display name of the policy definition."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "184",
      "fixed": false,
      "raw": "displayName"
     },
     "serializedName": "displayName",
     "modelType": {
      "$id": "185",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "186",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "187",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "188",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "189",
      "fixed": false,
      "raw": "The policy definition description."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "190",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "191",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "192",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "193",
     "isReadOnly": false,
     "realPath": [
      "policyRule"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "194",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "195",
      "fixed": false,
      "raw": "The policy rule."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "196",
      "fixed": false,
      "raw": "policyRule"
     },
     "serializedName": "policyRule",
     "modelType": {
      "$id": "197",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "198",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    },
    {
     "$id": "199",
     "isReadOnly": false,
     "realPath": [
      "metadata"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "200",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "201",
      "fixed": false,
      "raw": "The policy definition metadata."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "202",
      "fixed": false,
      "raw": "metadata"
     },
     "serializedName": "metadata",
     "modelType": {
      "$id": "203",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "204",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    },
    {
     "$id": "205",
     "isReadOnly": false,
     "realPath": [
      "parameters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "206",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "207",
      "fixed": false,
      "raw": "Required if a parameter is used in policy rule."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "208",
      "fixed": false,
      "raw": "parameters"
     },
     "serializedName": "parameters",
     "modelType": {
      "$id": "209",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "210",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicyDefinitionProperties",
   "documentation": "The policy definition properties.",
   "containsConstantProperties": false,
   "name": {
    "$id": "211",
    "fixed": false,
    "raw": "PolicyDefinitionProperties"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "PolicyDefinitionProperties",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/schemas/PolicyDefinitionProperties"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "212",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "213",
     "isReadOnly": false,
     "realPath": [
      "properties"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "214",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "215",
      "fixed": false,
      "raw": "The policy definition properties."
     },
     "extensions": {
      "x-ms-client-flatten": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "216",
      "fixed": false,
      "raw": "properties"
     },
     "serializedName": "properties",
     "modelType": {
      "$ref": "158"
     }
    },
    {
     "$id": "217",
     "isReadOnly": true,
     "realPath": [
      "id"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "218",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "219",
      "fixed": false,
      "raw": "The ID of the policy definition."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "220",
      "fixed": false,
      "raw": "id"
     },
     "serializedName": "id",
     "modelType": {
      "$id": "221",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "222",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "223",
     "isReadOnly": true,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "224",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "225",
      "fixed": false,
      "raw": "The name of the policy definition."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "226",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "227",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "228",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "229",
     "isReadOnly": true,
     "realPath": [
      "type"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "230",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "231",
      "fixed": false,
      "raw": "The type of the resource (Microsoft.Authorization/policyDefinitions)."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "232",
      "fixed": false,
      "raw": "type"
     },
     "serializedName": "type",
     "modelType": {
      "$id": "233",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "234",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicyDefinition",
   "documentation": "The policy definition.",
   "containsConstantProperties": false,
   "name": {
    "$id": "235",
    "fixed": false,
    "raw": "PolicyDefinition"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "PolicyDefinition",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/schemas/PolicyDefinition"
     ]
    },
    "x-ms-azure-resource": true
   },
   "deprecated": false
  },
  {
   "$id": "236",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "237",
     "isReadOnly": false,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "238",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "239",
      "fixed": false,
      "raw": "An array of policy definitions."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "240",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "241",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "212"
      },
      "name": {
       "$id": "242",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "243",
     "isReadOnly": false,
     "realPath": [
      "nextLink"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "244",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "245",
      "fixed": false,
      "raw": "The URL to use for getting the next set of results."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "246",
      "fixed": false,
      "raw": "nextLink"
     },
     "serializedName": "nextLink",
     "modelType": {
      "$id": "247",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "248",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicyDefinitionListResult",
   "documentation": "List of policy definitions.",
   "containsConstantProperties": false,
   "name": {
    "$id": "249",
    "fixed": false,
    "raw": "PolicyDefinitionListResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "PolicyDefinitionListResult",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/schemas/PolicyDefinitionListResult"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "250",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "251",
     "isReadOnly": false,
     "realPath": [
      "policyDefinitionId"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "252",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "253",
      "fixed": false,
      "raw": "The ID of the policy definition or policy set definition."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "254",
      "fixed": false,
      "raw": "policyDefinitionId"
     },
     "serializedName": "policyDefinitionId",
     "modelType": {
      "$id": "255",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "256",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "257",
     "isReadOnly": false,
     "realPath": [
      "parameters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "258",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "259",
      "fixed": false,
      "raw": "Required if a parameter is used in policy rule."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "260",
      "fixed": false,
      "raw": "parameters"
     },
     "serializedName": "parameters",
     "modelType": {
      "$id": "261",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "262",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicyDefinitionReference",
   "documentation": "The policy definition reference.",
   "containsConstantProperties": false,
   "name": {
    "$id": "263",
    "fixed": false,
    "raw": "PolicyDefinitionReference"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "PolicyDefinitionReference",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/schemas/PolicyDefinitionReference"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "264",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "265",
     "isReadOnly": false,
     "realPath": [
      "policyType"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "266",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "267",
      "fixed": false,
      "raw": "The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom."
     },
     "extensions": {
      "x-ms-metadata": {
       "apiVersions": [
        "2018-05-01"
       ],
       "filename": [
        "mem:///304?oai3.shaken.json",
        "mem:///305?oai3.shaken.json"
       ],
       "name": "policyType",
       "originalLocations": [
        "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/schemas/PolicyDefinitionProperties-policyType",
        "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/schemas/PolicySetDefinitionProperties-policyType"
       ]
      },
      "x-ms-enum": {
       "name": "policyType",
       "modelAsString": true
      }
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "268",
      "fixed": false,
      "raw": "policyType"
     },
     "serializedName": "policyType",
     "modelType": {
      "$ref": "163"
     }
    },
    {
     "$id": "269",
     "isReadOnly": false,
     "realPath": [
      "displayName"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "270",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "271",
      "fixed": false,
      "raw": "The display name of the policy set definition."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "272",
      "fixed": false,
      "raw": "displayName"
     },
     "serializedName": "displayName",
     "modelType": {
      "$id": "273",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "274",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "275",
     "isReadOnly": false,
     "realPath": [
      "description"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "276",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "277",
      "fixed": false,
      "raw": "The policy set definition description."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "278",
      "fixed": false,
      "raw": "description"
     },
     "serializedName": "description",
     "modelType": {
      "$id": "279",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "280",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "281",
     "isReadOnly": false,
     "realPath": [
      "metadata"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "282",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "283",
      "fixed": false,
      "raw": "The policy set definition metadata."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "284",
      "fixed": false,
      "raw": "metadata"
     },
     "serializedName": "metadata",
     "modelType": {
      "$id": "285",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "286",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    },
    {
     "$id": "287",
     "isReadOnly": false,
     "realPath": [
      "parameters"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "288",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "289",
      "fixed": false,
      "raw": "The policy set definition parameters that can be used in policy definition references."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "290",
      "fixed": false,
      "raw": "parameters"
     },
     "serializedName": "parameters",
     "modelType": {
      "$id": "291",
      "$type": "PrimaryType",
      "knownPrimaryType": "object",
      "name": {
       "$id": "292",
       "fixed": false,
       "raw": "Object"
      },
      "deprecated": false
     }
    },
    {
     "$id": "293",
     "isReadOnly": false,
     "realPath": [
      "policyDefinitions"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "294",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "295",
      "fixed": false,
      "raw": "An array of policy definition references."
     },
     "isRequired": true,
     "isConstant": false,
     "name": {
      "$id": "296",
      "fixed": false,
      "raw": "policyDefinitions"
     },
     "serializedName": "policyDefinitions",
     "modelType": {
      "$id": "297",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "250"
      },
      "name": {
       "$id": "298",
       "fixed": false
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicySetDefinitionProperties",
   "documentation": "The policy set definition properties.",
   "containsConstantProperties": false,
   "name": {
    "$id": "299",
    "fixed": false,
    "raw": "PolicySetDefinitionProperties"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "PolicySetDefinitionProperties",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/schemas/PolicySetDefinitionProperties"
     ]
    }
   },
   "deprecated": false
  },
  {
   "$id": "300",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "301",
     "isReadOnly": false,
     "realPath": [
      "properties"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "302",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "303",
      "fixed": false,
      "raw": "The policy definition properties."
     },
     "extensions": {
      "x-ms-client-flatten": true
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "304",
      "fixed": false,
      "raw": "properties"
     },
     "serializedName": "properties",
     "modelType": {
      "$ref": "264"
     }
    },
    {
     "$id": "305",
     "isReadOnly": true,
     "realPath": [
      "id"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "306",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "307",
      "fixed": false,
      "raw": "The ID of the policy set definition."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "308",
      "fixed": false,
      "raw": "id"
     },
     "serializedName": "id",
     "modelType": {
      "$id": "309",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "310",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "311",
     "isReadOnly": true,
     "realPath": [
      "name"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "312",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "313",
      "fixed": false,
      "raw": "The name of the policy set definition."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "314",
      "fixed": false,
      "raw": "name"
     },
     "serializedName": "name",
     "modelType": {
      "$id": "315",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "316",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    },
    {
     "$id": "317",
     "isReadOnly": true,
     "realPath": [
      "type"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "318",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "319",
      "fixed": false,
      "raw": "The type of the resource (Microsoft.Authorization/policySetDefinitions)."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "320",
      "fixed": false,
      "raw": "type"
     },
     "serializedName": "type",
     "modelType": {
      "$id": "321",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "322",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicySetDefinition",
   "documentation": "The policy set definition.",
   "containsConstantProperties": false,
   "name": {
    "$id": "323",
    "fixed": false,
    "raw": "PolicySetDefinition"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "PolicySetDefinition",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/schemas/PolicySetDefinition"
     ]
    },
    "x-ms-azure-resource": true
   },
   "deprecated": false
  },
  {
   "$id": "324",
   "$type": "CompositeType",
   "properties": [
    {
     "$id": "325",
     "isReadOnly": false,
     "realPath": [
      "value"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "326",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "327",
      "fixed": false,
      "raw": "An array of policy set definitions."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "328",
      "fixed": false,
      "raw": "value"
     },
     "serializedName": "value",
     "modelType": {
      "$id": "329",
      "$type": "SequenceType",
      "elementType": {
       "$ref": "300"
      },
      "name": {
       "$id": "330",
       "fixed": false
      },
      "deprecated": false
     }
    },
    {
     "$id": "331",
     "isReadOnly": false,
     "realPath": [
      "nextLink"
     ],
     "collectionFormat": "none",
     "defaultValue": {
      "$id": "332",
      "fixed": false
     },
     "deprecated": false,
     "documentation": {
      "$id": "333",
      "fixed": false,
      "raw": "The URL to use for getting the next set of results."
     },
     "isRequired": false,
     "isConstant": false,
     "name": {
      "$id": "334",
      "fixed": false,
      "raw": "nextLink"
     },
     "serializedName": "nextLink",
     "modelType": {
      "$id": "335",
      "$type": "PrimaryType",
      "knownPrimaryType": "string",
      "name": {
       "$id": "336",
       "fixed": false,
       "raw": "String"
      },
      "deprecated": false
     }
    }
   ],
   "serializedName": "PolicySetDefinitionListResult",
   "documentation": "List of policy set definitions.",
   "containsConstantProperties": false,
   "name": {
    "$id": "337",
    "fixed": false,
    "raw": "PolicySetDefinitionListResult"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "PolicySetDefinitionListResult",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/schemas/PolicySetDefinitionListResult"
     ]
    }
   },
   "deprecated": false
  }
 ],
 "errorTypes": [
  {
   "$ref": "138"
  }
 ],
 "enumTypes": [
  {
   "$ref": "79"
  },
  {
   "$ref": "163"
  },
  {
   "$ref": "174"
  }
 ],
 "name": "PolicyClient",
 "namespace": "Azure.mgmt.resource.policy.v20180501",
 "modelsName": "Models",
 "apiVersion": "2018-05-01",
 "baseUrl": "https://management.azure.com",
 "documentation": "To manage and control access to your resources, you can define customized policies and assign them at a scope.",
 "extensions": {
  "security": [
   {
    "azure_auth": [
     "user_impersonation"
    ]
   }
  ]
 },
 "properties": [
  {
   "$id": "338",
   "isReadOnly": false,
   "realPath": [
    "subscriptionId"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "339",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "340",
    "fixed": false,
    "raw": "The ID of the target subscription."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json",
      "mem:///304?oai3.shaken.json",
      "mem:///305?oai3.shaken.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
     ]
    }
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "341",
    "fixed": false,
    "raw": "subscriptionId"
   },
   "serializedName": "subscriptionId",
   "modelType": {
    "$id": "342",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "343",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "344",
   "isReadOnly": false,
   "realPath": [
    "api-version"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "345",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "346",
    "fixed": false,
    "raw": "The API version to use for the operation."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json",
      "mem:///304?oai3.shaken.json",
      "mem:///305?oai3.shaken.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/ApiVersionParameter",
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ApiVersionParameter",
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ApiVersionParameter"
     ]
    }
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "347",
    "fixed": false,
    "raw": "api-version"
   },
   "serializedName": "api-version",
   "modelType": {
    "$id": "348",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "349",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "350",
   "isReadOnly": false,
   "realPath": [
    "scope"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "351",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "352",
    "fixed": false,
    "raw": "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·0"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "353",
    "fixed": false,
    "raw": "scope"
   },
   "serializedName": "scope",
   "modelType": {
    "$id": "354",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "355",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "356",
   "isReadOnly": false,
   "realPath": [
    "policyAssignmentName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "357",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "358",
    "fixed": false,
    "raw": "The name of the policy assignment to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·1",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·1"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "359",
    "fixed": false,
    "raw": "policyAssignmentName"
   },
   "serializedName": "policyAssignmentName",
   "modelType": {
    "$id": "360",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "361",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "362",
   "isReadOnly": false,
   "realPath": [
    "scope"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "363",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "364",
    "fixed": false,
    "raw": "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·0"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "365",
    "fixed": false,
    "raw": "Scope1"
   },
   "serializedName": "scope",
   "modelType": {
    "$id": "366",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "367",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "368",
   "isReadOnly": false,
   "realPath": [
    "policyAssignmentName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "369",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "370",
    "fixed": false,
    "raw": "The name of the policy assignment."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·1",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·1"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "371",
    "fixed": false,
    "raw": "PolicyAssignmentName1"
   },
   "serializedName": "policyAssignmentName",
   "modelType": {
    "$id": "372",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "373",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "374",
   "isReadOnly": false,
   "realPath": [
    "scope"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "375",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "376",
    "fixed": false,
    "raw": "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·0"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "377",
    "fixed": false,
    "raw": "Scope2"
   },
   "serializedName": "scope",
   "modelType": {
    "$id": "378",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "379",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "380",
   "isReadOnly": false,
   "realPath": [
    "policyAssignmentName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "381",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "382",
    "fixed": false,
    "raw": "The name of the policy assignment to get."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·1",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·1"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "383",
    "fixed": false,
    "raw": "PolicyAssignmentName2"
   },
   "serializedName": "policyAssignmentName",
   "modelType": {
    "$id": "384",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "385",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "386",
   "isReadOnly": false,
   "realPath": [
    "resourceGroupName"
   ],
   "collectionFormat": "none",
   "constraints": {
    "MaxLength": "90",
    "MinLength": "1",
    "Pattern": "^[-\\w\\._\\(\\)]+$"
   },
   "defaultValue": {
    "$id": "387",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "388",
    "fixed": false,
    "raw": "The name of the resource group that contains policy assignments."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "389",
    "fixed": false,
    "raw": "resourceGroupName"
   },
   "serializedName": "resourceGroupName",
   "modelType": {
    "$id": "390",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "391",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "392",
   "isReadOnly": false,
   "realPath": [
    "$filter"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "393",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "394",
    "fixed": false,
    "raw": "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed."
   },
   "extensions": {
    "x-ms-skip-url-encoding": true,
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·1",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·1"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "395",
    "fixed": false,
    "raw": "$filter"
   },
   "serializedName": "$filter",
   "modelType": {
    "$id": "396",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "397",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "398",
   "isReadOnly": false,
   "realPath": [
    "resourceGroupName"
   ],
   "collectionFormat": "none",
   "constraints": {
    "MaxLength": "90",
    "MinLength": "1",
    "Pattern": "^[-\\w\\._\\(\\)]+$"
   },
   "defaultValue": {
    "$id": "399",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "400",
    "fixed": false,
    "raw": "The name of the resource group containing the resource."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "401",
    "fixed": false,
    "raw": "ResourceGroupName1"
   },
   "serializedName": "resourceGroupName",
   "modelType": {
    "$id": "402",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "403",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "404",
   "isReadOnly": false,
   "realPath": [
    "resourceProviderNamespace"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "405",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "406",
    "fixed": false,
    "raw": "The namespace of the resource provider. For example, the namespace of a virtual machine is Microsoft.Compute (from Microsoft.Compute/virtualMachines)"
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·1",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·1"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "407",
    "fixed": false,
    "raw": "resourceProviderNamespace"
   },
   "serializedName": "resourceProviderNamespace",
   "modelType": {
    "$id": "408",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "409",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "410",
   "isReadOnly": false,
   "realPath": [
    "parentResourcePath"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "411",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "412",
    "fixed": false,
    "raw": "The parent resource path. Use empty string if there is none."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·2",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·2"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "413",
    "fixed": false,
    "raw": "parentResourcePath"
   },
   "serializedName": "parentResourcePath",
   "modelType": {
    "$id": "414",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "415",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "416",
   "isReadOnly": false,
   "realPath": [
    "resourceType"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "417",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "418",
    "fixed": false,
    "raw": "The resource type name. For example the type name of a web app is 'sites' (from Microsoft.Web/sites)."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·3",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·3"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "419",
    "fixed": false,
    "raw": "resourceType"
   },
   "serializedName": "resourceType",
   "modelType": {
    "$id": "420",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "421",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "422",
   "isReadOnly": false,
   "realPath": [
    "resourceName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "423",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "424",
    "fixed": false,
    "raw": "The name of the resource."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·4",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·4"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "425",
    "fixed": false,
    "raw": "resourceName"
   },
   "serializedName": "resourceName",
   "modelType": {
    "$id": "426",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "427",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "428",
   "isReadOnly": false,
   "realPath": [
    "$filter"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "429",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "430",
    "fixed": false,
    "raw": "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·5",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·5"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "431",
    "fixed": false,
    "raw": "Filter1"
   },
   "serializedName": "$filter",
   "modelType": {
    "$id": "432",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "433",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "434",
   "isReadOnly": false,
   "realPath": [
    "$filter"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "435",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "436",
    "fixed": false,
    "raw": "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": false,
   "isConstant": false,
   "name": {
    "$id": "437",
    "fixed": false,
    "raw": "Filter2"
   },
   "serializedName": "$filter",
   "modelType": {
    "$id": "438",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "439",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "440",
   "isReadOnly": false,
   "realPath": [
    "policyAssignmentId"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "441",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "442",
    "fixed": false,
    "raw": "The ID of the policy assignment to delete. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·policyassignmentid·delete·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·policyassignmentid·delete·parameters·0"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "443",
    "fixed": false,
    "raw": "policyAssignmentId"
   },
   "serializedName": "policyAssignmentId",
   "modelType": {
    "$id": "444",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "445",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "446",
   "isReadOnly": false,
   "realPath": [
    "policyAssignmentId"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "447",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "448",
    "fixed": false,
    "raw": "The ID of the policy assignment to create. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·policyassignmentid·put·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·policyassignmentid·put·parameters·0"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "449",
    "fixed": false,
    "raw": "PolicyAssignmentId1"
   },
   "serializedName": "policyAssignmentId",
   "modelType": {
    "$id": "450",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "451",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "452",
   "isReadOnly": false,
   "realPath": [
    "policyAssignmentId"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "453",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "454",
    "fixed": false,
    "raw": "The ID of the policy assignment to get. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///303?oai3.shaken.json"
     ],
     "name": "paths·policyassignmentid·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·policyassignmentid·get·parameters·0"
     ]
    },
    "x-ms-skip-url-encoding": true,
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "455",
    "fixed": false,
    "raw": "PolicyAssignmentId2"
   },
   "serializedName": "policyAssignmentId",
   "modelType": {
    "$id": "456",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "457",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "458",
   "isReadOnly": false,
   "realPath": [
    "managementGroupId"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "459",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "460",
    "fixed": false,
    "raw": "The ID of the management group."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json",
      "mem:///305?oai3.shaken.json"
     ],
     "name": "ManagementGroupIdParameter",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "461",
    "fixed": false,
    "raw": "managementGroupId"
   },
   "serializedName": "managementGroupId",
   "modelType": {
    "$id": "462",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "463",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "464",
   "isReadOnly": false,
   "realPath": [
    "policyDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "465",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "466",
    "fixed": false,
    "raw": "The name of the policy definition to create."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "467",
    "fixed": false,
    "raw": "policyDefinitionName"
   },
   "serializedName": "policyDefinitionName",
   "modelType": {
    "$id": "468",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "469",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "470",
   "isReadOnly": false,
   "realPath": [
    "policyDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "471",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "472",
    "fixed": false,
    "raw": "The name of the policy definition to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "473",
    "fixed": false,
    "raw": "PolicyDefinitionName1"
   },
   "serializedName": "policyDefinitionName",
   "modelType": {
    "$id": "474",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "475",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "476",
   "isReadOnly": false,
   "realPath": [
    "policyDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "477",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "478",
    "fixed": false,
    "raw": "The name of the policy definition to get."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "479",
    "fixed": false,
    "raw": "PolicyDefinitionName2"
   },
   "serializedName": "policyDefinitionName",
   "modelType": {
    "$id": "480",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "481",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "482",
   "isReadOnly": false,
   "realPath": [
    "policyDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "483",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "484",
    "fixed": false,
    "raw": "The name of the built-in policy definition to get."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "485",
    "fixed": false,
    "raw": "PolicyDefinitionName3"
   },
   "serializedName": "policyDefinitionName",
   "modelType": {
    "$id": "486",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "487",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "488",
   "isReadOnly": false,
   "realPath": [
    "policyDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "489",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "490",
    "fixed": false,
    "raw": "The name of the policy definition to create."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "491",
    "fixed": false,
    "raw": "PolicyDefinitionName4"
   },
   "serializedName": "policyDefinitionName",
   "modelType": {
    "$id": "492",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "493",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "494",
   "isReadOnly": false,
   "realPath": [
    "policyDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "495",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "496",
    "fixed": false,
    "raw": "The name of the policy definition to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "497",
    "fixed": false,
    "raw": "PolicyDefinitionName5"
   },
   "serializedName": "policyDefinitionName",
   "modelType": {
    "$id": "498",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "499",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "500",
   "isReadOnly": false,
   "realPath": [
    "policyDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "501",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "502",
    "fixed": false,
    "raw": "The name of the policy definition to get."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///304?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "503",
    "fixed": false,
    "raw": "PolicyDefinitionName6"
   },
   "serializedName": "policyDefinitionName",
   "modelType": {
    "$id": "504",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "505",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "506",
   "isReadOnly": false,
   "realPath": [
    "policySetDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "507",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "508",
    "fixed": false,
    "raw": "The name of the policy set definition to create."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "509",
    "fixed": false,
    "raw": "policySetDefinitionName"
   },
   "serializedName": "policySetDefinitionName",
   "modelType": {
    "$id": "510",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "511",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "512",
   "isReadOnly": false,
   "realPath": [
    "policySetDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "513",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "514",
    "fixed": false,
    "raw": "The name of the policy set definition to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "515",
    "fixed": false,
    "raw": "PolicySetDefinitionName1"
   },
   "serializedName": "policySetDefinitionName",
   "modelType": {
    "$id": "516",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "517",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "518",
   "isReadOnly": false,
   "realPath": [
    "policySetDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "519",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "520",
    "fixed": false,
    "raw": "The name of the policy set definition to get."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "521",
    "fixed": false,
    "raw": "PolicySetDefinitionName2"
   },
   "serializedName": "policySetDefinitionName",
   "modelType": {
    "$id": "522",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "523",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "524",
   "isReadOnly": false,
   "realPath": [
    "policySetDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "525",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "526",
    "fixed": false,
    "raw": "The name of the policy set definition to get."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "527",
    "fixed": false,
    "raw": "PolicySetDefinitionName3"
   },
   "serializedName": "policySetDefinitionName",
   "modelType": {
    "$id": "528",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "529",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "530",
   "isReadOnly": false,
   "realPath": [
    "policySetDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "531",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "532",
    "fixed": false,
    "raw": "The name of the policy set definition to create."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "533",
    "fixed": false,
    "raw": "PolicySetDefinitionName4"
   },
   "serializedName": "policySetDefinitionName",
   "modelType": {
    "$id": "534",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "535",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "536",
   "isReadOnly": false,
   "realPath": [
    "policySetDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "537",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "538",
    "fixed": false,
    "raw": "The name of the policy set definition to delete."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "539",
    "fixed": false,
    "raw": "PolicySetDefinitionName5"
   },
   "serializedName": "policySetDefinitionName",
   "modelType": {
    "$id": "540",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "541",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  },
  {
   "$id": "542",
   "isReadOnly": false,
   "realPath": [
    "policySetDefinitionName"
   ],
   "collectionFormat": "none",
   "defaultValue": {
    "$id": "543",
    "fixed": false
   },
   "deprecated": false,
   "documentation": {
    "$id": "544",
    "fixed": false,
    "raw": "The name of the policy set definition to get."
   },
   "extensions": {
    "x-ms-metadata": {
     "apiVersions": [
      "2018-05-01"
     ],
     "filename": [
      "mem:///305?oai3.shaken.json"
     ],
     "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0",
     "originalLocations": [
      "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0"
     ]
    },
    "x-ms-parameter-location": "method"
   },
   "isRequired": true,
   "isConstant": false,
   "name": {
    "$id": "545",
    "fixed": false,
    "raw": "PolicySetDefinitionName6"
   },
   "serializedName": "policySetDefinitionName",
   "modelType": {
    "$id": "546",
    "$type": "PrimaryType",
    "knownPrimaryType": "string",
    "name": {
     "$id": "547",
     "fixed": false,
     "raw": "String"
    },
    "deprecated": false
   }
  }
 ],
 "operations": [
  {
   "$id": "548",
   "methods": [
    {
     "$id": "549",
     "parameters": [
      {
       "$id": "550",
       "clientProperty": {
        "$ref": "350"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "551",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "552",
        "fixed": false,
        "raw": "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·0"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "553",
        "fixed": false,
        "raw": "scope"
       },
       "serializedName": "scope",
       "modelType": {
        "$id": "554",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "555",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "556",
       "clientProperty": {
        "$ref": "356"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "557",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "558",
        "fixed": false,
        "raw": "The name of the policy assignment to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·1",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·parameters·1"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "559",
        "fixed": false,
        "raw": "policyAssignmentName"
       },
       "serializedName": "policyAssignmentName",
       "modelType": {
        "$id": "560",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "561",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "562",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "563",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "564",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "565",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "566",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "567",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "568",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "569",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_Delete",
     "url": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "OK": {
       "$id": "570",
       "body": {
        "$ref": "86"
       },
       "extensions": {
        "$id": "571",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·responses·200"
         ]
        }
       },
       "isNullable": true
      },
      "NoContent": {
       "$id": "572",
       "extensions": {
        "$id": "573",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·responses·204",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "574",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "575",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·delete·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "576",
      "body": {
       "$ref": "86"
      },
      "isNullable": true
     },
     "description": "This operation deletes a policy assignment, given its name and the scope it was created in. The scope of a policy assignment is the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.",
     "summary": "Deletes a policy assignment.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Delete a policy assignment": {
        "parameters": {
         "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyAssignmentName": "EnforceNaming",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce resource naming rules",
            "description": "Force resource names to begin with given DeptA and end with -LC",
            "metadata": {
             "assignedBy": "Special Someone"
            },
            "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
            "notScopes": [],
            "parameters": {
             "prefix": {
              "value": "DeptA"
             },
             "suffix": {
              "value": "-LC"
             }
            },
            "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
           },
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "EnforceNaming"
          }
         },
         "204": {
          "headers": {}
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "577",
     "parameters": [
      {
       "$id": "578",
       "clientProperty": {
        "$ref": "350"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "579",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "580",
        "fixed": false,
        "raw": "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·0"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "581",
        "fixed": false,
        "raw": "scope"
       },
       "serializedName": "scope",
       "modelType": {
        "$id": "582",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "583",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "584",
       "clientProperty": {
        "$ref": "356"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "585",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "586",
        "fixed": false,
        "raw": "The name of the policy assignment."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·1",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·parameters·1"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "587",
        "fixed": false,
        "raw": "policyAssignmentName"
       },
       "serializedName": "policyAssignmentName",
       "modelType": {
        "$id": "588",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "589",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "590",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "591",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "592",
        "fixed": false,
        "raw": "Parameters for the policy assignment."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·requestbody",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/requestBodies/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·requestbody"
         ]
        },
        "x-ms-requestBody-name": "parameters"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "593",
        "fixed": false,
        "raw": "parameters"
       },
       "serializedName": "parameters",
       "modelType": {
        "$ref": "86"
       }
      },
      {
       "$id": "594",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "595",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "596",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "597",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "598",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "599",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "600",
      "fixed": false,
      "raw": "Create"
     },
     "group": {
      "$id": "601",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_Create",
     "url": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "Created": {
       "$id": "602",
       "body": {
        "$ref": "86"
       },
       "extensions": {
        "$id": "603",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·responses·201",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·responses·201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "604",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "605",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·put·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "606",
      "body": {
       "$ref": "86"
      },
      "isNullable": true
     },
     "description": " This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.",
     "summary": "Creates or updates a policy assignment.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Create or update a policy assignment": {
        "parameters": {
         "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyAssignmentName": "EnforceNaming",
         "api-version": "2018-05-01",
         "parameters": {
          "properties": {
           "displayName": "Enforce resource naming rules",
           "description": "Force resource names to begin with given DeptA and end with -LC",
           "metadata": {
            "assignedBy": "Special Someone"
           },
           "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
           "parameters": {
            "prefix": {
             "value": "DeptA"
            },
            "suffix": {
             "value": "-LC"
            }
           }
          }
         }
        },
        "responses": {
         "201": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce resource naming rules",
            "description": "Force resource names to begin with given DeptA and end with -LC",
            "metadata": {
             "assignedBy": "Special Someone"
            },
            "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
            "notScopes": [],
            "parameters": {
             "prefix": {
              "value": "DeptA"
             },
             "suffix": {
              "value": "-LC"
             }
            },
            "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
           },
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "EnforceNaming"
          }
         }
        }
       },
       "Create or update a policy assignment with a managed identity": {
        "parameters": {
         "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyAssignmentName": "EnforceNaming",
         "api-version": "2018-05-01",
         "parameters": {
          "location": "eastus",
          "identity": {
           "type": "SystemAssigned"
          },
          "properties": {
           "displayName": "Enforce resource naming rules",
           "description": "Force resource names to begin with given DeptA and end with -LC",
           "metadata": {
            "assignedBy": "Foo Bar"
           },
           "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
           "parameters": {
            "prefix": {
             "value": "DeptA"
            },
            "suffix": {
             "value": "-LC"
            }
           }
          }
         }
        },
        "responses": {
         "201": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce resource naming rules",
            "description": "Force resource names to begin with given DeptA and end with -LC",
            "metadata": {
             "assignedBy": "Special Someone"
            },
            "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
            "notScopes": [],
            "parameters": {
             "prefix": {
              "value": "DeptA"
             },
             "suffix": {
              "value": "-LC"
             }
            },
            "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
           },
           "identity": {
            "type": "SystemAssigned",
            "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
            "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
           },
           "location": "eastus",
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "EnforceNaming"
          }
         }
        }
       }
      },
      "x-ms-requestBody-index": "2"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "607",
     "parameters": [
      {
       "$id": "608",
       "clientProperty": {
        "$ref": "350"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "609",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "610",
        "fixed": false,
        "raw": "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·0"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "611",
        "fixed": false,
        "raw": "scope"
       },
       "serializedName": "scope",
       "modelType": {
        "$id": "612",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "613",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "614",
       "clientProperty": {
        "$ref": "356"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "615",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "616",
        "fixed": false,
        "raw": "The name of the policy assignment to get."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·1",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·parameters·1"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "617",
        "fixed": false,
        "raw": "policyAssignmentName"
       },
       "serializedName": "policyAssignmentName",
       "modelType": {
        "$id": "618",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "619",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "620",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "621",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "622",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "623",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "624",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "625",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "626",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "627",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_Get",
     "url": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "628",
       "body": {
        "$ref": "86"
       },
       "extensions": {
        "$id": "629",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "630",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "631",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·scope-providers-microsoft-authorization-policyassignments-policyassignmentname·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "632",
      "body": {
       "$ref": "86"
      },
      "isNullable": true
     },
     "description": "This operation retrieves a single policy assignment, given its name and the scope it was created at.",
     "summary": "Retrieves a policy assignment.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a policy assignment": {
        "parameters": {
         "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyAssignmentName": "EnforceNaming",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce resource naming rules",
            "description": "Force resource names to begin with given DeptA and end with -LC",
            "metadata": {
             "assignedBy": "Special Someone"
            },
            "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
            "notScopes": [],
            "parameters": {
             "prefix": {
              "value": "DeptA"
             },
             "suffix": {
              "value": "-LC"
             }
            },
            "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
           },
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "EnforceNaming"
          }
         }
        }
       },
       "Retrieve a policy assignment with a managed identity": {
        "parameters": {
         "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyAssignmentName": "EnforceNaming",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce resource naming rules",
            "description": "Force resource names to begin with given DeptA and end with -LC",
            "metadata": {
             "assignedBy": "Special Someone"
            },
            "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
            "notScopes": [],
            "parameters": {
             "prefix": {
              "value": "DeptA"
             },
             "suffix": {
              "value": "-LC"
             }
            },
            "scope": "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2"
           },
           "identity": {
            "type": "SystemAssigned",
            "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
            "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
           },
           "location": "westus",
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/EnforceNaming",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "EnforceNaming"
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "633",
     "parameters": [
      {
       "$id": "634",
       "clientProperty": {
        "$ref": "386"
       },
       "location": "path",
       "collectionFormat": "none",
       "constraints": {
        "MaxLength": "90",
        "MinLength": "1",
        "Pattern": "^[-\\w\\._\\(\\)]+$"
       },
       "defaultValue": {
        "$id": "635",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "636",
        "fixed": false,
        "raw": "The name of the resource group that contains policy assignments."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "637",
        "fixed": false,
        "raw": "resourceGroupName"
       },
       "serializedName": "resourceGroupName",
       "modelType": {
        "$id": "638",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "639",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "640",
       "clientProperty": {
        "$ref": "392"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "641",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "642",
        "fixed": false,
        "raw": "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed."
       },
       "extensions": {
        "x-ms-skip-url-encoding": true,
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·1",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·parameters·1"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "643",
        "fixed": false,
        "raw": "$filter"
       },
       "serializedName": "$filter",
       "modelType": {
        "$id": "644",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "645",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "646",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "647",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "648",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "649",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "650",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "651",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "652",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "653",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "654",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "655",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "656",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "657",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "658",
      "fixed": false,
      "raw": "ListForResourceGroup"
     },
     "group": {
      "$id": "659",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_ListForResourceGroup",
     "url": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/policyAssignments",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "660",
       "body": {
        "$ref": "124"
       },
       "extensions": {
        "$id": "661",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "662",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "663",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-microsoft-authorization-policyassignments·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "664",
      "body": {
       "$ref": "124"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the list of all policy assignments associated with the given resource group in the given subscription that match the optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource group, including those that apply directly or apply from containing scopes, as well as any applied to resources contained within the resource group. If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource group, which is everything in the unfiltered list except those applied to resources contained within the resource group. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value} that apply to the resource group.",
     "summary": "Retrieves all policy assignments that apply to a resource group.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List policy assignments that apply to a resource group": {
        "parameters": {
         "resourceGroupName": "TestResourceGroup",
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "api-version": "2018-05-01",
         "$filter": "atScope()"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestCostManagement",
             "type": "Microsoft.Authorization/policyAssignments",
             "name": "TestCostManagement",
             "location": "eastus",
             "identity": {
              "type": "SystemAssigned",
              "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
              "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
             },
             "properties": {
              "displayName": "Storage Cost Management",
              "description": "Minimize the risk of accidental cost overruns",
              "metadata": {
               "category": "Cost Management"
              },
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/storageSkus",
              "parameters": {
               "allowedSkus": {
                "type": "Array"
               }
              },
              "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup",
              "notScopes": []
             },
             "sku": {
              "name": "A0",
              "tier": "Free"
             }
            },
            {
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestTagEnforcement",
             "type": "Microsoft.Authorization/policyAssignments",
             "name": "TestTagEnforcement",
             "properties": {
              "displayName": "Enforces a tag key and value",
              "description": "Ensure a given tag key and value are present on all resources",
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/TagKeyValue",
              "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup",
              "notScopes": []
             },
             "sku": {
              "name": "A0",
              "tier": "Free"
             }
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "665",
     "parameters": [
      {
       "$id": "666",
       "clientProperty": {
        "$ref": "386"
       },
       "location": "path",
       "collectionFormat": "none",
       "constraints": {
        "MaxLength": "90",
        "MinLength": "1",
        "Pattern": "^[-\\w\\._\\(\\)]+$"
       },
       "defaultValue": {
        "$id": "667",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "668",
        "fixed": false,
        "raw": "The name of the resource group containing the resource."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "669",
        "fixed": false,
        "raw": "resourceGroupName"
       },
       "serializedName": "resourceGroupName",
       "modelType": {
        "$id": "670",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "671",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "672",
       "clientProperty": {
        "$ref": "404"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "673",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "674",
        "fixed": false,
        "raw": "The namespace of the resource provider. For example, the namespace of a virtual machine is Microsoft.Compute (from Microsoft.Compute/virtualMachines)"
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·1",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·1"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "675",
        "fixed": false,
        "raw": "resourceProviderNamespace"
       },
       "serializedName": "resourceProviderNamespace",
       "modelType": {
        "$id": "676",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "677",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "678",
       "clientProperty": {
        "$ref": "410"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "679",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "680",
        "fixed": false,
        "raw": "The parent resource path. Use empty string if there is none."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·2",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·2"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "681",
        "fixed": false,
        "raw": "parentResourcePath"
       },
       "serializedName": "parentResourcePath",
       "modelType": {
        "$id": "682",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "683",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "684",
       "clientProperty": {
        "$ref": "416"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "685",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "686",
        "fixed": false,
        "raw": "The resource type name. For example the type name of a web app is 'sites' (from Microsoft.Web/sites)."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·3",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·3"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "687",
        "fixed": false,
        "raw": "resourceType"
       },
       "serializedName": "resourceType",
       "modelType": {
        "$id": "688",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "689",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "690",
       "clientProperty": {
        "$ref": "422"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "691",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "692",
        "fixed": false,
        "raw": "The name of the resource."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·4",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·4"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "693",
        "fixed": false,
        "raw": "resourceName"
       },
       "serializedName": "resourceName",
       "modelType": {
        "$id": "694",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "695",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "696",
       "clientProperty": {
        "$ref": "392"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "697",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "698",
        "fixed": false,
        "raw": "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·5",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·parameters·5"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "699",
        "fixed": false,
        "raw": "$filter"
       },
       "serializedName": "$filter",
       "modelType": {
        "$id": "700",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "701",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "702",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "703",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "704",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "705",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "706",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "707",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "708",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "709",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "710",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "711",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "712",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "713",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "714",
      "fixed": false,
      "raw": "ListForResource"
     },
     "group": {
      "$id": "715",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_ListForResource",
     "url": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/policyAssignments",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "716",
       "body": {
        "$ref": "124"
       },
       "extensions": {
        "$id": "717",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "718",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "719",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·subscriptions-subscriptionid-resourcegroups-resourcegroupname-providers-resourceprovidernamespace-parentresourcepath-resourcetype-resourcename-providers-microsoft-authorization-policyassignments·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "720",
      "body": {
       "$ref": "124"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the list of all policy assignments associated with the specified resource in the given resource group and subscription that match the optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource, including those that apply directly or from all containing scopes, as well as any applied to resources contained within the resource. If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource, which is everything in the unfiltered list except those applied to resources contained within the resource. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value} that apply to the resource. Three parameters plus the resource name are used to identify a specific resource. If the resource is not part of a parent resource (the more common case), the parent resource path should not be provided (or provided as ''). For example a web app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the resource is part of a parent resource, then all parameters should be provided. For example a virtual machine DNS name could be specified as ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames', {resourceName} == 'MyComputerName'). A convenient alternative to providing the namespace and type name separately is to provide both in the {resourceType} parameter, format: ({resourceProviderNamespace} == '', {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').",
     "summary": "Retrieves all policy assignments that apply to a resource.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List all policy assignments that apply to a resource": {
        "parameters": {
         "resourceGroupName": "TestResourceGroup",
         "resourceProviderNamespace": "Microsoft.Compute",
         "parentResourcePath": "virtualMachines/MyTestVm",
         "resourceType": "domainNames",
         "resourceName": "MyTestComputer.cloudapp.net",
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestCostManagement",
             "type": "Microsoft.Authorization/policyAssignments",
             "name": "TestCostManagement",
             "location": "eastus",
             "identity": {
              "type": "SystemAssigned",
              "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
              "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
             },
             "properties": {
              "displayName": "VM Cost Management",
              "description": "Minimize the risk of accidental cost overruns",
              "metadata": {
               "category": "Cost Management"
              },
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/vmSkus",
              "parameters": {
               "allowedSkus": {
                "type": "Array"
               }
              },
              "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup",
              "notScopes": []
             },
             "sku": {
              "name": "A0",
              "tier": "Free"
             }
            },
            {
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup/providers/Microsoft.Authorization/policyAssignments/TestTagEnforcement",
             "type": "Microsoft.Authorization/policyAssignments",
             "name": "TestTagEnforcement",
             "properties": {
              "displayName": "Enforces a tag key and value",
              "description": "Ensure a given tag key and value are present on all resources",
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/TagKeyValue",
              "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/TestResourceGroup",
              "notScopes": []
             },
             "sku": {
              "name": "A0",
              "tier": "Free"
             }
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      },
      "x-ms-odata": "#/components/schemas/PolicyAssignment"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "721",
     "parameters": [
      {
       "$id": "722",
       "clientProperty": {
        "$ref": "392"
       },
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "723",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "724",
        "fixed": false,
        "raw": "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": false,
       "isConstant": false,
       "name": {
        "$id": "725",
        "fixed": false,
        "raw": "$filter"
       },
       "serializedName": "$filter",
       "modelType": {
        "$id": "726",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "727",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "728",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "729",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "730",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "731",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "732",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "733",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "734",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "735",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "736",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "737",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "738",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "739",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "740",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "741",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_List",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyAssignments",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "742",
       "body": {
        "$ref": "124"
       },
       "extensions": {
        "$id": "743",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "744",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "745",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policyassignments·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "746",
      "body": {
       "$ref": "124"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the list of all policy assignments associated with the given subscription that match the optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, the unfiltered list includes all policy assignments associated with the subscription, including those that apply directly or from management groups that contain the given subscription, as well as any applied to objects contained within the subscription. If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the subscription, which is everything in the unfiltered list except those applied to objects contained within the subscription. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value}.",
     "summary": "Retrieves all policy assignments that apply to a subscription.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List policy assignments that apply to a subscription": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "api-version": "2018-05-01",
         "$filter": "atScope()"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/CostManagement",
             "type": "Microsoft.Authorization/policyAssignments",
             "name": "CostManagement",
             "location": "eastus",
             "identity": {
              "type": "SystemAssigned",
              "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
              "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
             },
             "properties": {
              "displayName": "Storage Cost Management",
              "description": "Minimize the risk of accidental cost overruns",
              "metadata": {
               "category": "Cost Management"
              },
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/storageSkus",
              "parameters": {
               "allowedSkus": {
                "type": "Array"
               }
              },
              "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
              "notScopes": []
             },
             "sku": {
              "name": "A0",
              "tier": "Free"
             }
            },
            {
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/TagEnforcement",
             "type": "Microsoft.Authorization/policyAssignments",
             "name": "TagEnforcement",
             "properties": {
              "displayName": "Enforces a tag key and value",
              "description": "Ensure a given tag key and value are present on all resources",
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/TagKeyValue",
              "scope": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
              "notScopes": []
             },
             "sku": {
              "name": "A0",
              "tier": "Free"
             }
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      },
      "x-ms-odata": "#/components/schemas/PolicyAssignment"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "747",
     "parameters": [
      {
       "$id": "748",
       "clientProperty": {
        "$ref": "440"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "749",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "750",
        "fixed": false,
        "raw": "The ID of the policy assignment to delete. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·delete·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·policyassignmentid·delete·parameters·0"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "751",
        "fixed": false,
        "raw": "policyAssignmentId"
       },
       "serializedName": "policyAssignmentId",
       "modelType": {
        "$id": "752",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "753",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "754",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "755",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "756",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "757",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "758",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "759",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "760",
      "fixed": false,
      "raw": "DeleteById"
     },
     "group": {
      "$id": "761",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_DeleteById",
     "url": "/{policyAssignmentId}",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "OK": {
       "$id": "762",
       "body": {
        "$ref": "86"
       },
       "extensions": {
        "$id": "763",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·policyassignmentid·delete·responses·200"
         ]
        }
       },
       "isNullable": true
      },
      "NoContent": {
       "$id": "764",
       "extensions": {
        "$id": "765",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·delete·responses·204",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·policyassignmentid·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "766",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "767",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·policyassignmentid·delete·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·policyassignmentid·delete·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "768",
      "body": {
       "$ref": "86"
      },
      "isNullable": true
     },
     "description": "This operation deletes the policy with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid formats for {scope} are: '/providers/Microsoft.Management/managementGroups/{managementGroup}' (management group), '/subscriptions/{subscriptionId}' (subscription), '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' (resource group), or '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}' (resource).",
     "summary": "Deletes a policy assignment.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Delete a policy assignment by ID": {
        "parameters": {
         "policyAssignmentId": "providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce storage account SKU",
            "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
            "metadata": {
             "assignedBy": "Cheapskate Boss"
            },
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
            "notScopes": [],
            "parameters": {
             "listOfAllowedSKUs": {
              "value": [
               "Standard_GRS",
               "Standard_LRS"
              ]
             }
            }
           },
           "id": "/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "LowCostStorage"
          }
         },
         "204": {
          "headers": {}
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "769",
     "parameters": [
      {
       "$id": "770",
       "clientProperty": {
        "$ref": "440"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "771",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "772",
        "fixed": false,
        "raw": "The ID of the policy assignment to create. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·put·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·policyassignmentid·put·parameters·0"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "773",
        "fixed": false,
        "raw": "policyAssignmentId"
       },
       "serializedName": "policyAssignmentId",
       "modelType": {
        "$id": "774",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "775",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "776",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "777",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "778",
        "fixed": false,
        "raw": "Parameters for policy assignment."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·put·requestbody",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/requestBodies/paths·policyassignmentid·put·requestbody"
         ]
        },
        "x-ms-requestBody-name": "parameters"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "779",
        "fixed": false,
        "raw": "parameters"
       },
       "serializedName": "parameters",
       "modelType": {
        "$ref": "86"
       }
      },
      {
       "$id": "780",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "781",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "782",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "783",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "784",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "785",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "786",
      "fixed": false,
      "raw": "CreateById"
     },
     "group": {
      "$id": "787",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_CreateById",
     "url": "/{policyAssignmentId}",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "Created": {
       "$id": "788",
       "body": {
        "$ref": "86"
       },
       "extensions": {
        "$id": "789",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·put·responses·201",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·policyassignmentid·put·responses·201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "790",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "791",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·policyassignmentid·put·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·policyassignmentid·put·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "792",
      "body": {
       "$ref": "86"
      },
      "isNullable": true
     },
     "description": "This operation creates or updates the policy assignment with the given ID. Policy assignments made on a scope apply to all resources contained in that scope. For example, when you assign a policy to a resource group that policy applies to all resources in the group. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.",
     "summary": "Creates or updates a policy assignment.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Create or update policy assignment by ID": {
        "parameters": {
         "policyAssignmentId": "providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
         "api-version": "2018-05-01",
         "parameters": {
          "properties": {
           "displayName": "Enforce storage account SKU",
           "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
           "metadata": {
            "assignedBy": "Cheapskate Boss"
           },
           "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
           "parameters": {
            "listOfAllowedSKUs": {
             "value": [
              "Standard_GRS",
              "Standard_LRS"
             ]
            }
           }
          }
         }
        },
        "responses": {
         "201": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce storage account SKU",
            "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
            "metadata": {
             "assignedBy": "Cheapskate Boss"
            },
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
            "notScopes": [],
            "parameters": {
             "listOfAllowedSKUs": {
              "value": [
               "Standard_GRS",
               "Standard_LRS"
              ]
             }
            }
           },
           "id": "/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "LowCostStorage"
          }
         }
        }
       },
       "Create or update policy assignment with a managed identity by ID": {
        "parameters": {
         "policyAssignmentId": "providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
         "api-version": "2018-05-01",
         "parameters": {
          "identity": {
           "type": "SystemAssigned"
          },
          "location": "eastus",
          "properties": {
           "displayName": "Enforce storage account SKU",
           "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
           "metadata": {
            "assignedBy": "Cheapskate Boss"
           },
           "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
           "parameters": {
            "listOfAllowedSKUs": {
             "value": [
              "Standard_GRS",
              "Standard_LRS"
             ]
            }
           }
          }
         }
        },
        "responses": {
         "201": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce storage account SKU",
            "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
            "metadata": {
             "assignedBy": "Cheapskate Boss"
            },
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
            "notScopes": [],
            "parameters": {
             "listOfAllowedSKUs": {
              "value": [
               "Standard_GRS",
               "Standard_LRS"
              ]
             }
            }
           },
           "identity": {
            "type": "SystemAssigned",
            "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
            "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
           },
           "location": "eastus",
           "id": "/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "LowCostStorage"
          }
         }
        }
       }
      },
      "x-ms-requestBody-index": "1"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "793",
     "parameters": [
      {
       "$id": "794",
       "clientProperty": {
        "$ref": "440"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "795",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "796",
        "fixed": false,
        "raw": "The ID of the policy assignment to get. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/paths·policyassignmentid·get·parameters·0"
         ]
        },
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "797",
        "fixed": false,
        "raw": "policyAssignmentId"
       },
       "serializedName": "policyAssignmentId",
       "modelType": {
        "$id": "798",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "799",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "800",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "801",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "802",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "803",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "804",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "805",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "806",
      "fixed": false,
      "raw": "GetById"
     },
     "group": {
      "$id": "807",
      "fixed": false,
      "raw": "PolicyAssignments"
     },
     "serializedName": "PolicyAssignments_GetById",
     "url": "/{policyAssignmentId}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "808",
       "body": {
        "$ref": "86"
       },
       "extensions": {
        "$id": "809",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json"
         ],
         "name": "paths·policyassignmentid·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·policyassignmentid·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "810",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "811",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///303?oai3.shaken.json"
        ],
        "name": "paths·policyassignmentid·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/responses/paths·policyassignmentid·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "812",
      "body": {
       "$ref": "86"
      },
      "isNullable": true
     },
     "description": "The operation retrieves the policy assignment with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.",
     "summary": "Retrieves the policy assignment with the given ID.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a policy assignment by ID": {
        "parameters": {
         "policyAssignmentId": "providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce storage account SKU",
            "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
            "metadata": {
             "assignedBy": "Cheapskate Boss"
            },
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
            "notScopes": [],
            "parameters": {
             "listOfAllowedSKUs": {
              "value": [
               "Standard_GRS",
               "Standard_LRS"
              ]
             }
            }
           },
           "id": "/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "LowCostStorage"
          }
         }
        }
       },
       "Retrieve a policy assignment with a managed identity by ID": {
        "parameters": {
         "policyAssignmentId": "providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Enforce storage account SKU",
            "description": "Allow only storage accounts of SKU Standard_GRS or Standard_LRS to be created",
            "metadata": {
             "assignedBy": "Cheapskate Boss"
            },
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
            "notScopes": [],
            "parameters": {
             "listOfAllowedSKUs": {
              "value": [
               "Standard_GRS",
               "Standard_LRS"
              ]
             }
            }
           },
           "identity": {
            "type": "SystemAssigned",
            "principalId": "e6d23f8d-af97-4fbc-bda6-00604e4e3d0a",
            "tenantId": "4bee2b8a-1bee-47c2-90e9-404241551135"
           },
           "location": "westus",
           "id": "/providers/Microsoft.Management/managementGroups/MyManagementGroup/providers/Microsoft.Authorization/policyAssignments/LowCostStorage",
           "type": "Microsoft.Authorization/policyAssignments",
           "name": "LowCostStorage"
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "813",
    "fixed": false,
    "raw": "PolicyAssignments"
   },
   "typeName": {
    "$id": "814",
    "fixed": false
   },
   "nameForProperty": "PolicyAssignments"
  },
  {
   "$id": "815",
   "methods": [
    {
     "$id": "816",
     "parameters": [
      {
       "$id": "817",
       "clientProperty": {
        "$ref": "464"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "818",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "819",
        "fixed": false,
        "raw": "The name of the policy definition to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "820",
        "fixed": false,
        "raw": "policyDefinitionName"
       },
       "serializedName": "policyDefinitionName",
       "modelType": {
        "$id": "821",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "822",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "823",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "824",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "825",
        "fixed": false,
        "raw": "The policy definition properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·requestbody",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/requestBodies/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·requestbody"
         ]
        },
        "x-ms-requestBody-name": "parameters"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "826",
        "fixed": false,
        "raw": "parameters"
       },
       "serializedName": "parameters",
       "modelType": {
        "$ref": "212"
       }
      },
      {
       "$id": "827",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "828",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "829",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "830",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "831",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "832",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "833",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "834",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "835",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "836",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "837",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "838",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "839",
      "fixed": false,
      "raw": "CreateOrUpdate"
     },
     "group": {
      "$id": "840",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_CreateOrUpdate",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "Created": {
       "$id": "841",
       "body": {
        "$ref": "212"
       },
       "extensions": {
        "$id": "842",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·responses·201",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·responses·201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "843",
      "isNullable": true
     },
     "returnType": {
      "$id": "844",
      "body": {
       "$ref": "212"
      },
      "isNullable": true
     },
     "description": "This operation creates or updates a policy definition in the given subscription with the given name.",
     "summary": "Creates or updates a policy definition in a subscription.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Create or update a policy definition": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyDefinitionName": "ResourceNaming",
         "api-version": "2018-05-01",
         "parameters": {
          "properties": {
           "displayName": "Enforce resource naming convention",
           "description": "Force resource names to begin with given 'prefix' and/or end with given 'suffix'",
           "metadata": {
            "category": "Naming"
           },
           "policyRule": {
            "if": {
             "not": {
              "field": "name",
              "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
             }
            },
            "then": {
             "effect": "deny"
            }
           },
           "parameters": {
            "prefix": {
             "type": "String",
             "metadata": {
              "displayName": "Prefix",
              "description": "Resource name prefix"
             }
            },
            "suffix": {
             "type": "String",
             "metadata": {
              "displayName": "Suffix",
              "description": "Resource name suffix"
             }
            }
           }
          }
         }
        },
        "responses": {
         "201": {
          "headers": {},
          "body": {
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
           "type": "Microsoft.Authorization/policyDefinitions",
           "name": "ResourceNaming",
           "properties": {
            "displayName": "Naming Convention",
            "description": "Force resource names to begin with 'prefix' and end with 'suffix'",
            "metadata": {
             "category": "Naming"
            },
            "policyRule": {
             "if": {
              "not": {
               "field": "name",
               "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
              }
             },
             "then": {
              "effect": "deny"
             }
            },
            "parameters": {
             "prefix": {
              "type": "String",
              "metadata": {
               "displayName": "Prefix",
               "description": "Resource name prefix"
              }
             },
             "suffix": {
              "type": "String",
              "metadata": {
               "displayName": "Suffix",
               "description": "Resource name suffix"
              }
             }
            },
            "policyType": "Custom"
           }
          }
         }
        }
       }
      },
      "x-ms-requestBody-index": "1"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "845",
     "parameters": [
      {
       "$id": "846",
       "clientProperty": {
        "$ref": "464"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "847",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "848",
        "fixed": false,
        "raw": "The name of the policy definition to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "849",
        "fixed": false,
        "raw": "policyDefinitionName"
       },
       "serializedName": "policyDefinitionName",
       "modelType": {
        "$id": "850",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "851",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "852",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "853",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "854",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "855",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "856",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "857",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "858",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "859",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "860",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "861",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "862",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "863",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "864",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "865",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_Delete",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "OK": {
       "$id": "866",
       "extensions": {
        "$id": "867",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      },
      "NoContent": {
       "$id": "868",
       "extensions": {
        "$id": "869",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "870",
      "isNullable": true
     },
     "returnType": {
      "$id": "871",
      "isNullable": true
     },
     "description": "This operation deletes the policy definition in the given subscription with the given name.",
     "summary": "Deletes a policy definition in a subscription.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Delete a policy definition": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyDefinitionName": "ResourceNaming",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {}
         },
         "204": {
          "headers": {}
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "872",
     "parameters": [
      {
       "$id": "873",
       "clientProperty": {
        "$ref": "464"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "874",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "875",
        "fixed": false,
        "raw": "The name of the policy definition to get."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "876",
        "fixed": false,
        "raw": "policyDefinitionName"
       },
       "serializedName": "policyDefinitionName",
       "modelType": {
        "$id": "877",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "878",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "879",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "880",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "881",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "882",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "883",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "884",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "885",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "886",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "887",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "888",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "889",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "890",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "891",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "892",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_Get",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "893",
       "body": {
        "$ref": "212"
       },
       "extensions": {
        "$id": "894",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "895",
      "isNullable": true
     },
     "returnType": {
      "$id": "896",
      "body": {
       "$ref": "212"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the policy definition in the given subscription with the given name.",
     "summary": "Retrieves a policy definition in a subscription.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a policy definition": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyDefinitionName": "ResourceNaming",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Naming Convention",
            "description": "Force resource names to begin with 'prefix' and end with 'suffix'",
            "metadata": {
             "category": "Naming"
            },
            "policyRule": {
             "if": {
              "not": {
               "field": "name",
               "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
              }
             },
             "then": {
              "effect": "deny"
             }
            },
            "parameters": {
             "prefix": {
              "type": "String",
              "metadata": {
               "displayName": "Prefix",
               "description": "Resource name prefix"
              }
             },
             "suffix": {
              "type": "String",
              "metadata": {
               "displayName": "Suffix",
               "description": "Resource name suffix"
              }
             }
            },
            "policyType": "Custom"
           },
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
           "type": "Microsoft.Authorization/policyDefinitions",
           "name": "ResourceNaming"
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "897",
     "parameters": [
      {
       "$id": "898",
       "clientProperty": {
        "$ref": "464"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "899",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "900",
        "fixed": false,
        "raw": "The name of the built-in policy definition to get."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "901",
        "fixed": false,
        "raw": "policyDefinitionName"
       },
       "serializedName": "policyDefinitionName",
       "modelType": {
        "$id": "902",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "903",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "904",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "905",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "906",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "907",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "908",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "909",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "910",
      "fixed": false,
      "raw": "GetBuiltIn"
     },
     "group": {
      "$id": "911",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_GetBuiltIn",
     "url": "/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "912",
       "body": {
        "$ref": "212"
       },
       "extensions": {
        "$id": "913",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-authorization-policydefinitions-policydefinitionname·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-authorization-policydefinitions-policydefinitionname·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "914",
      "isNullable": true
     },
     "returnType": {
      "$id": "915",
      "body": {
       "$ref": "212"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the built-in policy definition with the given name.",
     "summary": "Retrieves a built-in policy definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a built-in policy definition": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policyDefinitionName": "7433c107-6db4-4ad1-b57a-a76dce0154a1",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "Allowed storage account SKUs",
            "policyType": "BuiltIn",
            "description": "This policy enables you to specify a set of storage account SKUs that your organization can deploy.",
            "parameters": {
             "listOfAllowedSKUs": {
              "type": "Array",
              "metadata": {
               "description": "The list of SKUs that can be specified for storage accounts.",
               "displayName": "Allowed SKUs",
               "strongType": "StorageSKUs"
              }
             }
            },
            "policyRule": {
             "if": {
              "allOf": [
               {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
               },
               {
                "not": {
                 "field": "Microsoft.Storage/storageAccounts/sku.name",
                 "in": "[parameters('listOfAllowedSKUs')]"
                }
               }
              ]
             },
             "then": {
              "effect": "Deny"
             }
            }
           },
           "id": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
           "type": "Microsoft.Authorization/policyDefinitions",
           "name": "7433c107-6db4-4ad1-b57a-a76dce0154a1"
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "916",
     "parameters": [
      {
       "$id": "917",
       "clientProperty": {
        "$ref": "464"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "918",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "919",
        "fixed": false,
        "raw": "The name of the policy definition to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "920",
        "fixed": false,
        "raw": "policyDefinitionName"
       },
       "serializedName": "policyDefinitionName",
       "modelType": {
        "$id": "921",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "922",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "923",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "924",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "925",
        "fixed": false,
        "raw": "The policy definition properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·requestbody",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/requestBodies/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·requestbody"
         ]
        },
        "x-ms-requestBody-name": "parameters"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "926",
        "fixed": false,
        "raw": "parameters"
       },
       "serializedName": "parameters",
       "modelType": {
        "$ref": "212"
       }
      },
      {
       "$id": "927",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "928",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "929",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "930",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "931",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "932",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "933",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "934",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "935",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "936",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "937",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "938",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "939",
      "fixed": false,
      "raw": "CreateOrUpdateAtManagementGroup"
     },
     "group": {
      "$id": "940",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_CreateOrUpdateAtManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "Created": {
       "$id": "941",
       "body": {
        "$ref": "212"
       },
       "extensions": {
        "$id": "942",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·responses·201",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·put·responses·201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "943",
      "isNullable": true
     },
     "returnType": {
      "$id": "944",
      "body": {
       "$ref": "212"
      },
      "isNullable": true
     },
     "description": "This operation creates or updates a policy definition in the given management group with the given name.",
     "summary": "Creates or updates a policy definition in a management group.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Create or update a policy definition at management group level": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "policyDefinitionName": "ResourceNaming",
         "api-version": "2018-05-01",
         "parameters": {
          "properties": {
           "displayName": "Enforce resource naming convention",
           "description": "Force resource names to begin with given 'prefix' and/or end with given 'suffix'",
           "metadata": {
            "category": "Naming"
           },
           "policyRule": {
            "if": {
             "not": {
              "field": "name",
              "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
             }
            },
            "then": {
             "effect": "deny"
            }
           },
           "parameters": {
            "prefix": {
             "type": "String",
             "metadata": {
              "displayName": "Prefix",
              "description": "Resource name prefix"
             }
            },
            "suffix": {
             "type": "String",
             "metadata": {
              "displayName": "Suffix",
              "description": "Resource name suffix"
             }
            }
           }
          }
         }
        },
        "responses": {
         "201": {
          "headers": {},
          "body": {
           "id": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
           "type": "Microsoft.Authorization/policyDefinitions",
           "name": "ResourceNaming",
           "properties": {
            "displayName": "Naming Convention",
            "description": "Force resource names to begin with 'prefix' and end with 'suffix'",
            "metadata": {
             "category": "Naming"
            },
            "policyRule": {
             "if": {
              "not": {
               "field": "name",
               "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
              }
             },
             "then": {
              "effect": "deny"
             }
            },
            "parameters": {
             "prefix": {
              "type": "String",
              "metadata": {
               "displayName": "Prefix",
               "description": "Resource name prefix"
              }
             },
             "suffix": {
              "type": "String",
              "metadata": {
               "displayName": "Suffix",
               "description": "Resource name suffix"
              }
             }
            },
            "policyType": "Custom"
           }
          }
         }
        }
       }
      },
      "x-ms-requestBody-index": "1"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "945",
     "parameters": [
      {
       "$id": "946",
       "clientProperty": {
        "$ref": "464"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "947",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "948",
        "fixed": false,
        "raw": "The name of the policy definition to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "949",
        "fixed": false,
        "raw": "policyDefinitionName"
       },
       "serializedName": "policyDefinitionName",
       "modelType": {
        "$id": "950",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "951",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "952",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "953",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "954",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "955",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "956",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "957",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "958",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "959",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "960",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "961",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "962",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "963",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "964",
      "fixed": false,
      "raw": "DeleteAtManagementGroup"
     },
     "group": {
      "$id": "965",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_DeleteAtManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "OK": {
       "$id": "966",
       "extensions": {
        "$id": "967",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      },
      "NoContent": {
       "$id": "968",
       "extensions": {
        "$id": "969",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "970",
      "isNullable": true
     },
     "returnType": {
      "$id": "971",
      "isNullable": true
     },
     "description": "This operation deletes the policy definition in the given management group with the given name.",
     "summary": "Deletes a policy definition in a management group.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Delete a policy definition at management group level": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "policyDefinitionName": "ResourceNaming",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {}
         },
         "204": {
          "headers": {}
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "972",
     "parameters": [
      {
       "$id": "973",
       "clientProperty": {
        "$ref": "464"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "974",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "975",
        "fixed": false,
        "raw": "The name of the policy definition to get."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "976",
        "fixed": false,
        "raw": "policyDefinitionName"
       },
       "serializedName": "policyDefinitionName",
       "modelType": {
        "$id": "977",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "978",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "979",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "980",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "981",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "982",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "983",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "984",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "985",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "986",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "987",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "988",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "989",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "990",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "991",
      "fixed": false,
      "raw": "GetAtManagementGroup"
     },
     "group": {
      "$id": "992",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_GetAtManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "993",
       "body": {
        "$ref": "212"
       },
       "extensions": {
        "$id": "994",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions-policydefinitionname·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "995",
      "isNullable": true
     },
     "returnType": {
      "$id": "996",
      "body": {
       "$ref": "212"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the policy definition in the given management group with the given name.",
     "summary": "Retrieve a policy definition in a management group.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a policy definition at management group level": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "policyDefinitionName": "ResourceNaming",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "id": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
           "type": "Microsoft.Authorization/policyDefinitions",
           "name": "ResourceNaming",
           "properties": {
            "displayName": "Naming Convention",
            "description": "Force resource names to begin with 'prefix' and end with 'suffix'",
            "metadata": {
             "category": "Naming"
            },
            "policyRule": {
             "if": {
              "not": {
               "field": "name",
               "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
              }
             },
             "then": {
              "effect": "deny"
             }
            },
            "parameters": {
             "prefix": {
              "type": "String",
              "metadata": {
               "displayName": "Prefix",
               "description": "Resource name prefix"
              }
             },
             "suffix": {
              "type": "String",
              "metadata": {
               "displayName": "Suffix",
               "description": "Resource name suffix"
              }
             }
            },
            "policyType": "Custom"
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "997",
     "parameters": [
      {
       "$id": "998",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "999",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1000",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1001",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1002",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1003",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1004",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1005",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1006",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1007",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "1008",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1009",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1010",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "1011",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_List",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1012",
       "body": {
        "$ref": "236"
       },
       "extensions": {
        "$id": "1013",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policydefinitions·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1014",
      "isNullable": true
     },
     "returnType": {
      "$id": "1015",
      "body": {
       "$ref": "236"
      },
      "isNullable": true
     },
     "description": "This operation retrieves a list of all the policy definitions in a given subscription.",
     "summary": "Retrieves policy definitions in a subscription",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List policy definitions by subscription": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "properties": {
              "displayName": "Allowed storage account SKUs",
              "policyType": "BuiltIn",
              "description": "This policy enables you to specify a set of storage account SKUs that your organization can deploy.",
              "parameters": {
               "listOfAllowedSKUs": {
                "type": "Array",
                "metadata": {
                 "description": "The list of SKUs that can be specified for storage accounts.",
                 "displayName": "Allowed SKUs",
                 "strongType": "StorageSKUs"
                }
               }
              },
              "policyRule": {
               "if": {
                "allOf": [
                 {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                 },
                 {
                  "not": {
                   "field": "Microsoft.Storage/storageAccounts/sku.name",
                   "in": "[parameters('listOfAllowedSKUs')]"
                  }
                 }
                ]
               },
               "then": {
                "effect": "Deny"
               }
              }
             },
             "id": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
             "type": "Microsoft.Authorization/policyDefinitions",
             "name": "7433c107-6db4-4ad1-b57a-a76dce0154a1"
            },
            {
             "properties": {
              "displayName": "Naming Convention",
              "description": "Force resource names to begin with 'prefix' and end with 'suffix'",
              "metadata": {
               "category": "Naming"
              },
              "parameters": {
               "prefix": {
                "type": "String",
                "metadata": {
                 "displayName": "Prefix",
                 "description": "Resource name prefix"
                }
               },
               "suffix": {
                "type": "String",
                "metadata": {
                 "displayName": "Suffix",
                 "description": "Resource name suffix"
                }
               }
              },
              "policyRule": {
               "if": {
                "not": {
                 "field": "name",
                 "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
                }
               },
               "then": {
                "effect": "deny"
               }
              },
              "policyType": "Custom"
             },
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
             "type": "Microsoft.Authorization/policyDefinitions",
             "name": "ResourceNaming"
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1016",
     "parameters": [
      {
       "$id": "1017",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1018",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1019",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1020",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1021",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1022",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1023",
      "fixed": false,
      "raw": "ListBuiltIn"
     },
     "group": {
      "$id": "1024",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_ListBuiltIn",
     "url": "/providers/Microsoft.Authorization/policyDefinitions",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1025",
       "body": {
        "$ref": "236"
       },
       "extensions": {
        "$id": "1026",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-authorization-policydefinitions·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-authorization-policydefinitions·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1027",
      "isNullable": true
     },
     "returnType": {
      "$id": "1028",
      "body": {
       "$ref": "236"
      },
      "isNullable": true
     },
     "description": "This operation retrieves a list of all the built-in policy definitions.",
     "summary": "Retrieve built-in policy definitions",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List built-in policy definitions": {
        "parameters": {
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "properties": {
              "displayName": "Audit SQL DB Level Audit Setting",
              "policyType": "BuiltIn",
              "mode": "All",
              "description": "Audit DB level audit setting for SQL databases",
              "parameters": {
               "setting": {
                "type": "String",
                "metadata": {
                 "displayName": "Audit Setting"
                },
                "allowedValues": [
                 "enabled",
                 "disabled"
                ]
               }
              },
              "policyRule": {
               "if": {
                "field": "type",
                "equals": "Microsoft.Sql/servers/databases"
               },
               "then": {
                "effect": "AuditIfNotExists",
                "details": {
                 "type": "Microsoft.Sql/servers/databases/auditingSettings",
                 "name": "default",
                 "existenceCondition": {
                  "allOf": [
                   {
                    "field": "Microsoft.Sql/auditingSettings.state",
                    "equals": "[parameters('setting')]"
                   }
                  ]
                 }
                }
               }
              }
             },
             "id": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a12",
             "type": "Microsoft.Authorization/policyDefinitions",
             "name": "06a78e20-9358-41c9-923c-fb736d382a12"
            },
            {
             "properties": {
              "displayName": "Allowed storage account SKUs",
              "policyType": "BuiltIn",
              "description": "This policy enables you to specify a set of storage account SKUs that your organization can deploy.",
              "parameters": {
               "listOfAllowedSKUs": {
                "type": "Array",
                "metadata": {
                 "description": "The list of SKUs that can be specified for storage accounts.",
                 "displayName": "Allowed SKUs",
                 "strongType": "StorageSKUs"
                }
               }
              },
              "policyRule": {
               "if": {
                "allOf": [
                 {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                 },
                 {
                  "not": {
                   "field": "Microsoft.Storage/storageAccounts/sku.name",
                   "in": "[parameters('listOfAllowedSKUs')]"
                  }
                 }
                ]
               },
               "then": {
                "effect": "Deny"
               }
              }
             },
             "id": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
             "type": "Microsoft.Authorization/policyDefinitions",
             "name": "7433c107-6db4-4ad1-b57a-a76dce0154a1"
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1029",
     "parameters": [
      {
       "$id": "1030",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1031",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1032",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1033",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1034",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1035",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1036",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1037",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1038",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1039",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "1040",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1041",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1042",
      "fixed": false,
      "raw": "ListByManagementGroup"
     },
     "group": {
      "$id": "1043",
      "fixed": false,
      "raw": "PolicyDefinitions"
     },
     "serializedName": "PolicyDefinitions_ListByManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1044",
       "body": {
        "$ref": "236"
       },
       "extensions": {
        "$id": "1045",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policydefinitions·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1046",
      "isNullable": true
     },
     "returnType": {
      "$id": "1047",
      "body": {
       "$ref": "236"
      },
      "isNullable": true
     },
     "description": "This operation retrieves a list of all the policy definitions in a given management group.",
     "summary": "Retrieve policy definitions in a management group",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List policy definitions by management group": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "properties": {
              "displayName": "Allowed storage account SKUs",
              "policyType": "BuiltIn",
              "description": "This policy enables you to specify a set of storage account SKUs that your organization can deploy.",
              "parameters": {
               "listOfAllowedSKUs": {
                "type": "Array",
                "metadata": {
                 "description": "The list of SKUs that can be specified for storage accounts.",
                 "displayName": "Allowed SKUs",
                 "strongType": "StorageSKUs"
                }
               }
              },
              "policyRule": {
               "if": {
                "allOf": [
                 {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                 },
                 {
                  "not": {
                   "field": "Microsoft.Storage/storageAccounts/sku.name",
                   "in": "[parameters('listOfAllowedSKUs')]"
                  }
                 }
                ]
               },
               "then": {
                "effect": "Deny"
               }
              }
             },
             "id": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
             "type": "Microsoft.Authorization/policyDefinitions",
             "name": "7433c107-6db4-4ad1-b57a-a76dce0154a1"
            },
            {
             "id": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
             "type": "Microsoft.Authorization/policyDefinitions",
             "name": "ResourceNaming",
             "properties": {
              "displayName": "Naming Convention",
              "description": "Force resource names to begin with 'prefix' and end with 'suffix'",
              "metadata": {
               "category": "Naming"
              },
              "policyRule": {
               "if": {
                "not": {
                 "field": "name",
                 "like": "[concat(parameters('prefix'), '*', parameters('suffix'))]"
                }
               },
               "then": {
                "effect": "deny"
               }
              },
              "parameters": {
               "prefix": {
                "type": "String",
                "metadata": {
                 "displayName": "Prefix",
                 "description": "Resource name prefix"
                }
               },
               "suffix": {
                "type": "String",
                "metadata": {
                 "displayName": "Suffix",
                 "description": "Resource name suffix"
                }
               }
              },
              "policyType": "Custom"
             }
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "1048",
    "fixed": false,
    "raw": "PolicyDefinitions"
   },
   "typeName": {
    "$id": "1049",
    "fixed": false
   },
   "nameForProperty": "PolicyDefinitions"
  },
  {
   "$id": "1050",
   "methods": [
    {
     "$id": "1051",
     "parameters": [
      {
       "$id": "1052",
       "clientProperty": {
        "$ref": "506"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1053",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1054",
        "fixed": false,
        "raw": "The name of the policy set definition to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1055",
        "fixed": false,
        "raw": "policySetDefinitionName"
       },
       "serializedName": "policySetDefinitionName",
       "modelType": {
        "$id": "1056",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1057",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1058",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1059",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1060",
        "fixed": false,
        "raw": "The policy set definition properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·requestbody",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/requestBodies/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·requestbody"
         ]
        },
        "x-ms-requestBody-name": "parameters"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1061",
        "fixed": false,
        "raw": "parameters"
       },
       "serializedName": "parameters",
       "modelType": {
        "$ref": "300"
       }
      },
      {
       "$id": "1062",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1063",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1064",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1065",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1066",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1067",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1068",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1069",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1070",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1071",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "1072",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1073",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1074",
      "fixed": false,
      "raw": "CreateOrUpdate"
     },
     "group": {
      "$id": "1075",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_CreateOrUpdate",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "OK": {
       "$id": "1076",
       "body": {
        "$ref": "300"
       },
       "extensions": {
        "$id": "1077",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·201"
         ]
        }
       },
       "isNullable": true
      },
      "Created": {
       "$id": "1078",
       "body": {
        "$ref": "300"
       },
       "extensions": {
        "$id": "1079",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1080",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1081",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1082",
      "body": {
       "$ref": "300"
      },
      "isNullable": true
     },
     "description": "This operation creates or updates a policy set definition in the given subscription with the given name.",
     "summary": "Creates or updates a policy set definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Create or update a policy set definition": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policySetDefinitionName": "CostManagement",
         "api-version": "2018-05-01",
         "parameters": {
          "properties": {
           "displayName": "Cost Management",
           "description": "Policies to enforce low cost storage SKUs",
           "metadata": {
            "category": "Cost Management"
           },
           "policyDefinitions": [
            {
             "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
             "parameters": {
              "listOfAllowedSKUs": {
               "value": [
                "Standard_GRS",
                "Standard_LRS"
               ]
              }
             }
            },
            {
             "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
             "parameters": {
              "prefix": {
               "value": "DeptA"
              },
              "suffix": {
               "value": "-LC"
              }
             }
            }
           ]
          }
         }
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
           "type": "Microsoft.Authorization/policySetDefinitions",
           "name": "CostManagement",
           "properties": {
            "displayName": "Cost Management",
            "description": "Policies to enforce low cost storage SKUs",
            "metadata": {
             "category": "Cost Management"
            },
            "policyDefinitions": [
             {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "parameters": {
               "listOfAllowedSKUs": {
                "value": [
                 "Standard_GRS",
                 "Standard_LRS"
                ]
               }
              }
             },
             {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "parameters": {
               "prefix": {
                "value": "DeptA"
               },
               "suffix": {
                "value": "-LC"
               }
              }
             }
            ]
           }
          }
         },
         "201": {
          "headers": {},
          "body": {
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
           "type": "Microsoft.Authorization/policySetDefinitions",
           "name": "CostManagement",
           "properties": {
            "displayName": "Cost Management",
            "description": "Policies to enforce low cost storage SKUs",
            "metadata": {
             "category": "Cost Management"
            },
            "policyDefinitions": [
             {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "parameters": {
               "listOfAllowedSKUs": {
                "value": [
                 "Standard_GRS",
                 "Standard_LRS"
                ]
               }
              }
             },
             {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "parameters": {
               "prefix": {
                "value": "DeptA"
               },
               "suffix": {
                "value": "-LC"
               }
              }
             }
            ]
           }
          }
         }
        }
       }
      },
      "x-ms-requestBody-index": "1"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1083",
     "parameters": [
      {
       "$id": "1084",
       "clientProperty": {
        "$ref": "506"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1085",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1086",
        "fixed": false,
        "raw": "The name of the policy set definition to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1087",
        "fixed": false,
        "raw": "policySetDefinitionName"
       },
       "serializedName": "policySetDefinitionName",
       "modelType": {
        "$id": "1088",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1089",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1090",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1091",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1092",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1093",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1094",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1095",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1096",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1097",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1098",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1099",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "1100",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1101",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1102",
      "fixed": false,
      "raw": "Delete"
     },
     "group": {
      "$id": "1103",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_Delete",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "OK": {
       "$id": "1104",
       "extensions": {
        "$id": "1105",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      },
      "NoContent": {
       "$id": "1106",
       "extensions": {
        "$id": "1107",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1108",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1109",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1110",
      "isNullable": true
     },
     "description": "This operation deletes the policy set definition in the given subscription with the given name.",
     "summary": "Deletes a policy set definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Delete a policy set definition": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policySetDefinitionName": "CostManagement",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {}
         },
         "204": {
          "headers": {}
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1111",
     "parameters": [
      {
       "$id": "1112",
       "clientProperty": {
        "$ref": "506"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1113",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1114",
        "fixed": false,
        "raw": "The name of the policy set definition to get."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1115",
        "fixed": false,
        "raw": "policySetDefinitionName"
       },
       "serializedName": "policySetDefinitionName",
       "modelType": {
        "$id": "1116",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1117",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1118",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1119",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1120",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1121",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1122",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1123",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1124",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1125",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1126",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1127",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "1128",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1129",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1130",
      "fixed": false,
      "raw": "Get"
     },
     "group": {
      "$id": "1131",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_Get",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1132",
       "body": {
        "$ref": "300"
       },
       "extensions": {
        "$id": "1133",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1134",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1135",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1136",
      "body": {
       "$ref": "300"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the policy set definition in the given subscription with the given name.",
     "summary": "Retrieves a policy set definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a policy set definition": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "policySetDefinitionName": "CostManagement",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
           "type": "Microsoft.Authorization/policySetDefinitions",
           "name": "CostManagement",
           "properties": {
            "displayName": "Cost Management",
            "description": "Policies to enforce low cost storage SKUs",
            "metadata": {
             "category": "Cost Management"
            },
            "policyDefinitions": [
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "parameters": {
               "listOfAllowedSKUs": {
                "value": [
                 "Standard_GRS",
                 "Standard_LRS"
                ]
               }
              }
             },
             {
              "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "parameters": {
               "prefix": {
                "value": "DeptA"
               },
               "suffix": {
                "value": "-LC"
               }
              }
             }
            ]
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1137",
     "parameters": [
      {
       "$id": "1138",
       "clientProperty": {
        "$ref": "506"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1139",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1140",
        "fixed": false,
        "raw": "The name of the policy set definition to get."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1141",
        "fixed": false,
        "raw": "policySetDefinitionName"
       },
       "serializedName": "policySetDefinitionName",
       "modelType": {
        "$id": "1142",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1143",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1144",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1145",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1146",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1147",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1148",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1149",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1150",
      "fixed": false,
      "raw": "GetBuiltIn"
     },
     "group": {
      "$id": "1151",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_GetBuiltIn",
     "url": "/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1152",
       "body": {
        "$ref": "300"
       },
       "extensions": {
        "$id": "1153",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1154",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1155",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1156",
      "body": {
       "$ref": "300"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the built-in policy set definition with the given name.",
     "summary": "Retrieves a built in policy set definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a built-in policy set definition": {
        "parameters": {
         "policySetDefinitionName": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "properties": {
            "displayName": "[Preview]: Enable Monitoring in Azure Security Center",
            "policyType": "BuiltIn",
            "description": "Monitor all the available security recommendations in Azure Security Center. This is the default policy for Azure Security Center.",
            "metadata": {
             "category": "Security Center"
            },
            "parameters": {},
            "policyDefinitions": [
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8bef009-a5c9-4d0f-90d7-6018734e8a16"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af8051bf-258b-44e2-a2bf-165330459f9d"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/760a85ff-6162-42b3-8d70-698e268f648c"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/201ea587-7c90-41c3-910f-c280ae01cfd6"
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6"
             }
            ]
           },
           "id": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
           "type": "Microsoft.Authorization/policySetDefinitions",
           "name": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1157",
     "parameters": [
      {
       "$id": "1158",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1159",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1160",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1161",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1162",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1163",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1164",
       "clientProperty": {
        "$ref": "338"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1165",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1166",
        "fixed": false,
        "raw": "The ID of the target subscription."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///303?oai3.shaken.json",
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "SubscriptionIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyAssignments.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/SubscriptionIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/SubscriptionIdParameter"
         ]
        }
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1167",
        "fixed": false,
        "raw": "subscriptionId"
       },
       "serializedName": "subscriptionId",
       "modelType": {
        "$id": "1168",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1169",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1170",
      "fixed": false,
      "raw": "List"
     },
     "group": {
      "$id": "1171",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_List",
     "url": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policySetDefinitions",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1172",
       "body": {
        "$ref": "324"
       },
       "extensions": {
        "$id": "1173",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1174",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1175",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·subscriptions-subscriptionid-providers-microsoft-authorization-policysetdefinitions·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1176",
      "body": {
       "$ref": "324"
      },
      "isNullable": true
     },
     "description": "This operation retrieves a list of all the policy set definitions in the given subscription.",
     "summary": "Retrieves the policy set definitions for a subscription.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List policy set definitions": {
        "parameters": {
         "subscriptionId": "ae640e6b-ba3e-4256-9d62-2993eecfa6f2",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "properties": {
              "displayName": "[Preview]: Enable Monitoring in Azure Security Center",
              "policyType": "BuiltIn",
              "description": "Monitor all the available security recommendations in Azure Security Center. This is the default policy for Azure Security Center.",
              "metadata": {
               "category": "Security Center"
              },
              "parameters": {},
              "policyDefinitions": [
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8bef009-a5c9-4d0f-90d7-6018734e8a16"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af8051bf-258b-44e2-a2bf-165330459f9d"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/760a85ff-6162-42b3-8d70-698e268f648c"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/201ea587-7c90-41c3-910f-c280ae01cfd6"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6"
               }
              ]
             },
             "id": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
             "type": "Microsoft.Authorization/policySetDefinitions",
             "name": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
            },
            {
             "id": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
             "type": "Microsoft.Authorization/policySetDefinitions",
             "name": "CostManagement",
             "properties": {
              "displayName": "Cost Management",
              "description": "Policies to enforce low cost storage SKUs",
              "metadata": {
               "category": "Cost Management"
              },
              "policyDefinitions": [
               {
                "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
                "parameters": {
                 "listOfAllowedSKUs": {
                  "value": [
                   "Standard_GRS",
                   "Standard_LRS"
                  ]
                 }
                }
               },
               {
                "policyDefinitionId": "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
                "parameters": {
                 "prefix": {
                  "value": "DeptA"
                 },
                 "suffix": {
                  "value": "-LC"
                 }
                }
               }
              ]
             }
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1177",
     "parameters": [
      {
       "$id": "1178",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1179",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1180",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1181",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1182",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1183",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1184",
      "fixed": false,
      "raw": "ListBuiltIn"
     },
     "group": {
      "$id": "1185",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_ListBuiltIn",
     "url": "/providers/Microsoft.Authorization/policySetDefinitions",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1186",
       "body": {
        "$ref": "324"
       },
       "extensions": {
        "$id": "1187",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-authorization-policysetdefinitions·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-authorization-policysetdefinitions·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1188",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1189",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·providers-microsoft-authorization-policysetdefinitions·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-authorization-policysetdefinitions·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1190",
      "body": {
       "$ref": "324"
      },
      "isNullable": true
     },
     "description": "This operation retrieves a list of all the built-in policy set definitions.",
     "summary": "Retrieves built-in policy set definitions.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List built-in policy set definitions": {
        "parameters": {
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "properties": {
              "displayName": "[Preview]: Enable Monitoring in Azure Security Center",
              "policyType": "BuiltIn",
              "description": "Monitor all the available security recommendations in Azure Security Center. This is the default policy for Azure Security Center.",
              "metadata": {
               "category": "Security Center"
              },
              "parameters": {},
              "policyDefinitions": [
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8bef009-a5c9-4d0f-90d7-6018734e8a16"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af8051bf-258b-44e2-a2bf-165330459f9d"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/760a85ff-6162-42b3-8d70-698e268f648c"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/201ea587-7c90-41c3-910f-c280ae01cfd6"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6"
               }
              ]
             },
             "id": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
             "type": "Microsoft.Authorization/policySetDefinitions",
             "name": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1191",
     "parameters": [
      {
       "$id": "1192",
       "clientProperty": {
        "$ref": "506"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1193",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1194",
        "fixed": false,
        "raw": "The name of the policy set definition to create."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1195",
        "fixed": false,
        "raw": "policySetDefinitionName"
       },
       "serializedName": "policySetDefinitionName",
       "modelType": {
        "$id": "1196",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1197",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1198",
       "location": "body",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1199",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1200",
        "fixed": false,
        "raw": "The policy set definition properties."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·requestbody",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/requestBodies/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·requestbody"
         ]
        },
        "x-ms-requestBody-name": "parameters"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1201",
        "fixed": false,
        "raw": "parameters"
       },
       "serializedName": "parameters",
       "modelType": {
        "$ref": "300"
       }
      },
      {
       "$id": "1202",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1203",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1204",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1205",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1206",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1207",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1208",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1209",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1210",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1211",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "1212",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1213",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1214",
      "fixed": false,
      "raw": "CreateOrUpdateAtManagementGroup"
     },
     "group": {
      "$id": "1215",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_CreateOrUpdateAtManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "put",
     "responses": {
      "OK": {
       "$id": "1216",
       "body": {
        "$ref": "300"
       },
       "extensions": {
        "$id": "1217",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·201"
         ]
        }
       },
       "isNullable": true
      },
      "Created": {
       "$id": "1218",
       "body": {
        "$ref": "300"
       },
       "extensions": {
        "$id": "1219",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·201"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1220",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1221",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·put·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1222",
      "body": {
       "$ref": "300"
      },
      "isNullable": true
     },
     "description": "This operation creates or updates a policy set definition in the given management group with the given name.",
     "summary": "Creates or updates a policy set definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Create or update a policy set definition at management group level": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "policySetDefinitionName": "CostManagement",
         "api-version": "2018-05-01",
         "parameters": {
          "properties": {
           "displayName": "Cost Management",
           "description": "Policies to enforce low cost storage SKUs",
           "metadata": {
            "category": "Cost Management"
           },
           "policyDefinitions": [
            {
             "policyDefinitionId": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
             "parameters": {
              "listOfAllowedSKUs": {
               "value": [
                "Standard_GRS",
                "Standard_LRS"
               ]
              }
             }
            },
            {
             "policyDefinitionId": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
             "parameters": {
              "prefix": {
               "value": "DeptA"
              },
              "suffix": {
               "value": "-LC"
              }
             }
            }
           ]
          }
         }
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "id": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
           "type": "Microsoft.Authorization/policySetDefinitions",
           "name": "CostManagement",
           "properties": {
            "displayName": "Cost Management",
            "description": "Policies to enforce low cost storage SKUs",
            "metadata": {
             "category": "Cost Management"
            },
            "policyDefinitions": [
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "parameters": {
               "listOfAllowedSKUs": {
                "value": [
                 "Standard_GRS",
                 "Standard_LRS"
                ]
               }
              }
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "parameters": {
               "prefix": {
                "value": "DeptA"
               },
               "suffix": {
                "value": "-LC"
               }
              }
             }
            ]
           }
          }
         },
         "201": {
          "headers": {},
          "body": {
           "id": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
           "type": "Microsoft.Authorization/policySetDefinitions",
           "name": "CostManagement",
           "properties": {
            "displayName": "Cost Management",
            "description": "Policies to enforce low cost storage SKUs",
            "metadata": {
             "category": "Cost Management"
            },
            "policyDefinitions": [
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "parameters": {
               "listOfAllowedSKUs": {
                "value": [
                 "Standard_GRS",
                 "Standard_LRS"
                ]
               }
              }
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "parameters": {
               "prefix": {
                "value": "DeptA"
               },
               "suffix": {
                "value": "-LC"
               }
              }
             }
            ]
           }
          }
         }
        }
       }
      },
      "x-ms-requestBody-index": "1"
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1223",
     "parameters": [
      {
       "$id": "1224",
       "clientProperty": {
        "$ref": "506"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1225",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1226",
        "fixed": false,
        "raw": "The name of the policy set definition to delete."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1227",
        "fixed": false,
        "raw": "policySetDefinitionName"
       },
       "serializedName": "policySetDefinitionName",
       "modelType": {
        "$id": "1228",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1229",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1230",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1231",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1232",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1233",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1234",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1235",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1236",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1237",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1238",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1239",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "1240",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1241",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1242",
      "fixed": false,
      "raw": "DeleteAtManagementGroup"
     },
     "group": {
      "$id": "1243",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_DeleteAtManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "delete",
     "responses": {
      "OK": {
       "$id": "1244",
       "extensions": {
        "$id": "1245",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      },
      "NoContent": {
       "$id": "1246",
       "extensions": {
        "$id": "1247",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·200",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·204"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1248",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1249",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·delete·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1250",
      "isNullable": true
     },
     "description": "This operation deletes the policy set definition in the given management group with the given name.",
     "summary": "Deletes a policy set definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Delete a policy set definition at management group level": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "policySetDefinitionName": "CostManagement",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {}
         },
         "204": {
          "headers": {}
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1251",
     "parameters": [
      {
       "$id": "1252",
       "clientProperty": {
        "$ref": "506"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1253",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1254",
        "fixed": false,
        "raw": "The name of the policy set definition to get."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·parameters·0"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1255",
        "fixed": false,
        "raw": "policySetDefinitionName"
       },
       "serializedName": "policySetDefinitionName",
       "modelType": {
        "$id": "1256",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1257",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1258",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1259",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1260",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1261",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1262",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1263",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1264",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1265",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1266",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1267",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "1268",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1269",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1270",
      "fixed": false,
      "raw": "GetAtManagementGroup"
     },
     "group": {
      "$id": "1271",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_GetAtManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1272",
       "body": {
        "$ref": "300"
       },
       "extensions": {
        "$id": "1273",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1274",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1275",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions-policysetdefinitionname·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1276",
      "body": {
       "$ref": "300"
      },
      "isNullable": true
     },
     "description": "This operation retrieves the policy set definition in the given management group with the given name.",
     "summary": "Retrieves a policy set definition.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "Retrieve a policy set definition at management group level": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "policySetDefinitionName": "CostManagement",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "id": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
           "type": "Microsoft.Authorization/policySetDefinitions",
           "name": "CostManagement",
           "properties": {
            "displayName": "Cost Management",
            "description": "Policies to enforce low cost storage SKUs",
            "metadata": {
             "category": "Cost Management"
            },
            "policyDefinitions": [
             {
              "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
              "parameters": {
               "listOfAllowedSKUs": {
                "value": [
                 "Standard_GRS",
                 "Standard_LRS"
                ]
               }
              }
             },
             {
              "policyDefinitionId": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
              "parameters": {
               "prefix": {
                "value": "DeptA"
               },
               "suffix": {
                "value": "-LC"
               }
              }
             }
            ]
           }
          }
         }
        }
       }
      }
     },
     "deprecated": false,
     "hidden": false
    },
    {
     "$id": "1277",
     "parameters": [
      {
       "$id": "1278",
       "location": "query",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1279",
        "fixed": false,
        "raw": "2018-05-01"
       },
       "deprecated": false,
       "documentation": {
        "$id": "1280",
        "fixed": false,
        "raw": "The API version to use for the request."
       },
       "isRequired": true,
       "isConstant": true,
       "name": {
        "$id": "1281",
        "fixed": false,
        "raw": "api-version"
       },
       "serializedName": "api-version",
       "modelType": {
        "$id": "1282",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1283",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      },
      {
       "$id": "1284",
       "clientProperty": {
        "$ref": "458"
       },
       "location": "path",
       "collectionFormat": "none",
       "defaultValue": {
        "$id": "1285",
        "fixed": false
       },
       "deprecated": false,
       "documentation": {
        "$id": "1286",
        "fixed": false,
        "raw": "The ID of the management group."
       },
       "extensions": {
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///304?oai3.shaken.json",
          "mem:///305?oai3.shaken.json"
         ],
         "name": "ManagementGroupIdParameter",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policyDefinitions.json#/components/parameters/ManagementGroupIdParameter",
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/parameters/ManagementGroupIdParameter"
         ]
        },
        "x-ms-parameter-location": "method"
       },
       "isRequired": true,
       "isConstant": false,
       "name": {
        "$id": "1287",
        "fixed": false,
        "raw": "managementGroupId"
       },
       "serializedName": "managementGroupId",
       "modelType": {
        "$id": "1288",
        "$type": "PrimaryType",
        "knownPrimaryType": "string",
        "name": {
         "$id": "1289",
         "fixed": false,
         "raw": "String"
        },
        "deprecated": false
       }
      }
     ],
     "name": {
      "$id": "1290",
      "fixed": false,
      "raw": "ListByManagementGroup"
     },
     "group": {
      "$id": "1291",
      "fixed": false,
      "raw": "PolicySetDefinitions"
     },
     "serializedName": "PolicySetDefinitions_ListByManagementGroup",
     "url": "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policySetDefinitions",
     "isAbsoluteUrl": false,
     "httpMethod": "get",
     "responses": {
      "OK": {
       "$id": "1292",
       "body": {
        "$ref": "324"
       },
       "extensions": {
        "$id": "1293",
        "x-ms-metadata": {
         "apiVersions": [
          "2018-05-01"
         ],
         "filename": [
          "mem:///305?oai3.shaken.json"
         ],
         "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions·get·responses·200",
         "originalLocations": [
          "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions·get·responses·200"
         ]
        }
       },
       "isNullable": true
      }
     },
     "defaultResponse": {
      "$id": "1294",
      "body": {
       "$ref": "138"
      },
      "extensions": {
       "$id": "1295",
       "x-ms-metadata": {
        "apiVersions": [
         "2018-05-01"
        ],
        "filename": [
         "mem:///305?oai3.shaken.json"
        ],
        "name": "paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions·get·responses·default",
        "originalLocations": [
         "file:///z/work/azure-rest-api-specs/specification/resources/resource-manager/Microsoft.Authorization/stable/2018-05-01/policySetDefinitions.json#/components/responses/paths·providers-microsoft-management-managementgroups-managementgroupid-providers-microsoft-authorization-policysetdefinitions·get·responses·default"
        ]
       }
      },
      "isNullable": true
     },
     "returnType": {
      "$id": "1296",
      "body": {
       "$ref": "324"
      },
      "isNullable": true
     },
     "description": "This operation retrieves a list of all the a policy set definition in the given management group.",
     "summary": "Retrieves all policy set definitions in management group.",
     "requestContentType": "application/json; charset=utf-8",
     "responseContentTypes": [
      "application/json"
     ],
     "extensions": {
      "servers": [
       {
        "url": "https://management.azure.com/"
       }
      ],
      "x-ms-examples": {
       "List policy set definitions at management group level": {
        "parameters": {
         "managementGroupId": "MyManagementGroup",
         "api-version": "2018-05-01"
        },
        "responses": {
         "200": {
          "headers": {},
          "body": {
           "value": [
            {
             "properties": {
              "displayName": "[Preview]: Enable Monitoring in Azure Security Center",
              "policyType": "BuiltIn",
              "description": "Monitor all the available security recommendations in Azure Security Center. This is the default policy for Azure Security Center.",
              "metadata": {
               "category": "Security Center"
              },
              "parameters": {},
              "policyDefinitions": [
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a8bef009-a5c9-4d0f-90d7-6018734e8a16"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af8051bf-258b-44e2-a2bf-165330459f9d"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/655cb504-bcee-4362-bd4c-402e6aa38759"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/44452482-524f-4bf4-b852-0bff7cc4a3ed"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/760a85ff-6162-42b3-8d70-698e268f648c"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/201ea587-7c90-41c3-910f-c280ae01cfd6"
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6"
               }
              ]
             },
             "id": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
             "type": "Microsoft.Authorization/policySetDefinitions",
             "name": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
            },
            {
             "id": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policySetDefinitions/CostManagement",
             "type": "Microsoft.Authorization/policySetDefinitions",
             "name": "CostManagement",
             "properties": {
              "displayName": "Cost Management",
              "description": "Policies to enforce low cost storage SKUs",
              "metadata": {
               "category": "Cost Management"
              },
              "policyDefinitions": [
               {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1",
                "parameters": {
                 "listOfAllowedSKUs": {
                  "value": [
                   "Standard_GRS",
                   "Standard_LRS"
                  ]
                 }
                }
               },
               {
                "policyDefinitionId": "/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming",
                "parameters": {
                 "prefix": {
                  "value": "DeptA"
                 },
                 "suffix": {
                  "value": "-LC"
                 }
                }
               }
              ]
             }
            }
           ]
          }
         }
        }
       }
      },
      "x-ms-pageable": {
       "nextLinkName": "nextLink"
      }
     },
     "deprecated": false,
     "hidden": false
    }
   ],
   "name": {
    "$id": "1297",
    "fixed": false,
    "raw": "PolicySetDefinitions"
   },
   "typeName": {
    "$id": "1298",
    "fixed": false
   },
   "nameForProperty": "PolicySetDefinitions"
  }
 ]
}