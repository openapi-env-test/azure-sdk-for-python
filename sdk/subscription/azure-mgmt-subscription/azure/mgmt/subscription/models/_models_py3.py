# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model
from msrest.exceptions import HttpOperationError


class CloudError(Model):
    """CloudError.
    """

    _attribute_map = {
    }


class ProxyResource(Model):
    """The Resource model definition.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(self, **kwargs) -> None:
        super(ProxyResource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class DefaultSupportPlanResponseResult(ProxyResource):
    """A SupportPlan resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :param plan_type: Possible values include: 'basic_support',
     'developer_support', 'standard_support', 'prodirect_support'
    :type plan_type: str or ~azure.mgmt.subscription.models.enum
    :param end_date: the end date
    :type end_date: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'plan_type': {'key': 'properties.planType', 'type': 'str'},
        'end_date': {'key': 'properties.endDate', 'type': 'str'},
    }

    def __init__(self, *, plan_type=None, end_date: str=None, **kwargs) -> None:
        super(DefaultSupportPlanResponseResult, self).__init__(**kwargs)
        self.plan_type = plan_type
        self.end_date = end_date


class ErrorResponse(Model):
    """Describes the format of Error response.

    :param code: Error code
    :type code: str
    :param message: Error message indicating why the operation failed.
    :type message: str
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(self, *, code: str=None, message: str=None, **kwargs) -> None:
        super(ErrorResponse, self).__init__(**kwargs)
        self.code = code
        self.message = message


class ErrorResponseException(HttpOperationError):
    """Server responsed with exception of type: 'ErrorResponse'.

    :param deserialize: A deserializer
    :param response: Server response to be deserialized.
    """

    def __init__(self, deserialize, response, *args):

        super(ErrorResponseException, self).__init__(deserialize, response, 'ErrorResponse', *args)


class Operation(Model):
    """REST API operation.

    :param name: Operation name: {provider}/{resource}/{operation}
    :type name: str
    :param display: The object that represents the operation.
    :type display: ~azure.mgmt.subscription.models.OperationDisplay
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'display': {'key': 'display', 'type': 'OperationDisplay'},
    }

    def __init__(self, *, name: str=None, display=None, **kwargs) -> None:
        super(Operation, self).__init__(**kwargs)
        self.name = name
        self.display = display


class OperationDisplay(Model):
    """The object that represents the operation.

    :param provider: Service provider: Microsoft.Subscription
    :type provider: str
    :param resource: Resource on which the operation is performed: Profile,
     endpoint, etc.
    :type resource: str
    :param operation: Operation type: Read, write, delete, etc.
    :type operation: str
    """

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
    }

    def __init__(self, *, provider: str=None, resource: str=None, operation: str=None, **kwargs) -> None:
        super(OperationDisplay, self).__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation


class OperationListResult(Model):
    """Result of the request to list operations. It contains a list of operations
    and a URL link to get the next set of results.

    :param value: List of operations.
    :type value: list[~azure.mgmt.subscription.models.Operation]
    :param next_link: URL to get the next set of operation list results if
     there are any.
    :type next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Operation]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(self, *, value=None, next_link: str=None, **kwargs) -> None:
        super(OperationListResult, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class OperationName(Model):
    """The operation Name parameter.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar value: The operation Name
    :vartype value: str
    """

    _validation = {
        'value': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(self, **kwargs) -> None:
        super(OperationName, self).__init__(**kwargs)
        self.value = None


class OperationStatusResponseResult(Model):
    """Purchase Record result.

    :param plan_type: Possible values include: 'basic_support',
     'developer_support', 'standard_support', 'prodirect_support'
    :type plan_type: str or ~azure.mgmt.subscription.models.enum
    :param end_date: the end date
    :type end_date: str
    """

    _attribute_map = {
        'plan_type': {'key': 'planType', 'type': 'str'},
        'end_date': {'key': 'endDate', 'type': 'str'},
    }

    def __init__(self, *, plan_type=None, end_date: str=None, **kwargs) -> None:
        super(OperationStatusResponseResult, self).__init__(**kwargs)
        self.plan_type = plan_type
        self.end_date = end_date


class PurchaseSupportResponseResult(Model):
    """A list of containing support plan result.

    :param plan_type: Possible values include: 'basic_support',
     'developer_support', 'standard_support', 'prodirect_support'
    :type plan_type: str or ~azure.mgmt.subscription.models.enum
    :param end_date: the end date
    :type end_date: str
    """

    _attribute_map = {
        'plan_type': {'key': 'planType', 'type': 'str'},
        'end_date': {'key': 'endDate', 'type': 'str'},
    }

    def __init__(self, *, plan_type=None, end_date: str=None, **kwargs) -> None:
        super(PurchaseSupportResponseResult, self).__init__(**kwargs)
        self.plan_type = plan_type
        self.end_date = end_date


class SubscriptionName(Model):
    """The new name of the subscription.

    :param subscription_name: New subscription name
    :type subscription_name: str
    """

    _attribute_map = {
        'subscription_name': {'key': 'subscriptionName', 'type': 'str'},
    }

    def __init__(self, *, subscription_name: str=None, **kwargs) -> None:
        super(SubscriptionName, self).__init__(**kwargs)
        self.subscription_name = subscription_name


class SupportPlanName(Model):
    """The supportPlan Name.

    :param plan_type: Possible values include: 'basic_support',
     'developer_support', 'standard_support', 'prodirect_support'
    :type plan_type: str or ~azure.mgmt.subscription.models.enum
    """

    _attribute_map = {
        'plan_type': {'key': 'planType', 'type': 'str'},
    }

    def __init__(self, *, plan_type=None, **kwargs) -> None:
        super(SupportPlanName, self).__init__(**kwargs)
        self.plan_type = plan_type


class SupportPlanResponseResult(Model):
    """Support plan result.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar value: The list of Support plan.
    :vartype value:
     list[~azure.mgmt.subscription.models.DefaultSupportPlanResponseResult]
    :ivar next_link: The link (url) to the next page of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[DefaultSupportPlanResponseResult]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(self, **kwargs) -> None:
        super(SupportPlanResponseResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None
