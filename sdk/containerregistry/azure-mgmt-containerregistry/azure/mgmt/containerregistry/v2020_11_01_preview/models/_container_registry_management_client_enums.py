# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from enum import Enum


class ResourceIdentityType(str, Enum):

    system_assigned = "SystemAssigned"
    user_assigned = "UserAssigned"
    system_assigned_user_assigned = "SystemAssigned, UserAssigned"
    none = "None"


class PipelineOptions(str, Enum):

    overwrite_tags = "OverwriteTags"
    overwrite_blobs = "OverwriteBlobs"
    delete_source_blob_on_success = "DeleteSourceBlobOnSuccess"
    continue_on_errors = "ContinueOnErrors"


class ProvisioningState(str, Enum):

    creating = "Creating"
    updating = "Updating"
    deleting = "Deleting"
    succeeded = "Succeeded"
    failed = "Failed"
    canceled = "Canceled"


class CreatedByType(str, Enum):

    user = "User"
    application = "Application"
    managed_identity = "ManagedIdentity"
    key = "Key"


class LastModifiedByType(str, Enum):

    user = "User"
    application = "Application"
    managed_identity = "ManagedIdentity"
    key = "Key"


class ImportMode(str, Enum):

    no_force = "NoForce"
    force = "Force"


class PipelineSourceType(str, Enum):

    azure_storage_blob_container = "AzureStorageBlobContainer"


class TriggerStatus(str, Enum):

    enabled = "Enabled"
    disabled = "Disabled"


class PipelineRunSourceType(str, Enum):

    azure_storage_blob = "AzureStorageBlob"


class PipelineRunTargetType(str, Enum):

    azure_storage_blob = "AzureStorageBlob"


class ConnectionStatus(str, Enum):

    approved = "Approved"
    pending = "Pending"
    rejected = "Rejected"
    disconnected = "Disconnected"


class ActionsRequired(str, Enum):

    none = "None"
    recreate = "Recreate"


class SkuName(str, Enum):

    classic = "Classic"
    basic = "Basic"
    standard = "Standard"
    premium = "Premium"


class SkuTier(str, Enum):

    classic = "Classic"
    basic = "Basic"
    standard = "Standard"
    premium = "Premium"


class DefaultAction(str, Enum):

    allow = "Allow"
    deny = "Deny"


class Action(str, Enum):

    allow = "Allow"


class PolicyStatus(str, Enum):

    enabled = "enabled"
    disabled = "disabled"


class TrustPolicyType(str, Enum):

    notary = "Notary"


class EncryptionStatus(str, Enum):

    enabled = "enabled"
    disabled = "disabled"


class PublicNetworkAccess(str, Enum):

    enabled = "Enabled"
    disabled = "Disabled"


class PasswordName(str, Enum):

    password = "password"
    password2 = "password2"


class RegistryUsageUnit(str, Enum):

    count = "Count"
    bytes = "Bytes"


class WebhookStatus(str, Enum):

    enabled = "enabled"
    disabled = "disabled"


class WebhookAction(str, Enum):

    push = "push"
    delete = "delete"
    quarantine = "quarantine"
    chart_push = "chart_push"
    chart_delete = "chart_delete"
